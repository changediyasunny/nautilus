cscope 15 $HOME/Desktop/nautilus/src/lua_src               0000509007
	@lapi.c

11 
	#œpi_c


	)

12 
	#LUA_CORE


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/lua.h
"

16 
	~"lua/œpi.h
"

17 
	~"lua/ldebug.h
"

18 
	~"lua/ldo.h
"

19 
	~"lua/lfunc.h
"

20 
	~"lua/lgc.h
"

21 
	~"lua/lmem.h
"

22 
	~"lua/lobje˘.h
"

23 
	~"lua/l°©e.h
"

24 
	~"lua/l°rög.h
"

25 
	~"lua/…abÀ.h
"

26 
	~"lua/…m.h
"

27 
	~"lua/lundump.h
"

28 
	~"lua/lvm.h
"

32 c⁄° 
	glua_idít
[] =

33 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

34 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

38 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

41 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

44 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

47 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

49 
	#≠i_checkvÆidödex
(
L
, 
o
Ë
	`≠i_check
(L, 
	`isvÆid
(o), "övÆid index")

	)

51 
	#≠i_check°acködex
(
L
, 
i
, 
o
) \

52 
	`≠i_check
(
L
, 
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

55 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

56 
CÆlInfo
 *
ci
 = 
L
->ci;

57 i‡(
idx
 > 0) {

58 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

59 
	`≠i_check
(
L
, 
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

60 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

61  
o
;

63 i‡(!
	`i•£udo
(
idx
)) {

64 
	`≠i_check
(
L
, 
idx
 !0 && -idx <L->
t›
 - (
ci
->
func
 + 1), "invalid index");

65  
L
->
t›
 + 
idx
;

67 i‡(
idx
 =
LUA_REGISTRYINDEX
)

68  &
	`G
(
L
)->
l_ªgi°ry
;

70 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

71 
	`≠i_check
(
L
, 
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

72 i‡(
	`âi¶cf
(
ci
->
func
))

73  
NONVALIDVALUE
;

75 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

76  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

79 
	}
}

86 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

87 
size
 = *(*)
ud
;

88 
	`luaD_grow°ack
(
L
, 
size
);

89 
	}
}

92 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
size
) {

93 
ªs
;

94 
CÆlInfo
 *
ci
 = 
L
->ci;

95 
	`lua_lock
(
L
);

96 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
size
)

97 
ªs
 = 1;

99 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

100 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
size
)

101 
ªs
 = 0;

103 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
size
Ë=
LUA_OK
);

105 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
size
)

106 
ci
->
t›
 = 
L
->t› + 
size
;

107 
	`lua_u∆ock
(
L
);

108  
ªs
;

109 
	}
}

112 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

113 
i
;

114 i‡(
‰om
 =
to
) ;

115 
	`lua_lock
(
to
);

116 
	`≠i_check√Àms
(
‰om
, 
n
);

117 
	`≠i_check
(
‰om
, 
	`G
(‰omË=G(
to
), "movingámong independent states");

118 
	`≠i_check
(
‰om
, 
to
->
ci
->
t›
 -Åo->t› >
n
, "notÉnoughÉlementsÅo move");

119 
‰om
->
t›
 -
n
;

120 
i
 = 0; i < 
n
; i++) {

121 
	`£tobj2s
(
to
,Åo->
t›
++, 
‰om
->t› + 
i
);

123 
	`lua_u∆ock
(
to
);

124 
	}
}

127 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

128 
lua_CFun˘i⁄
 
ﬁd
;

129 
	`lua_lock
(
L
);

130 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

131 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

132 
	`lua_u∆ock
(
L
);

133  
ﬁd
;

134 
	}
}

137 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

138 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

139 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

140  
	`G
(
L
)->
vîsi⁄
;

141 
	}
}

153 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

154  (
idx
 > 0 || 
	`i•£udo
(idx))

155 ? 
idx


156 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
 + 
idx
);

157 
	}
}

160 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

161  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

162 
	}
}

165 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

166 
StkId
 
func
 = 
L
->
ci
->func;

167 
	`lua_lock
(
L
);

168 i‡(
idx
 >= 0) {

169 
	`≠i_check
(
L
, 
idx
 <L->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

170 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

171 
	`£äûvÆue
(
L
->
t›
++);

172 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

175 
	`≠i_check
(
L
, -(
idx
+1Ë<(L->
t›
 - (
func
 + 1)), "invalidÇewÅop");

176 
L
->
t›
 +
idx
+1;

178 
	`lua_u∆ock
(
L
);

179 
	}
}

182 
LUA_API
 
	$lua_ªmove
 (
lua_Sèã
 *
L
, 
idx
) {

183 
StkId
 
p
;

184 
	`lua_lock
(
L
);

185 
p
 = 
	`ödex2addr
(
L
, 
idx
);

186 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

187 ++
p
 < 
L
->
t›
Ë
	`£tobjs2s
(L,Ö-1,Ö);

188 
L
->
t›
--;

189 
	`lua_u∆ock
(
L
);

190 
	}
}

193 
LUA_API
 
	$lua_ö£π
 (
lua_Sèã
 *
L
, 
idx
) {

194 
StkId
 
p
;

195 
StkId
 
q
;

196 
	`lua_lock
(
L
);

197 
p
 = 
	`ödex2addr
(
L
, 
idx
);

198 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

199 
q
 = 
L
->
t›
; q > 
p
; q--)

200 
	`£tobjs2s
(
L
, 
q
, q - 1);

201 
	`£tobjs2s
(
L
, 
p
, L->
t›
);

202 
	`lua_u∆ock
(
L
);

203 
	}
}

206 
	$movëo
 (
lua_Sèã
 *
L
, 
TVÆue
 *
‰
, 
idx
) {

207 
TVÆue
 *
to
 = 
	`ödex2addr
(
L
, 
idx
);

208 
	`≠i_checkvÆidödex
(
L
, 
to
);

209 
	`£tobj
(
L
, 
to
, 
‰
);

210 i‡(
idx
 < 
LUA_REGISTRYINDEX
)

211 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

214 
	}
}

217 
LUA_API
 
	$lua_ª∂a˚
 (
lua_Sèã
 *
L
, 
idx
) {

218 
	`lua_lock
(
L
);

219 
	`≠i_check√Àms
(
L
, 1);

220 
	`movëo
(
L
, L->
t›
 - 1, 
idx
);

221 
L
->
t›
--;

222 
	`lua_u∆ock
(
L
);

223 
	}
}

226 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

227 
TVÆue
 *
‰
;

228 
	`lua_lock
(
L
);

229 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

230 
	`movëo
(
L
, 
‰
, 
toidx
);

231 
	`lua_u∆ock
(
L
);

232 
	}
}

235 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

236 
	`lua_lock
(
L
);

237 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

238 
	`≠i_ö¸_t›
(
L
);

239 
	`lua_u∆ock
(
L
);

240 
	}
}

249 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

250 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

251  (
	`isvÆid
(
o
Ë? 
	`ây≥nv
(oË: 
LUA_TNONE
);

252 
	}
}

255 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

256 
	`UNUSED
(
L
);

257  
	`ây≥«me
(
t
);

258 
	}
}

261 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

262 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

263  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

264 
	}
}

267 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

268 
TVÆue
 
n
;

269 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

270  
	`t⁄umbî
(
o
, &
n
);

271 
	}
}

274 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

275 
t
 = 
	`lua_ty≥
(
L
, 
idx
);

276  (
t
 =
LUA_TSTRING
 ||Å =
LUA_TNUMBER
);

277 
	}
}

280 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

281 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

282  (
	`âisu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

283 
	}
}

286 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

287 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

288 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

289  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

290 
	}
}

293 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

294 
StkId
 
o1
;

295 
StkId
 
o2
;

296 
	`lua_lock
(
L
);

297 i‡(
›
 !
LUA_OPUNM
)

298 
	`≠i_check√Àms
(
L
, 2);

300 
	`≠i_check√Àms
(
L
, 1);

301 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

302 
L
->
t›
++;

304 
o1
 = 
L
->
t›
 - 2;

305 
o2
 = 
L
->
t›
 - 1;

306 i‡(
	`âi¢umbî
(
o1
Ë&&Åti¢umbî(
o2
)) {

307 
	`£ävÆue
(
o1
, 
	`luaO_¨ôh
(
›
, 
	`nvÆue
(o1),ÇvÆue(
o2
)));

310 
	`luaV_¨ôh
(
L
, 
o1
, o1, 
o2
, 
	`ˇ°
(
TMS
, 
›
 - 
LUA_OPADD
 + 
TM_ADD
));

311 
L
->
t›
--;

312 
	`lua_u∆ock
(
L
);

313 
	}
}

316 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

317 
StkId
 
o1
, 
o2
;

318 
i
 = 0;

319 
	`lua_lock
(
L
);

320 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

321 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

322 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

323 
›
) {

324 
LUA_OPEQ
: 
i
 = 
	`equÆobj
(
L
, 
o1
, 
o2
); ;

325 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

326 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

327 : 
	`≠i_check
(
L
, 0, "invalid option");

330 
	`lua_u∆ock
(
L
);

331  
i
;

332 
	}
}

335 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
i¢um
) {

336 
TVÆue
 
n
;

337 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

338 i‡(
	`t⁄umbî
(
o
, &
n
)) {

339 i‡(
i¢um
) *isnum = 1;

340  
	`nvÆue
(
o
);

343 i‡(
i¢um
) *isnum = 0;

346 
	}
}

349 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
i¢um
) {

350 
TVÆue
 
n
;

351 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

352 i‡(
	`t⁄umbî
(
o
, &
n
)) {

353 
lua_I¡egî
 
ªs
;

354 
lua_Numbî
 
num
 = 
	`nvÆue
(
o
);

355 
	`lua_numbî2öãgî
(
ªs
, 
num
);

356 i‡(
i¢um
) *isnum = 1;

357  
ªs
;

360 i‡(
i¢um
) *isnum = 0;

363 
	}
}

366 
LUA_API
 
lua_Unsig√d
 
	$lua_tounsig√dx
 (
lua_Sèã
 *
L
, 
idx
, *
i¢um
) {

367 
TVÆue
 
n
;

368 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

369 i‡(
	`t⁄umbî
(
o
, &
n
)) {

370 
lua_Unsig√d
 
ªs
;

371 
lua_Numbî
 
num
 = 
	`nvÆue
(
o
);

372 
	`lua_numbî2unsig√d
(
ªs
, 
num
);

373 i‡(
i¢um
) *isnum = 1;

374  
ªs
;

377 i‡(
i¢um
) *isnum = 0;

380 
	}
}

383 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

384 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

385  !
	`l_isÁl£
(
o
);

386 
	}
}

389 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

390 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

391 i‡(!
	`âis°rög
(
o
)) {

392 
	`lua_lock
(
L
);

393 i‡(!
	`luaV_to°rög
(
L
, 
o
)) {

394 i‡(
Àn
 !
NULL
) *len = 0;

395 
	`lua_u∆ock
(
L
);

396  
NULL
;

398 
	`luaC_checkGC
(
L
);

399 
o
 = 
	`ödex2addr
(
L
, 
idx
);

400 
	`lua_u∆ock
(
L
);

402 i‡(
Àn
 !
NULL
Ë*À¿
	`tsvÆue
(
o
)->len;

403  
	`svÆue
(
o
);

404 
	}
}

407 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

408 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

409 
	`ây≥nv
(
o
)) {

410 
LUA_TSTRING
:  
	`tsvÆue
(
o
)->
Àn
;

411 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

412 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

415 
	}
}

418 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

419 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

420 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

421 i‡(
	`âisC˛osuª
(
o
))

422  
	`˛CvÆue
(
o
)->
f
;

423  
NULL
;

424 
	}
}

427 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

428 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

429 
	`ây≥nv
(
o
)) {

430 
LUA_TUSERDATA
:  (
	`øwuvÆue
(
o
) + 1);

431 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

432 :  
NULL
;

434 
	}
}

437 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

438 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

439  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

440 
	}
}

443 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

444 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

445 
	`ây≥
(
o
)) {

446 
LUA_TTABLE
:  
	`hvÆue
(
o
);

447 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

448 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

449 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

450 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

451 
LUA_TUSERDATA
:

452 
LUA_TLIGHTUSERDATA
:

453  
	`lua_tou£rd©a
(
L
, 
idx
);

454 :  
NULL
;

456 
	}
}

465 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

466 
	`lua_lock
(
L
);

467 
	`£äûvÆue
(
L
->
t›
);

468 
	`≠i_ö¸_t›
(
L
);

469 
	`lua_u∆ock
(
L
);

470 
	}
}

473 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

474 
	`lua_lock
(
L
);

475 
	`£ävÆue
(
L
->
t›
, 
n
);

476 
	`luai_checknum
(
L
, L->
t›
,

477 
	`luaG_ru√º‹
(
L
, "C API -áttemptÅoÖushá signaling NaN"));

478 
	`≠i_ö¸_t›
(
L
);

479 
	`lua_u∆ock
(
L
);

480 
	}
}

483 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

484 
	`lua_lock
(
L
);

485 
	`£ävÆue
(
L
->
t›
, 
	`ˇ°_num
(
n
));

486 
	`≠i_ö¸_t›
(
L
);

487 
	`lua_u∆ock
(
L
);

488 
	}
}

491 
LUA_API
 
	$lua_pushunsig√d
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
u
) {

492 
lua_Numbî
 
n
;

493 
	`lua_lock
(
L
);

494 
n
 = 
	`lua_unsig√d2numbî
(
u
);

495 
	`£ävÆue
(
L
->
t›
, 
n
);

496 
	`≠i_ö¸_t›
(
L
);

497 
	`lua_u∆ock
(
L
);

498 
	}
}

501 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

502 
TSåög
 *
ts
;

503 
	`lua_lock
(
L
);

504 
	`luaC_checkGC
(
L
);

505 
ts
 = 
	`luaS_√wl°r
(
L
, 
s
, 
Àn
);

506 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

507 
	`≠i_ö¸_t›
(
L
);

508 
	`lua_u∆ock
(
L
);

509  
	`gë°r
(
ts
);

510 
	}
}

513 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

514 i‡(
s
 =
NULL
) {

515 
	`lua_pushnû
(
L
);

516  
NULL
;

519 
TSåög
 *
ts
;

520 
	`lua_lock
(
L
);

521 
	`luaC_checkGC
(
L
);

522 
ts
 = 
	`luaS_√w
(
L
, 
s
);

523 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

524 
	`≠i_ö¸_t›
(
L
);

525 
	`lua_u∆ock
(
L
);

526  
	`gë°r
(
ts
);

528 
	}
}

531 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

532 
va_li°
 
¨gp
) {

533 c⁄° *
ªt
;

534 
	`lua_lock
(
L
);

535 
	`luaC_checkGC
(
L
);

536 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

537 
	`lua_u∆ock
(
L
);

538  
ªt
;

539 
	}
}

542 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

543 c⁄° *
ªt
;

544 
va_li°
 
¨gp
;

545 
	`lua_lock
(
L
);

546 
	`luaC_checkGC
(
L
);

547 
	`va_°¨t
(
¨gp
, 
fmt
);

548 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

549 
	`va_íd
(
¨gp
);

550 
	`lua_u∆ock
(
L
);

551  
ªt
;

552 
	}
}

555 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

556 
	`lua_lock
(
L
);

557 
	`¥ötk
("\nÜua_pushcclosure |Üua_lock() done");

558 i‡(
n
 == 0) {

559 
	`¥ötk
("\nÜua_pushcclosure | ifÜoop done");

560 
	`£tfvÆue
(
L
->
t›
, 
‚
);

561 
	`¥ötk
("\nÜua_pushcclosure | setfvalue done");

564 
Closuª
 *
˛
;

565 
	`≠i_check√Àms
(
L
, 
n
);

566 
	`≠i_check
(
L
, 
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

567 
	`luaC_checkGC
(
L
);

568 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

569 
˛
->
c
.
f
 = 
‚
;

570 
L
->
t›
 -
n
;

571 
n
--)

572 
	`£tobj2n
(
L
, &
˛
->
c
.
upvÆue
[
n
], L->
t›
 +Ç);

573 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

575 
	`≠i_ö¸_t›
(
L
);

576 
	`¥ötk
("\nÜua_pushcclosure |ápi_incr_top() done");

577 
	`lua_u∆ock
(
L
);

578 
	`¥ötk
("\nÜua_pushcclosure |Üua_unlock() done");

579 
	}
}

582 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

583 
	`lua_lock
(
L
);

584 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

585 
	`≠i_ö¸_t›
(
L
);

586 
	`lua_u∆ock
(
L
);

587 
	}
}

590 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

591 
	`lua_lock
(
L
);

592 
	`£çvÆue
(
L
->
t›
, 
p
);

593 
	`≠i_ö¸_t›
(
L
);

594 
	`lua_u∆ock
(
L
);

595 
	}
}

598 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

599 
	`lua_lock
(
L
);

600 
	`£âhvÆue
(
L
, L->
t›
, L);

601 
	`≠i_ö¸_t›
(
L
);

602 
	`lua_u∆ock
(
L
);

603  (
	`G
(
L
)->
maöthªad
 == L);

604 
	}
}

613 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
v¨
) {

614 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

615 c⁄° 
TVÆue
 *
gt
;

616 
	`lua_lock
(
L
);

617 
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

618 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
v¨
));

619 
	`luaV_gëèbÀ
(
L
, 
gt
, L->
t›
 - 1, L->top - 1);

620 
	`lua_u∆ock
(
L
);

621 
	}
}

624 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

625 
StkId
 
t
;

626 
	`lua_lock
(
L
);

627 
t
 = 
	`ödex2addr
(
L
, 
idx
);

628 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

629 
	`lua_u∆ock
(
L
);

630 
	}
}

633 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

634 
StkId
 
t
;

635 
	`lua_lock
(
L
);

636 
t
 = 
	`ödex2addr
(
L
, 
idx
);

637 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
k
));

638 
	`≠i_ö¸_t›
(
L
);

639 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

640 
	`lua_u∆ock
(
L
);

641 
	}
}

644 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

645 
StkId
 
t
;

646 
	`lua_lock
(
L
);

647 
t
 = 
	`ödex2addr
(
L
, 
idx
);

648 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

649 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

650 
	`lua_u∆ock
(
L
);

651 
	}
}

654 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

655 
StkId
 
t
;

656 
	`lua_lock
(
L
);

657 
t
 = 
	`ödex2addr
(
L
, 
idx
);

658 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

659 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

660 
	`≠i_ö¸_t›
(
L
);

661 
	`lua_u∆ock
(
L
);

662 
	}
}

665 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

666 
StkId
 
t
;

667 
TVÆue
 
k
;

668 
	`lua_lock
(
L
);

669 
t
 = 
	`ödex2addr
(
L
, 
idx
);

670 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

671 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

672 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

673 
	`≠i_ö¸_t›
(
L
);

674 
	`lua_u∆ock
(
L
);

675 
	}
}

678 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

679 
TabÀ
 *
t
;

680 
	`lua_lock
(
L
);

681 
	`luaC_checkGC
(
L
);

682 
t
 = 
	`luaH_√w
(
L
);

683 
	`£thvÆue
(
L
, L->
t›
, 
t
);

684 
	`≠i_ö¸_t›
(
L
);

685 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

686 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

687 
	`lua_u∆ock
(
L
);

688 
	}
}

691 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

692 c⁄° 
TVÆue
 *
obj
;

693 
TabÀ
 *
mt
 = 
NULL
;

694 
ªs
;

695 
	`lua_lock
(
L
);

696 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

697 
	`ây≥nv
(
obj
)) {

698 
LUA_TTABLE
:

699 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

701 
LUA_TUSERDATA
:

702 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

705 
mt
 = 
	`G
(
L
)->mt[
	`ây≥nv
(
obj
)];

708 i‡(
mt
 =
NULL
)

709 
ªs
 = 0;

711 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

712 
	`≠i_ö¸_t›
(
L
);

713 
ªs
 = 1;

715 
	`lua_u∆ock
(
L
);

716  
ªs
;

717 
	}
}

720 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

721 
StkId
 
o
;

722 
	`lua_lock
(
L
);

723 
o
 = 
	`ödex2addr
(
L
, 
idx
);

724 
	`≠i_check
(
L
, 
	`âisu£rd©a
(
o
), "userdataÉxpected");

725 i‡(
	`uvÆue
(
o
)->
ív
) {

726 
	`£thvÆue
(
L
, L->
t›
, 
	`uvÆue
(
o
)->
ív
);

728 
	`£äûvÆue
(
L
->
t›
);

729 
	`≠i_ö¸_t›
(
L
);

730 
	`lua_u∆ock
(
L
);

731 
	}
}

739 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
v¨
) {

740 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

741 c⁄° 
TVÆue
 *
gt
;

742 
	`lua_lock
(
L
);

743 
	`≠i_check√Àms
(
L
, 1);

744 
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

745 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
v¨
));

746 
	`luaV_£âabÀ
(
L
, 
gt
, L->
t›
 - 1, L->top - 2);

747 
L
->
t›
 -= 2;

748 
	`lua_u∆ock
(
L
);

749 
	}
}

752 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

753 
StkId
 
t
;

754 
	`lua_lock
(
L
);

755 
	`≠i_check√Àms
(
L
, 2);

756 
t
 = 
	`ödex2addr
(
L
, 
idx
);

757 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

758 
L
->
t›
 -= 2;

759 
	`lua_u∆ock
(
L
);

760 
	}
}

763 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

764 
StkId
 
t
;

765 
	`lua_lock
(
L
);

766 
	`≠i_check√Àms
(
L
, 1);

767 
t
 = 
	`ödex2addr
(
L
, 
idx
);

768 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
k
));

769 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 2);

770 
L
->
t›
 -= 2;

771 
	`lua_u∆ock
(
L
);

772 
	}
}

775 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

776 
StkId
 
t
;

777 
	`lua_lock
(
L
);

778 
	`≠i_check√Àms
(
L
, 2);

779 
t
 = 
	`ödex2addr
(
L
, 
idx
);

780 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

781 
	`£tobj2t
(
L
, 
	`luaH_£t
(L, 
	`hvÆue
(
t
), L->
t›
-2), L->top-1);

782 
	`övÆid©eTMˇche
(
	`hvÆue
(
t
));

783 
	`luaC_b¨rõrback
(
L
, 
	`gcvÆue
(
t
), L->
t›
-1);

784 
L
->
t›
 -= 2;

785 
	`lua_u∆ock
(
L
);

786 
	}
}

789 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

790 
StkId
 
t
;

791 
	`lua_lock
(
L
);

792 
	`≠i_check√Àms
(
L
, 1);

793 
t
 = 
	`ödex2addr
(
L
, 
idx
);

794 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

795 
	`luaH_£töt
(
L
, 
	`hvÆue
(
t
), 
n
, L->
t›
 - 1);

796 
	`luaC_b¨rõrback
(
L
, 
	`gcvÆue
(
t
), L->
t›
-1);

797 
L
->
t›
--;

798 
	`lua_u∆ock
(
L
);

799 
	}
}

802 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

803 
StkId
 
t
;

804 
TVÆue
 
k
;

805 
	`lua_lock
(
L
);

806 
	`≠i_check√Àms
(
L
, 1);

807 
t
 = 
	`ödex2addr
(
L
, 
idx
);

808 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

809 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

810 
	`£tobj2t
(
L
, 
	`luaH_£t
(L, 
	`hvÆue
(
t
), &
k
), L->
t›
 - 1);

811 
	`luaC_b¨rõrback
(
L
, 
	`gcvÆue
(
t
), L->
t›
 - 1);

812 
L
->
t›
--;

813 
	`lua_u∆ock
(
L
);

814 
	}
}

817 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

818 
TVÆue
 *
obj
;

819 
TabÀ
 *
mt
;

820 
	`lua_lock
(
L
);

821 
	`≠i_check√Àms
(
L
, 1);

822 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

823 i‡(
	`âi¢û
(
L
->
t›
 - 1))

824 
mt
 = 
NULL
;

826 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

827 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

829 
	`ây≥nv
(
obj
)) {

830 
LUA_TTABLE
: {

831 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

832 i‡(
mt
) {

833 
	`luaC_objb¨rõrback
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

834 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

838 
LUA_TUSERDATA
: {

839 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

840 i‡(
mt
) {

841 
	`luaC_objb¨rõr
(
L
, 
	`øwuvÆue
(
obj
), 
mt
);

842 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

847 
	`G
(
L
)->
mt
[
	`ây≥nv
(
obj
)] = mt;

851 
L
->
t›
--;

852 
	`lua_u∆ock
(
L
);

854 
	}
}

857 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

858 
StkId
 
o
;

859 
	`lua_lock
(
L
);

860 
	`≠i_check√Àms
(
L
, 1);

861 
o
 = 
	`ödex2addr
(
L
, 
idx
);

862 
	`≠i_check
(
L
, 
	`âisu£rd©a
(
o
), "userdataÉxpected");

863 i‡(
	`âi¢û
(
L
->
t›
 - 1))

864 
	`uvÆue
(
o
)->
ív
 = 
NULL
;

866 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

867 
	`uvÆue
(
o
)->
ív
 = 
	`hvÆue
(
L
->
t›
 - 1);

868 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
o
), 
	`hvÆue
(L->
t›
 - 1));

870 
L
->
t›
--;

871 
	`lua_u∆ock
(
L
);

872 
	}
}

880 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

881 
	`≠i_check
(
L
, (
ƒ
Ë=
LUA_MULTRET
 || (L->
ci
->
t›
 - L->t› >“rË- (
«
)), \

882 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

885 
LUA_API
 
	$lua_gë˘x
 (
lua_Sèã
 *
L
, *
˘x
) {

886 i‡(
L
->
ci
->
ˇŒ°©us
 & 
CIST_YIELDED
) {

887 i‡(
˘x
Ë*˘x = 
L
->
ci
->
u
.
c
.ctx;

888  
L
->
ci
->
u
.
c
.
°©us
;

890  
LUA_OK
;

891 
	}
}

894 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
˘x
,

895 
lua_CFun˘i⁄
 
k
) {

896 
StkId
 
func
;

897 
	`lua_lock
(
L
);

898 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

900 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

901 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

902 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

903 
func
 = 
L
->
t›
 - (
«rgs
+1);

904 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

905 
L
->
ci
->
u
.
c
.
k
 = k;

906 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

907 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
, 1);

910 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
, 0);

911 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

912 
	`lua_u∆ock
(
L
);

913 
	}
}

920 
	sCÆlS
 {

921 
StkId
 
	mfunc
;

922 
	mƒesu…s
;

926 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

927 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

928 
	`luaD_ˇŒ
(
L
, 
c
->
func
, c->
ƒesu…s
, 0);

929 
	}
}

933 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

934 
˘x
, 
lua_CFun˘i⁄
 
k
) {

935 
CÆlS
 
c
;

936 
°©us
;

937 
±rdiff_t
 
func
;

938 
	`lua_lock
(
L
);

939 
	`¥ötk
("\nÜua_Pcallk |Üock() success");

940 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

942 
	`¥ötk
("\nÜua_pcallk |ápi-check success.");

943 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

944 
	`¥ötk
("\nÜua_pcallk |ápi-checklms success.");

945 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

947 
	`¥ötk
("\nÜua_pcallk |ápi-check2 success.");

948 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

950 
	`¥ötk
("\nÜua_pcallk | checkÑesiults success.");

951 i‡(
îrfunc
 == 0)

952 
func
 = 0;

954 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

955 
	`≠i_check°acködex
(
L
, 
îrfunc
, 
o
);

956 
func
 = 
	`ßve°ack
(
L
, 
o
);

958 
	`¥ötk
("\nÜua_pcallk | if-else-errfunbc success.");

959 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

960 
	`¥ötk
("\nÜua_pcallk | sunc called... success.");

961 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

962 
	`¥ötk
("\nÜua_pcallk |Üua_docall | inside IF- called... success.");

963 
c
.
ƒesu…s
 =Çresults;

964 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

965 
	`¥ötk
("\nÜua_pcallk |Üua_docall | d-call called... success.");

968 
	`¥ötk
("\nÜua_pcallk |Üua_docall | inside ELSE called... success.");

969 
CÆlInfo
 *
ci
 = 
L
->ci;

970 
ci
->
u
.
c
.
k
 = k;

971 
ci
->
u
.
c
.
˘x
 = ctx;

973 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

974 
ci
->
u
.
c
.
ﬁd_Ælowhook
 = 
L
->
Ælowhook
;

975 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

976 
L
->
îrfunc
 = 
func
;

978 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

979 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
, 1);

980 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

981 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

982 
°©us
 = 
LUA_OK
;

984 
	`¥ötk
("\nÜua_pcallk | before finalÑesult success.");

985 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

986 
	`¥ötk
("\nÜua_pcallk |ádjustresult success.");

987 
	`lua_u∆ock
(
L
);

988  
°©us
;

989 
	}
}

992 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

993 c⁄° *
chunk«me
, c⁄° *
mode
) {

994 
ZIO
 
z
;

995 
°©us
;

996 
	`lua_lock
(
L
);

997 i‡(!
chunk«me
) chunkname = "?";

998 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

999 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

1000 i‡(
°©us
 =
LUA_OK
) {

1001 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

1002 i‡(
f
->
nupvÆues
 == 1) {

1004 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

1005 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

1007 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

1008 
	`luaC_b¨rõr
(
L
, 
f
->
upvÆs
[0], 
gt
);

1011 
	`lua_u∆ock
(
L
);

1012  
°©us
;

1013 
	}
}

1016 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
) {

1017 
°©us
;

1018 
TVÆue
 *
o
;

1019 
	`lua_lock
(
L
);

1020 
	`≠i_check√Àms
(
L
, 1);

1021 
o
 = 
L
->
t›
 - 1;

1022 i‡(
	`isLfun˘i⁄
(
o
))

1023 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 0);

1025 
°©us
 = 1;

1026 
	`lua_u∆ock
(
L
);

1027  
°©us
;

1028 
	}
}

1031 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1032  
L
->
°©us
;

1033 
	}
}

1040 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1041 
ªs
 = 0;

1042 
globÆ_Sèã
 *
g
;

1043 
	`lua_lock
(
L
);

1044 
g
 = 
	`G
(
L
);

1045 
wh©
) {

1046 
LUA_GCSTOP
: {

1047 
g
->
g¸u¬ög
 = 0;

1050 
LUA_GCRESTART
: {

1051 
	`luaE_£tdebt
(
g
, 0);

1052 
g
->
g¸u¬ög
 = 1;

1055 
LUA_GCCOLLECT
: {

1056 
	`luaC_fuŒgc
(
L
, 0);

1059 
LUA_GCCOUNT
: {

1061 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1064 
LUA_GCCOUNTB
: {

1065 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1068 
LUA_GCSTEP
: {

1069 i‡(
g
->
gcköd
 =
KGC_GEN
) {

1070 
ªs
 = (
g
->
GCe°im©e
 == 0);

1071 
	`luaC_f‹˚°ï
(
L
);

1074 
lu_mem
 
debt
 = 
	`ˇ°
÷u_mem, 
d©a
Ë* 1024 - 
GCSTEPSIZE
;

1075 i‡(
g
->
g¸u¬ög
)

1076 
debt
 +
g
->
GCdebt
;

1077 
	`luaE_£tdebt
(
g
, 
debt
);

1078 
	`luaC_f‹˚°ï
(
L
);

1079 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1080 
ªs
 = 1;

1084 
LUA_GCSETPAUSE
: {

1085 
ªs
 = 
g
->
g˝au£
;

1086 
g
->
g˝au£
 = 
d©a
;

1089 
LUA_GCSETMAJORINC
: {

1090 
ªs
 = 
g
->
gcmaj‹öc
;

1091 
g
->
gcmaj‹öc
 = 
d©a
;

1094 
LUA_GCSETSTEPMUL
: {

1095 
ªs
 = 
g
->
gc°ïmul
;

1096 
g
->
gc°ïmul
 = 
d©a
;

1099 
LUA_GCISRUNNING
: {

1100 
ªs
 = 
g
->
g¸u¬ög
;

1103 
LUA_GCGEN
: {

1104 
	`luaC_ch™gemode
(
L
, 
KGC_GEN
);

1107 
LUA_GCINC
: {

1108 
	`luaC_ch™gemode
(
L
, 
KGC_NORMAL
);

1111 : 
ªs
 = -1;

1113 
	`lua_u∆ock
(
L
);

1114  
ªs
;

1115 
	}
}

1124 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1125 
	`lua_lock
(
L
);

1126 
	`≠i_check√Àms
(
L
, 1);

1127 
	`luaG_îr‹msg
(
L
);

1130 
	}
}

1133 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1134 
StkId
 
t
;

1135 
m‹e
;

1136 
	`lua_lock
(
L
);

1137 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1138 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

1139 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1140 i‡(
m‹e
) {

1141 
	`≠i_ö¸_t›
(
L
);

1144 
L
->
t›
 -= 1;

1145 
	`lua_u∆ock
(
L
);

1146  
m‹e
;

1147 
	}
}

1150 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1151 
	`lua_lock
(
L
);

1152 
	`≠i_check√Àms
(
L
, 
n
);

1153 i‡(
n
 >= 2) {

1154 
	`luaC_checkGC
(
L
);

1155 
	`luaV_c⁄ˇt
(
L
, 
n
);

1157 i‡(
n
 == 0) {

1158 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1159 
	`≠i_ö¸_t›
(
L
);

1162 
	`lua_u∆ock
(
L
);

1163 
	}
}

1166 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1167 
StkId
 
t
;

1168 
	`lua_lock
(
L
);

1169 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1170 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1171 
	`≠i_ö¸_t›
(
L
);

1172 
	`lua_u∆ock
(
L
);

1173 
	}
}

1176 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1177 
lua_AŒoc
 
f
;

1178 
	`lua_lock
(
L
);

1179 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1180 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1181 
	`lua_u∆ock
(
L
);

1182  
f
;

1183 
	}
}

1186 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1187 
	`lua_lock
(
L
);

1188 
	`G
(
L
)->
ud
 = ud;

1189 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1190 
	`lua_u∆ock
(
L
);

1191 
	}
}

1194 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1195 
Ud©a
 *
u
;

1196 
	`lua_lock
(
L
);

1197 
	`luaC_checkGC
(
L
);

1198 
u
 = 
	`luaS_√wud©a
(
L
, 
size
, 
NULL
);

1199 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1200 
	`≠i_ö¸_t›
(
L
);

1201 
	`lua_u∆ock
(
L
);

1202  
u
 + 1;

1203 
	}
}

1207 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1208 
GCObje˘
 **
ow√r
) {

1209 
	`ây≥
(
fi
)) {

1210 
LUA_TCCL
: {

1211 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1212 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1213 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1214 i‡(
ow√r
Ë*ow√∏
	`obj2gco
(
f
);

1217 
LUA_TLCL
: {

1218 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1219 
TSåög
 *
«me
;

1220 
PrŸo
 *
p
 = 
f
->p;

1221 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1222 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1223 i‡(
ow√r
Ë*ow√∏
	`obj2gco
(
f
->
upvÆs
[
n
 - 1]);

1224 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1225  (
«me
 =
NULL
Ë? "" : 
	`gë°r
(name);

1227 :  
NULL
;

1229 
	}
}

1232 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1233 c⁄° *
«me
;

1234 
TVÆue
 *
vÆ
 = 
NULL
;

1235 
	`lua_lock
(
L
);

1236 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
);

1237 i‡(
«me
) {

1238 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1239 
	`≠i_ö¸_t›
(
L
);

1241 
	`lua_u∆ock
(
L
);

1242  
«me
;

1243 
	}
}

1246 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1247 c⁄° *
«me
;

1248 
TVÆue
 *
vÆ
 = 
NULL
;

1249 
GCObje˘
 *
ow√r
 = 
NULL
;

1250 
StkId
 
fi
;

1251 
	`lua_lock
(
L
);

1252 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1253 
	`≠i_check√Àms
(
L
, 1);

1254 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
);

1255 i‡(
«me
) {

1256 
L
->
t›
--;

1257 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1258 
	`luaC_b¨rõr
(
L
, 
ow√r
, L->
t›
);

1260 
	`lua_u∆ock
(
L
);

1261  
«me
;

1262 
	}
}

1265 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1266 
LClosuª
 *
f
;

1267 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1268 
	`≠i_check
(
L
, 
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1269 
f
 = 
	`˛LvÆue
(
fi
);

1270 
	`≠i_check
(
L
, (1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1271 i‡(
pf
Ë*p‡
f
;

1272  &
f
->
upvÆs
[
n
 - 1];

1273 
	}
}

1276 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1277 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1278 
	`ây≥
(
fi
)) {

1279 
LUA_TLCL
: {

1280  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1282 
LUA_TCCL
: {

1283 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1284 
	`≠i_check
(
L
, 1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1285  &
f
->
upvÆue
[
n
 - 1];

1288 
	`≠i_check
(
L
, 0, "closureÉxpected");

1289  
NULL
;

1292 
	}
}

1295 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1296 
fidx2
, 
n2
) {

1297 
LClosuª
 *
f1
;

1298 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1299 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1300 *
up1
 = *
up2
;

1301 
	`luaC_objb¨rõr
(
L
, 
f1
, *
up2
);

1302 
	}
}

	@lauxlib.c

13 
	gî∫o
 = 0;

14 
	~<«utûus/libccom∑t.h
>

15 
	#LIB_LUA


	)

17 
	~<«utûus/libccom∑t.h
>

18 
	~<«utûus/î∫o.h
>

20 
	~"lua/libdump.h
"

26 
	#œuxlib_c


	)

28 
	~"lua/lua.h
"

30 
	~"lua/œuxlib.h
"

40 
	#LEVELS1
 12

	)

41 
	#LEVELS2
 10

	)

49 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

50 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

52 
	`lua_pushnû
(
L
);

53 
	`lua_√xt
(
L
, -2)) {

54 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

55 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

56 
	`lua_p›
(
L
, 1);

59 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

60 
	`lua_ªmove
(
L
, -2);

61 
	`lua_pushlôîÆ
(
L
, ".");

62 
	`lua_ö£π
(
L
, -2);

63 
	`lua_c⁄ˇt
(
L
, 3);

67 
	`lua_p›
(
L
, 1);

70 
	}
}

73 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

74 
t›
 = 
	`lua_gët›
(
L
);

75 
	`lua_gëöfo
(
L
, "f", 
¨
);

76 
	`lua_pushglobÆèbÀ
(
L
);

77 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

78 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

79 
	`lua_p›
(
L
, 2);

83 
	`lua_£â›
(
L
, 
t›
);

86 
	}
}

89 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

90 i‡(*
¨
->
«mewh©
 != '\0')

91 
	`lua_pushf°rög
(
L
, "fun˘i⁄ " 
LUA_QS
, 
¨
->
«me
);

92 i‡(*
¨
->
wh©
 == 'm')

93 
	`lua_pushlôîÆ
(
L
, "main chunk");

94 i‡(*
¨
->
wh©
 == 'C') {

95 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

96 
	`lua_pushf°rög
(
L
, "fun˘i⁄ " 
LUA_QS
, 
	`lua_to°rög
(L, -1));

97 
	`lua_ªmove
(
L
, -2);

100 
	`lua_pushlôîÆ
(
L
, "?");

103 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

104 
	}
}

107 
	$cou¡Àvñs
 (
lua_Sèã
 *
L
) {

108 
lua_Debug
 
¨
;

109 
li
 = 1, 
À
 = 1;

111 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

113 
li
 < 
À
) {

114 
m
 = (
li
 + 
À
)/2;

115 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

116 
À
 = 
m
;

118  
À
 - 1;

119 
	}
}

122 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

123 c⁄° *
msg
, 
Àvñ
) {

124 
lua_Debug
 
¨
;

125 
t›
 = 
	`lua_gët›
(
L
);

126 
numÀvñs
 = 
	`cou¡Àvñs
(
L1
);

127 
m¨k
 = (
numÀvñs
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : 0;

128 i‡(
msg
Ë
	`lua_pushf°rög
(
L
, "%s\n", msg);

129 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

130 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

131 i‡(
Àvñ
 =
m¨k
) {

132 
	`lua_pushlôîÆ
(
L
, "\n\t...");

133 
Àvñ
 = 
numÀvñs
 - 
LEVELS2
;

136 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

137 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

138 i‡(
¨
.
cuºíéöe
 > 0)

139 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

140 
	`lua_pushlôîÆ
(
L
, " in ");

141 
	`pushfun˙ame
(
L
, &
¨
);

142 i‡(
¨
.
i°aûˇŒ
)

143 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

144 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

147 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

148 
	}
}

159 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
«rg
, c⁄° *
exåamsg
) {

160 
lua_Debug
 
¨
;

161 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

162  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
«rg
, 
exåamsg
);

163 
	`lua_gëöfo
(
L
, "n", &
¨
);

164 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

165 
«rg
--;

166 i‡(
«rg
 == 0)

167  
	`luaL_îr‹
(
L
, "ˇŒög " 
LUA_QS
 " on bad self (%s)",

168 
¨
.
«me
, 
exåamsg
);

170 i‡(
¨
.
«me
 =
NULL
)

171 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

172  
	`luaL_îr‹
(
L
, "badárgumíà#%dÅÿ" 
LUA_QS
 " (%s)",

173 
«rg
, 
¨
.
«me
, 
exåamsg
);

174 
	}
}

177 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
«rg
, c⁄° *
äame
) {

178 c⁄° *
msg
 = 
	`lua_pushf°rög
(
L
, "%sÉxpected, got %s",

179 
äame
, 
	`luaL_ty≥«me
(
L
, 
«rg
));

180  
	`luaL_¨gîr‹
(
L
, 
«rg
, 
msg
);

181 
	}
}

184 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
«rg
, 
èg
) {

185 
	`ty≥îr‹
(
L
, 
«rg
, 
	`lua_ty≥«me
(L, 
èg
));

186 
	}
}

189 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

190 
lua_Debug
 
¨
;

191 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

192 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

193 i‡(
¨
.
cuºíéöe
 > 0) {

194 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

198 
	`lua_pushlôîÆ
(
L
, "");

199 
	}
}

202 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

203 
va_li°
 
¨gp
;

204 
	`va_°¨t
(
¨gp
, 
fmt
);

205 
	`luaL_whîe
(
L
, 1);

206 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

207 
	`va_íd
(
¨gp
);

208 
	`lua_c⁄ˇt
(
L
, 2);

209  
	`lua_îr‹
(
L
);

210 
	}
}

213 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

214 
í
 = 
î∫o
;

215 i‡(
°©
) {

216 
	`lua_pushboﬁón
(
L
, 1);

220 
	`lua_pushnû
(
L
);

221 i‡(
‚ame
)

222 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

224 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

225 
	`lua_pushöãgî
(
L
, 
í
);

228 
	}
}

231 #i‡!
deföed
(
ö•e˘°©
)

233 #i‡
deföed
(
LUA_USE_POSIX
)

235 
	~<sys/waô.h
>

240 
	#ö•e˘°©
(
°©
,
wh©
) \

241 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

242 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

246 
	#ö•e˘°©
(
°©
,
wh©
Ë

	)

253 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

254 c⁄° *
wh©
 = "exit";

255 i‡(
°©
 == -1)

256  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

258 
	`ö•e˘°©
(
°©
, 
wh©
);

259 i‡(*
wh©
 ='e' && 
°©
 == 0)

260 
	`lua_pushboﬁón
(
L
, 1);

262 
	`lua_pushnû
(
L
);

263 
	`lua_push°rög
(
L
, 
wh©
);

264 
	`lua_pushöãgî
(
L
, 
°©
);

267 
	}
}

278 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

279 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

280 i‡(!
	`lua_i¢û
(
L
, -1))

282 
	`lua_p›
(
L
, 1);

283 
	`lua_√wèbÀ
(
L
);

284 
	`lua_pushvÆue
(
L
, -1);

285 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

287 
	}
}

290 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

291 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

292 
	`lua_£tmë©abÀ
(
L
, -2);

293 
	}
}

296 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

297 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

298 i‡(
p
 !
NULL
) {

299 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

300 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

301 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

302 
p
 = 
NULL
;

303 
	`lua_p›
(
L
, 2);

304  
p
;

307  
NULL
;

308 
	}
}

311 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

312 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

313 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

314  
p
;

315 
	}
}

326 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
«rg
, c⁄° *
def
,

327 c⁄° *c⁄° 
l°
[]) {

328 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
«rg
, def) :

329 
	`luaL_check°rög
(
L
, 
«rg
);

330 
i
;

331 
i
=0; 
l°
[i]; i++)

332 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

333  
i
;

334  
	`luaL_¨gîr‹
(
L
, 
«rg
,

335 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ " 
LUA_QS
, 
«me
));

336 
	}
}

339 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

341 c⁄° 
exåa
 = 
LUA_MINSTACK
;

342 i‡(!
	`lua_check°ack
(
L
, 
•a˚
 + 
exåa
)) {

343 i‡(
msg
)

344 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

346 
	`luaL_îr‹
(
L
, "stack overflow");

348 
	}
}

351 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
«rg
, 
t
) {

352 i‡(
	`lua_ty≥
(
L
, 
«rg
Ë!
t
)

353 
	`èg_îr‹
(
L
, 
«rg
, 
t
);

354 
	}
}

357 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
«rg
) {

358 i‡(
	`lua_ty≥
(
L
, 
«rg
Ë=
LUA_TNONE
)

359 
	`luaL_¨gîr‹
(
L
, 
«rg
, "valueÉxpected");

360 
	}
}

363 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
«rg
, 
size_t
 *
Àn
) {

364 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
«rg
, 
Àn
);

365 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
«rg
, 
LUA_TSTRING
);

366  
s
;

367 
	}
}

370 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
«rg
,

371 c⁄° *
def
, 
size_t
 *
Àn
) {

372 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
«rg
)) {

373 i‡(
Àn
)

374 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

375  
def
;

377  
	`luaL_checkl°rög
(
L
, 
«rg
, 
Àn
);

378 
	}
}

381 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
«rg
) {

382 
i¢um
;

383 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
«rg
, &
i¢um
);

384 i‡(!
i¢um
)

385 
	`èg_îr‹
(
L
, 
«rg
, 
LUA_TNUMBER
);

386  
d
;

387 
	}
}

390 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
«rg
, 
lua_Numbî
 
def
) {

391  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
«rg
, 
def
);

392 
	}
}

395 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
«rg
) {

396 
i¢um
;

397 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
«rg
, &
i¢um
);

398 i‡(!
i¢um
)

399 
	`èg_îr‹
(
L
, 
«rg
, 
LUA_TNUMBER
);

400  
d
;

401 
	}
}

404 
LUALIB_API
 
lua_Unsig√d
 
	$luaL_checkunsig√d
 (
lua_Sèã
 *
L
, 
«rg
) {

405 
i¢um
;

406 
lua_Unsig√d
 
d
 = 
	`lua_tounsig√dx
(
L
, 
«rg
, &
i¢um
);

407 i‡(!
i¢um
)

408 
	`èg_îr‹
(
L
, 
«rg
, 
LUA_TNUMBER
);

409  
d
;

410 
	}
}

413 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
«rg
,

414 
lua_I¡egî
 
def
) {

415  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
«rg
, 
def
);

416 
	}
}

419 
LUALIB_API
 
lua_Unsig√d
 
	$luaL_›tunsig√d
 (
lua_Sèã
 *
L
, 
«rg
,

420 
lua_Unsig√d
 
def
) {

421  
	`luaL_›t
(
L
, 
luaL_checkunsig√d
, 
«rg
, 
def
);

422 
	}
}

437 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

443 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

444 
lua_Sèã
 *
L
 = 
B
->L;

445 i‡(
B
->
size
 - B->
n
 < 
sz
) {

446 *
√wbuff
;

447 
size_t
 
√wsize
 = 
B
->
size
 * 2;

448 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

449 
√wsize
 = 
B
->
n
 + 
sz
;

450 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

451 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

453 
√wbuff
 = (*)
	`lua_√wu£rd©a
(
L
, 
√wsize
 * ());

455 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

456 i‡(
	`buff⁄°ack
(
B
))

457 
	`lua_ªmove
(
L
, -2);

458 
B
->
b
 = 
√wbuff
;

459 
B
->
size
 = 
√wsize
;

461  &
B
->
b
[B->
n
];

462 
	}
}

465 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

466 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

467 
	`mem˝y
(
b
, 
s
, 
l
 * ());

468 
	`luaL_addsize
(
B
, 
l
);

469 
	}
}

472 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

473 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

474 
	}
}

477 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

478 
lua_Sèã
 *
L
 = 
B
->L;

479 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

480 i‡(
	`buff⁄°ack
(
B
))

481 
	`lua_ªmove
(
L
, -2);

482 
	}
}

485 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

486 
	`luaL_addsize
(
B
, 
sz
);

487 
	`luaL_pushªsu…
(
B
);

488 
	}
}

491 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

492 
lua_Sèã
 *
L
 = 
B
->L;

493 
size_t
 
l
;

494 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

495 i‡(
	`buff⁄°ack
(
B
))

496 
	`lua_ö£π
(
L
, -2);

497 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

498 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

499 
	}
}

502 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

503 
B
->
L
 = L;

504 
B
->
b
 = B->
öôb
;

505 
B
->
n
 = 0;

506 
B
->
size
 = 
LUAL_BUFFERSIZE
;

507 
	}
}

510 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

511 
	`luaL_bufföô
(
L
, 
B
);

512  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

513 
	}
}

525 
	#‰ìli°
 0

	)

528 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

529 
ªf
;

530 i‡(
	`lua_i¢û
(
L
, -1)) {

531 
	`lua_p›
(
L
, 1);

532  
LUA_REFNIL
;

534 
t
 = 
	`lua_absödex
(
L
,Å);

535 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

536 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

537 
	`lua_p›
(
L
, 1);

538 i‡(
ªf
 != 0) {

539 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

540 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

543 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

544 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

545  
ªf
;

546 
	}
}

549 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

550 i‡(
ªf
 >= 0) {

551 
t
 = 
	`lua_absödex
(
L
,Å);

552 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

553 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

554 
	`lua_pushöãgî
(
L
, 
ªf
);

555 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

557 
	}
}

568 
	sLﬂdF
 {

569 
	mn
;

570 
FILE
 *
	mf
;

571 
	mbuff
[
LUAL_BUFFERSIZE
];

572 } 
	tLﬂdF
;

575 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

576 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

577 ()
L
;

578 i‡(
lf
->
n
 > 0) {

579 *
size
 = 
lf
->
n
;

580 
lf
->
n
 = 0;

586 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

587 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

589  
lf
->
buff
;

590 
	}
}

593 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

594 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

595 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

596 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

597 
	`lua_ªmove
(
L
, 
‚ameödex
);

598  
LUA_ERRFILE
;

599 
	}
}

602 
	$skùBOM
 (
LﬂdF
 *
lf
) {

603 c⁄° *
p
 = "\xEF\xBB\xBF";

604 
c
;

605 
lf
->
n
 = 0;

607 
c
 = 
	`gëc
(
lf
->
f
);

608 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

609 
lf
->
buff
[lf->
n
++] = 
c
;

610 } *
p
 != '\0');

611 
lf
->
n
 = 0;

612  
	`gëc
(
lf
->
f
);

613 
	}
}

623 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

624 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

625 i‡(
c
 == '#') {

627 
c
 = 
	`gëc
(
lf
->
f
);

628 } 
c
 !
EOF
 && c != '\n') ;

629 *
˝
 = 
	`gëc
(
lf
->
f
);

633 
	}
}

636 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

637 c⁄° *
mode
) {

638 
LﬂdF
 
lf
;

639 
°©us
, 
ªad°©us
;

640 
c
;

641 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

642 i‡(
fûíame
 =
NULL
) {

643 
	`lua_pushlôîÆ
(
L
, "=stdin");

644 
lf
.
f
 = 
°dö
;

647 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

648 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

649 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

651 i‡(
	`skùcommít
(&
lf
, &
c
))

652 
lf
.
buff
[lf.
n
++] = '\n';

653 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

654 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

655 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

656 
	`skùcommít
(&
lf
, &
c
);

658 i‡(
c
 !
EOF
)

659 
lf
.
buff
[lf.
n
++] = 
c
;

660 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

661 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

662 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

663 i‡(
ªad°©us
) {

664 
	`lua_£â›
(
L
, 
‚ameödex
);

665  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

667 
	`lua_ªmove
(
L
, 
‚ameödex
);

668  
°©us
;

669 
	}
}

672 
	sLﬂdS
 {

673 c⁄° *
	ms
;

674 
size_t
 
	msize
;

675 } 
	tLﬂdS
;

678 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

679 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

680 ()
L
;

681 i‡(
ls
->
size
 =0Ë 
NULL
;

682 *
size
 = 
ls
->size;

683 
ls
->
size
 = 0;

684  
ls
->
s
;

685 
	}
}

688 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

689 c⁄° *
«me
, c⁄° *
mode
) {

690 
LﬂdS
 
ls
;

691 
ls
.
s
 = 
buff
;

692 
ls
.
size
 = size;

693  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

694 
	}
}

697 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

698  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

699 
	}
}

705 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

706 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

708 
	`lua_push°rög
(
L
, 
evít
);

709 
	`lua_øwgë
(
L
, -2);

710 i‡(
	`lua_i¢û
(
L
, -1)) {

711 
	`lua_p›
(
L
, 2);

715 
	`lua_ªmove
(
L
, -2);

718 
	}
}

721 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

722 
obj
 = 
	`lua_absödex
(
L
, obj);

723 i‡(!
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
))

725 
	`lua_pushvÆue
(
L
, 
obj
);

726 
	`lua_ˇŒ
(
L
, 1, 1);

728 
	}
}

731 
LUALIB_API
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

732 
l
;

733 
i¢um
;

734 
	`lua_Àn
(
L
, 
idx
);

735 
l
 = ()
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

736 i‡(!
i¢um
)

737 
	`luaL_îr‹
(
L
, "objectÜength isÇotáÇumber");

738 
	`lua_p›
(
L
, 1);

739  
l
;

740 
	}
}

743 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

744 i‡(!
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

745 
	`lua_ty≥
(
L
, 
idx
)) {

746 
LUA_TNUMBER
:

747 
LUA_TSTRING
:

748 
	`lua_pushvÆue
(
L
, 
idx
);

750 
LUA_TBOOLEAN
:

751 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

753 
LUA_TNIL
:

754 
	`lua_pushlôîÆ
(
L
, "nil");

757 
	`lua_pushf°rög
(
L
, "%s: %p", 
	`luaL_ty≥«me
(L, 
idx
),

758 
	`lua_t›oöãr
(
L
, 
idx
));

762  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

763 
	}
}

771 #i‡
deföed
(
LUA_COMPAT_MODULE
)

773 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

774 c⁄° *
‚ame
, 
szhöt
) {

775 c⁄° *
e
;

776 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

778 
e
 = 
	`°rchr
(
‚ame
, '.');

779 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

780 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

781 
	`lua_øwgë
(
L
, -2);

782 i‡(
	`lua_i¢û
(
L
, -1)) {

783 
	`lua_p›
(
L
, 1);

784 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

785 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

786 
	`lua_pushvÆue
(
L
, -2);

787 
	`lua_£âabÀ
(
L
, -4);

789 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

790 
	`lua_p›
(
L
, 2);

791  
‚ame
;

793 
	`lua_ªmove
(
L
, -2);

794 
‚ame
 = 
e
 + 1;

795 } *
e
 == '.');

796  
NULL
;

797 
	}
}

803 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

804 
size
 = 0;

805 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

806  
size
;

807 
	}
}

816 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

817 
sizehöt
) {

818 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED", 1);

819 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

820 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

821 
	`lua_p›
(
L
, 1);

823 
	`lua_pushglobÆèbÀ
(
L
);

824 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

825 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ " 
LUA_QS
, 
mod«me
);

826 
	`lua_pushvÆue
(
L
, -1);

827 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

829 
	`lua_ªmove
(
L
, -2);

830 
	}
}

833 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

834 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

835 
	`luaL_checkvîsi⁄
(
L
);

836 i‡(
lib«me
) {

837 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

838 
	`lua_ö£π
(
L
, -(
nup
 + 1));

840 i‡(
l
)

841 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

843 
	`lua_p›
(
L
, 
nup
);

844 
	}
}

854 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

855 
	`luaL_checkvîsi⁄
(
L
);

856 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

857 ; 
l
->
«me
 !
NULL
;Ü++) {

858 
i
;

859 
i
 = 0; i < 
nup
; i++)

860 
	`lua_pushvÆue
(
L
, -
nup
);

861 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

862 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

864 
	`lua_p›
(
L
, 
nup
);

865 
	}
}

872 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

873 
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
);

874 i‡(
	`lua_i°abÀ
(
L
, -1))  1;

876 
	`lua_p›
(
L
, 1);

877 
idx
 = 
	`lua_absödex
(
L
, idx);

878 
	`lua_√wèbÀ
(
L
);

879 
	`lua_pushvÆue
(
L
, -1);

880 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

883 
	}
}

892 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

893 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

894 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

895 
	`lua_push°rög
(
L
, 
mod«me
);

896 
	`lua_ˇŒ
(
L
, 1, 1);

897 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

898 
	`lua_pushvÆue
(
L
, -2);

899 
	`lua_£tfõld
(
L
, -2, 
mod«me
);

900 
	`lua_p›
(
L
, 1);

901 i‡(
glb
) {

902 
	`lua_pushvÆue
(
L
, -1);

903 
	`lua_£tglobÆ
(
L
, 
mod«me
);

905 
	}
}

908 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

909 c⁄° *
r
) {

910 c⁄° *
wûd
;

911 
size_t
 
l
 = 
	`°æí
(
p
);

912 
luaL_Buf„r
 
b
;

913 
	`luaL_bufföô
(
L
, &
b
);

914 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

915 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

916 
	`luaL_add°rög
(&
b
, 
r
);

917 
s
 = 
wûd
 + 
l
;

919 
	`luaL_add°rög
(&
b
, 
s
);

920 
	`luaL_pushªsu…
(&
b
);

921  
	`lua_to°rög
(
L
, -1);

922 
	}
}

925 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

926 ()
ud
; ()
osize
;

927 i‡(
nsize
 == 0) {

928 
	`‰ì
(
±r
);

929  
NULL
;

932  
	`ªÆloc
(
±r
, 
nsize
);

933 
	}
}

936 
	$lua_∑nic
 (
lua_Sèã
 *
L
) {

937 
	`luai_wrôe°rögîr‹
("PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

938 
	`lua_to°rög
(
L
, -1));

940 
	}
}

943 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

944 
	`¥ötk
("luaL_newstate :| callingÇewstatei\n");

945 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

946 
	`¥ötk
("INSIDE LUA-NEWSTATE:Çow out of function...\n");

947 i‡(
L
){

948 
	`¥ötk
("\n Now AT-PANIC....");

949 
	`lua_©∑nic
(
L
, &
lua_∑nic
);

950 
	`¥ötk
("\n Out of AT-PANIC...");

952  
L
;

953 
	}
}

956 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
) {

957 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

958 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

959 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

960 i‡(*
v
 !
vî
)

961 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

962 
vî
, *
v
);

964 
	`lua_pushnumbî
(
L
, -(
lua_Numbî
)0x1234);

965 i‡(
	`lua_toöãgî
(
L
, -1) != -0x1234 ||

966 
	`lua_tounsig√d
(
L
, -1Ë!(
lua_Unsig√d
)-0x1234)

967 
	`luaL_îr‹
(
L
, "bad conversionÇumber->int;"

969 
	`lua_p›
(
L
, 1);

970 
	}
}

	@lbaselib.c

13 
	~<«utûus/libccom∑t.h
>

14 
	#lba£lib_c


	)

15 
	#LUA_LIB


	)

17 
	~"lua/lua.h
"

19 
	~"lua/œuxlib.h
"

20 
	~"lua/luÆib.h
"

23 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

24 
n
 = 
	`lua_gët›
(
L
);

25 
i
;

26 
	`lua_gëglobÆ
(
L
, "tostring");

27 
i
=1; i<=
n
; i++) {

28 c⁄° *
s
;

29 
size_t
 
l
;

30 
	`lua_pushvÆue
(
L
, -1);

31 
	`lua_pushvÆue
(
L
, 
i
);

32 
	`lua_ˇŒ
(
L
, 1, 1);

33 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

34 i‡(
s
 =
NULL
)

35  
	`luaL_îr‹
(
L
,

36 
	`LUA_QL
("tostring") " mustÑeturná stringÅo " LUA_QL("print"));

37 i‡(
i
>1Ë
	`luai_wrôe°rög
("\t", 1);

38 
	`luai_wrôe°rög
(
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`luai_wrôñöe
();

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

49 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

50 
i¢um
;

51 
lua_Numbî
 
n
 = 
	`lua_t⁄umbîx
(
L
, 1, &
i¢um
);

52 i‡(
i¢um
) {

53 
	`lua_pushnumbî
(
L
, 
n
);

56 
	`luaL_check™y
(
L
, 1);

59 
size_t
 
l
;

60 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

61 c⁄° *
e
 = 
s
 + 
l
;

62 
ba£
 = 
	`luaL_checköt
(
L
, 2);

63 
√g
 = 0;

64 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

65 
s
 +
	`°r•n
(s, 
SPACECHARS
);

66 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

67 i‡(*
s
 == '+') s++;

68 i‡(
	`iß um
(()*
s
)) {

69 
lua_Numbî
 
n
 = 0;

71 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

72 : 
	`touµî
(()*
s
) - 'A' + 10;

73 i‡(
digô
 >
ba£
) ;

74 
n
 =Ç * (
lua_Numbî
)
ba£
 + (lua_Numbî)
digô
;

75 
s
++;

76 } 
	`iß um
(()*
s
));

77 
s
 +
	`°r•n
(s, 
SPACECHARS
);

78 i‡(
s
 =
e
) {

79 
	`lua_pushnumbî
(
L
, (
√g
Ë? -
n
 :Ç);

84 
	`lua_pushnû
(
L
);

86 
	}
}

89 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

90 
Àvñ
 = 
	`luaL_›töt
(
L
, 2, 1);

91 
	`lua_£â›
(
L
, 1);

92 i‡(
	`lua_is°rög
(
L
, 1Ë&& 
Àvñ
 > 0) {

93 
	`luaL_whîe
(
L
, 
Àvñ
);

94 
	`lua_pushvÆue
(
L
, 1);

95 
	`lua_c⁄ˇt
(
L
, 2);

97  
	`lua_îr‹
(
L
);

98 
	}
}

101 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

102 
	`luaL_check™y
(
L
, 1);

103 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

104 
	`lua_pushnû
(
L
);

107 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

109 
	}
}

112 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

113 
t
 = 
	`lua_ty≥
(
L
, 2);

114 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

115 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

117 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__metatable"))

118  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

119 
	`lua_£â›
(
L
, 2);

120 
	`lua_£tmë©abÀ
(
L
, 1);

122 
	}
}

125 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

126 
	`luaL_check™y
(
L
, 1);

127 
	`luaL_check™y
(
L
, 2);

128 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

130 
	}
}

133 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

134 
t
 = 
	`lua_ty≥
(
L
, 1);

135 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

137 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

139 
	}
}

142 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

143 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

144 
	`luaL_check™y
(
L
, 2);

145 
	`lua_£â›
(
L
, 2);

146 
	`lua_øwgë
(
L
, 1);

148 
	}
}

150 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

151 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

152 
	`luaL_check™y
(
L
, 2);

153 
	`luaL_check™y
(
L
, 3);

154 
	`lua_£â›
(
L
, 3);

155 
	`lua_øw£t
(
L
, 1);

157 
	}
}

160 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

161 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

163 "£tmaj‹öc", "i§u¬ög", "gíî©i⁄Æ", "ö¸emíèl", 
NULL
};

164 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

165 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

166 
LUA_GCSETMAJORINC
, 
LUA_GCISRUNNING
, 
LUA_GCGEN
, 
LUA_GCINC
};

167 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

168 
ex
 = 
	`luaL_›töt
(
L
, 2, 0);

169 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

170 
o
) {

171 
LUA_GCCOUNT
: {

172 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

173 
	`lua_pushnumbî
(
L
, 
ªs
 + ((
lua_Numbî
)
b
/1024));

174 
	`lua_pushöãgî
(
L
, 
b
);

177 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

178 
	`lua_pushboﬁón
(
L
, 
ªs
);

182 
	`lua_pushöãgî
(
L
, 
ªs
);

186 
	}
}

189 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

190 
	`luaL_check™y
(
L
, 1);

191 
	`lua_push°rög
(
L
, 
	`luaL_ty≥«me
(L, 1));

193 
	}
}

196 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

197 
lua_CFun˘i⁄
 
ôî
) {

198 i‡(!
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
)) {

199 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

200 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

201 
	`lua_pushvÆue
(
L
, 1);

202 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

203 
	`lua_pushnû
(
L
);

206 
	`lua_pushvÆue
(
L
, 1);

207 
	`lua_ˇŒ
(
L
, 1, 3);

210 
	}
}

213 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

214 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

215 
	`lua_£â›
(
L
, 2);

216 i‡(
	`lua_√xt
(
L
, 1))

219 
	`lua_pushnû
(
L
);

222 
	}
}

225 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

226  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

227 
	}
}

230 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

231 
i
 = 
	`luaL_checköt
(
L
, 2);

232 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

233 
i
++;

234 
	`lua_pushöãgî
(
L
, 
i
);

235 
	`lua_øwgëi
(
L
, 1, 
i
);

236  (
	`lua_i¢û
(
L
, -1)) ? 1 : 2;

237 
	}
}

240 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

241  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ùaúßux
);

242 
	}
}

245 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

246 i‡(
°©us
 =
LUA_OK
) {

247 i‡(
ívidx
 != 0) {

248 
	`lua_pushvÆue
(
L
, 
ívidx
);

249 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

250 
	`lua_p›
(
L
, 1);

255 
	`lua_pushnû
(
L
);

256 
	`lua_ö£π
(
L
, -2);

259 
	}
}

262 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

263 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

264 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

265 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

266 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

267  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

268 
	}
}

283 
	#RESERVEDSLOT
 5

	)

292 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

293 ()(
ud
);

294 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

295 
	`lua_pushvÆue
(
L
, 1);

296 
	`lua_ˇŒ
(
L
, 0, 1);

297 i‡(
	`lua_i¢û
(
L
, -1)) {

298 
	`lua_p›
(
L
, 1);

299 *
size
 = 0;

300  
NULL
;

302 i‡(!
	`lua_is°rög
(
L
, -1))

303 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

304 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

305  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

306 
	}
}

309 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

310 
°©us
;

311 
size_t
 
l
;

312 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

313 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

314 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

315 i‡(
s
 !
NULL
) {

316 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

317 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

320 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

321 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

322 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

323 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

325  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

326 
	}
}

331 
	$dofûec⁄t
 (
lua_Sèã
 *
L
) {

332  
	`lua_gët›
(
L
) - 1;

333 
	}
}

336 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

337 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

338 
	`lua_£â›
(
L
, 1);

339 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

340  
	`lua_îr‹
(
L
);

341 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

342  
	`dofûec⁄t
(
L
);

343 
	}
}

346 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

347 i‡(!
	`lua_toboﬁón
(
L
, 1))

348  
	`luaL_îr‹
(
L
, "%s", 
	`luaL_›t°rög
(L, 2, "assertion failed!"));

349  
	`lua_gët›
(
L
);

350 
	}
}

353 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

354 
n
 = 
	`lua_gët›
(
L
);

355 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

356 
	`lua_pushöãgî
(
L
, 
n
-1);

360 
i
 = 
	`luaL_checköt
(
L
, 1);

361 i‡(
i
 < 0Ëò
n
 + i;

362 i‡(
i
 > 
n
) i =Ç;

363 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

364  
n
 - 
i
;

366 
	}
}

369 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

370 i‡(!
	`lua_check°ack
(
L
, 1)) {

371 
	`lua_£â›
(
L
, 0);

372 
	`lua_pushboﬁón
(
L
, 0);

373 
	`lua_push°rög
(
L
, "stack overflow");

376 
	`lua_pushboﬁón
(
L
, 
°©us
);

377 
	`lua_ª∂a˚
(
L
, 1);

378  
	`lua_gët›
(
L
);

379 
	}
}

382 
	$pˇŒc⁄t
 (
lua_Sèã
 *
L
) {

383 
°©us
 = 
	`lua_gë˘x
(
L
, 
NULL
);

384  
	`föishpˇŒ
(
L
, (
°©us
 =
LUA_YIELD
));

385 
	}
}

388 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

389 
°©us
;

390 
	`luaL_check™y
(
L
, 1);

391 
	`lua_pushnû
(
L
);

392 
	`lua_ö£π
(
L
, 1);

393 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
pˇŒc⁄t
);

394  
	`föishpˇŒ
(
L
, (
°©us
 =
LUA_OK
));

395 
	}
}

398 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

399 
°©us
;

400 
n
 = 
	`lua_gët›
(
L
);

401 
	`luaL_¨gcheck
(
L
, 
n
 >= 2, 2, "valueÉxpected");

402 
	`lua_pushvÆue
(
L
, 1);

403 
	`lua_c›y
(
L
, 2, 1);

404 
	`lua_ª∂a˚
(
L
, 2);

405 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 1, 0, 
pˇŒc⁄t
);

406  
	`föishpˇŒ
(
L
, (
°©us
 =
LUA_OK
));

407 
	}
}

410 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

411 
	`luaL_check™y
(
L
, 1);

412 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

414 
	}
}

417 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

418 {"as£π", 
luaB_as£π
},

419 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

420 {"dofûe", 
luaB_dofûe
},

421 {"îr‹", 
luaB_îr‹
},

422 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

423 {"ùaús", 
luaB_ùaús
},

424 {"lﬂdfûe", 
luaB_lﬂdfûe
},

425 {"lﬂd", 
luaB_lﬂd
},

426 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

427 {"lﬂd°rög", 
luaB_lﬂd
},

429 {"√xt", 
luaB_√xt
},

430 {"∑ús", 
luaB_∑ús
},

431 {"pˇŒ", 
luaB_pˇŒ
},

432 {"¥öt", 
luaB_¥öt
},

433 {"øwequÆ", 
luaB_øwequÆ
},

434 {"øwÀn", 
luaB_øwÀn
},

435 {"øwgë", 
luaB_øwgë
},

436 {"øw£t", 
luaB_øw£t
},

437 {"£À˘", 
luaB_£À˘
},

438 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

439 {"t⁄umbî", 
luaB_t⁄umbî
},

440 {"to°rög", 
luaB_to°rög
},

441 {"ty≥", 
luaB_ty≥
},

442 {"xpˇŒ", 
luaB_xpˇŒ
},

443 {
NULL
, NULL}

447 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

449 
	`lua_pushglobÆèbÀ
(
L
);

450 
	`lua_pushglobÆèbÀ
(
L
);

451 
	`lua_£tfõld
(
L
, -2, "_G");

453 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

454 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

455 
	`lua_£tfõld
(
L
, -2, "_VERSION");

457 
	}
}

	@lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

9 
	~<«utûus/libccom∑t.h
>

10 
	~"lua/lua.h
"

12 
	~"lua/œuxlib.h
"

13 
	~"lua/luÆib.h
"

17 #i‡!
deföed
(
LUA_NBITS
)

18 
	#LUA_NBITS
 32

	)

22 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

25 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

29 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

32 
lua_Unsig√d
 
	tb_uöt
;

36 
b_uöt
 
	$™daux
 (
lua_Sèã
 *
L
) {

37 
i
, 
n
 = 
	`lua_gët›
(
L
);

38 
b_uöt
 
r
 = ~(b_uint)0;

39 
i
 = 1; i <
n
; i++)

40 
r
 &
	`luaL_checkunsig√d
(
L
, 
i
);

41  
	`åim
(
r
);

42 
	}
}

45 
	$b_™d
 (
lua_Sèã
 *
L
) {

46 
b_uöt
 
r
 = 
	`™daux
(
L
);

47 
	`lua_pushunsig√d
(
L
, 
r
);

49 
	}
}

52 
	$b_ã°
 (
lua_Sèã
 *
L
) {

53 
b_uöt
 
r
 = 
	`™daux
(
L
);

54 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

56 
	}
}

59 
	$b_‹
 (
lua_Sèã
 *
L
) {

60 
i
, 
n
 = 
	`lua_gët›
(
L
);

61 
b_uöt
 
r
 = 0;

62 
i
 = 1; i <
n
; i++)

63 
r
 |
	`luaL_checkunsig√d
(
L
, 
i
);

64 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

66 
	}
}

69 
	$b_x‹
 (
lua_Sèã
 *
L
) {

70 
i
, 
n
 = 
	`lua_gët›
(
L
);

71 
b_uöt
 
r
 = 0;

72 
i
 = 1; i <
n
; i++)

73 
r
 ^
	`luaL_checkunsig√d
(
L
, 
i
);

74 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

76 
	}
}

79 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

80 
b_uöt
 
r
 = ~
	`luaL_checkunsig√d
(
L
, 1);

81 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

83 
	}
}

86 
	$b_shi·
 (
lua_Sèã
 *
L
, 
b_uöt
 
r
, 
i
) {

87 i‡(
i
 < 0) {

88 
i
 = -i;

89 
r
 = 
	`åim
(r);

90 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

91 
r
 >>
i
;

94 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

95 
r
 <<
i
;

96 
r
 = 
	`åim
(r);

98 
	`lua_pushunsig√d
(
L
, 
r
);

100 
	}
}

103 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

104  
	`b_shi·
(
L
, 
	`luaL_checkunsig√d
(L, 1), 
	`luaL_checköt
(L, 2));

105 
	}
}

108 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

109  
	`b_shi·
(
L
, 
	`luaL_checkunsig√d
(L, 1), -
	`luaL_checköt
(L, 2));

110 
	}
}

113 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

114 
b_uöt
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

115 
i
 = 
	`luaL_checköt
(
L
, 2);

116 i‡(
i
 < 0 || !(
r
 & ((
b_uöt
)1 << (
LUA_NBITS
 - 1))))

117  
	`b_shi·
(
L
, 
r
, -
i
);

119 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

121 
r
 = 
	`åim
(‘ >> 
i
Ë| ~(~(
b_uöt
)0 >> i));

122 
	`lua_pushunsig√d
(
L
, 
r
);

125 
	}
}

128 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
i
) {

129 
b_uöt
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

130 
i
 &(
LUA_NBITS
 - 1);

131 
r
 = 
	`åim
(r);

132 i‡(
i
 != 0)

133 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

134 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

136 
	}
}

139 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

140  
	`b_rŸ
(
L
, 
	`luaL_checköt
(L, 2));

141 
	}
}

144 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

145  
	`b_rŸ
(
L
, -
	`luaL_checköt
(L, 2));

146 
	}
}

155 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

156 
f
 = 
	`luaL_checköt
(
L
, 
Árg
);

157 
w
 = 
	`luaL_›töt
(
L
, 
Árg
 + 1, 1);

158 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

159 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

160 i‡(
f
 + 
w
 > 
LUA_NBITS
)

161 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

162 *
width
 = 
w
;

163  
f
;

164 
	}
}

167 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

168 
w
;

169 
b_uöt
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

170 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

171 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

172 
	`lua_pushunsig√d
(
L
, 
r
);

174 
	}
}

177 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

178 
w
;

179 
b_uöt
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

180 
b_uöt
 
v
 = 
	`luaL_checkunsig√d
(
L
, 2);

181 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

182 
m
 = 
	`mask
(
w
);

183 
v
 &
m
;

184 
r
 = (∏& ~(
m
 << 
f
)Ë| (
v
 << f);

185 
	`lua_pushunsig√d
(
L
, 
r
);

187 
	}
}

190 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

191 {"¨shi·", 
b_¨shi·
},

192 {"b™d", 
b_™d
},

193 {"bnŸ", 
b_nŸ
},

194 {"b‹", 
b_‹
},

195 {"bx‹", 
b_x‹
},

196 {"bã°", 
b_ã°
},

197 {"exåa˘", 
b_exåa˘
},

198 {"ÃŸ©e", 
b_ÃŸ
},

199 {"lshi·", 
b_lshi·
},

200 {"ª∂a˚", 
b_ª∂a˚
},

201 {"ºŸ©e", 
b_ºŸ
},

202 {"rshi·", 
b_rshi·
},

203 {
NULL
, NULL}

208 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

209 
	`luaL_√wlib
(
L
, 
bôlib
);

211 
	}
}

	@lcode.c

9 
	~<«utûus/libccom∑t.h
>

10 
	#lcode_c


	)

11 
	#LUA_CORE


	)

13 
	~"lua/lua.h
"

15 
	~"lua/lcode.h
"

16 
	~"lua/ldebug.h
"

17 
	~"lua/ldo.h
"

18 
	~"lua/lgc.h
"

19 
	~"lua/Œex.h
"

20 
	~"lua/lmem.h
"

21 
	~"lua/lobje˘.h
"

22 
	~"lua/l›codes.h
"

23 
	~"lua/Õ¨£r.h
"

24 
	~"lua/l°rög.h
"

25 
	~"lua/…abÀ.h
"

26 
	~"lua/lvm.h
"

29 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

32 
	$i¢umîÆ
(
expdesc
 *
e
) {

33  (
e
->
k
 =
VKNUM
 &&É->
t
 =
NO_JUMP
 &&É->
f
 == NO_JUMP);

34 
	}
}

37 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

38 
In°ru˘i⁄
 *
¥evious
;

39 
l
 = 
‰om
 + 
n
 - 1;

40 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

41 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

42 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

43 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

44 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

45 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

46 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

47 i‡(
p‰om
 < 
‰om
) from =Öfrom;

48 i‡(
∂
 > 
l
)Ü =Öl;

49 
	`SETARG_A
(*
¥evious
, 
‰om
);

50 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

55 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

56 
	}
}

59 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

60 
jpc
 = 
fs
->jpc;

61 
j
;

62 
fs
->
jpc
 = 
NO_JUMP
;

63 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

64 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

65  
j
;

66 
	}
}

69 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

70 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

71 
	}
}

74 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

75 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

76  
	`luaK_jump
(
fs
);

77 
	}
}

80 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

81 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

82 
off£t
 = 
de°
-(
pc
+1);

83 
	`lua_as£π
(
de°
 !
NO_JUMP
);

84 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

85 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

86 
	`SETARG_sBx
(*
jmp
, 
off£t
);

87 
	}
}

94 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

95 
fs
->
œ°èrgë
 = fs->
pc
;

96  
fs
->
pc
;

97 
	}
}

100 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

101 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

102 i‡(
off£t
 =
NO_JUMP
)

103  
NO_JUMP
;

105  (
pc
+1)+
off£t
;

106 
	}
}

109 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

110 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

111 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

112  
pi
-1;

114  
pi
;

115 
	}
}

122 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

123 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

124 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

125 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

128 
	}
}

131 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

132 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

133 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

135 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

136 
	`SETARG_A
(*
i
, 
ªg
);

138 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

141 
	}
}

144 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

145 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

146 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

147 
	}
}

150 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

151 
dèrgë
) {

152 
li°
 !
NO_JUMP
) {

153 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

154 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

155 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

157 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

158 
li°
 = 
√xt
;

160 
	}
}

163 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

164 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

165 
fs
->
jpc
 = 
NO_JUMP
;

166 
	}
}

169 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

170 i‡(
èrgë
 =
fs
->
pc
)

171 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

173 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

174 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

176 
	}
}

179 
LUAI_FUNC
 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

180 
Àvñ
++;

181 
li°
 !
NO_JUMP
) {

182 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

183 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

184 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

185 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

186 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

187 
li°
 = 
√xt
;

189 
	}
}

192 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

193 
	`luaK_gëœbñ
(
fs
);

194 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

195 
	}
}

198 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

199 i‡(
l2
 =
NO_JUMP
) ;

200 i‡(*
l1
 =
NO_JUMP
)

201 *
l1
 = 
l2
;

203 
li°
 = *
l1
;

204 
√xt
;

205 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

206 
li°
 = 
√xt
;

207 
	`fixjump
(
fs
, 
li°
, 
l2
);

209 
	}
}

212 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

213 
PrŸo
 *
f
 = 
fs
->f;

214 
	`disch¨gejpc
(
fs
);

216 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

217 
MAX_INT
, "opcodes");

218 
f
->
code
[
fs
->
pc
] = 
i
;

220 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

221 
MAX_INT
, "opcodes");

222 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

223  
fs
->
pc
++;

224 
	}
}

227 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

228 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

229 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

230 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

231 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

232  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

233 
	}
}

236 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

237 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

238 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

239 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

240  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

241 
	}
}

244 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

245 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

246  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

247 
	}
}

250 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

251 i‡(
k
 <
MAXARG_Bx
)

252  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

254 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

255 
	`codìxåØrg
(
fs
, 
k
);

256  
p
;

258 
	}
}

261 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

262 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

263 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

264 i‡(
√w°ack
 >
MAXSTACK
)

265 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "function orÉxpressionÅoo complex");

266 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

268 
	}
}

271 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

272 
	`luaK_check°ack
(
fs
, 
n
);

273 
fs
->
‰ìªg
 +
n
;

274 
	}
}

277 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

278 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

279 
fs
->
‰ìªg
--;

280 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

282 
	}
}

285 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

286 i‡(
e
->
k
 =
VNONRELOC
)

287 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

288 
	}
}

291 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

292 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

293 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
h
, 
key
);

294 
PrŸo
 *
f
 = 
fs
->f;

295 
k
, 
ﬁdsize
;

296 i‡(
	`âi¢umbî
(
idx
)) {

297 
lua_Numbî
 
n
 = 
	`nvÆue
(
idx
);

298 
	`lua_numbî2öt
(
k
, 
n
);

299 i‡(
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

300  
k
;

305 
ﬁdsize
 = 
f
->
sizek
;

306 
k
 = 
fs
->
nk
;

309 
	`£ävÆue
(
idx
, 
	`ˇ°_num
(
k
));

310 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

311 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

312 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

313 
fs
->
nk
++;

314 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

315  
k
;

316 
	}
}

319 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

320 
TVÆue
 
o
;

321 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

322  
	`addk
(
fs
, &
o
, &o);

323 
	}
}

326 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

327 
n
;

328 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

329 
TVÆue
 
o
;

330 
	`£ävÆue
(&
o
, 
r
);

331 i‡(
r
 =0 || 
	`luai_numi¢™
(
NULL
,Ñ)) {

333 
	`£tsvÆue
(
L
, L->
t›
++, 
	`luaS_√wl°r
(L, (*)&
r
, (r)));

334 
n
 = 
	`addk
(
fs
, 
L
->
t›
 - 1, &
o
);

335 
L
->
t›
--;

338 
n
 = 
	`addk
(
fs
, &
o
, &o);

339  
n
;

340 
	}
}

343 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

344 
TVÆue
 
o
;

345 
	`£tbvÆue
(&
o
, 
b
);

346  
	`addk
(
fs
, &
o
, &o);

347 
	}
}

350 
	$nûK
 (
FuncSèã
 *
fs
) {

351 
TVÆue
 
k
, 
v
;

352 
	`£äûvÆue
(&
v
);

354 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->
h
);

355  
	`addk
(
fs
, &
k
, &
v
);

356 
	}
}

359 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

360 i‡(
e
->
k
 =
VCALL
) {

361 
	`SETARG_C
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

363 i‡(
e
->
k
 =
VVARARG
) {

364 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

365 
	`SETARG_A
(
	`gëcode
(
fs
, 
e
), fs->
‰ìªg
);

366 
	`luaK_ª£rvîegs
(
fs
, 1);

368 
	}
}

371 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

372 i‡(
e
->
k
 =
VCALL
) {

373 
e
->
k
 = 
VNONRELOC
;

374 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëcode
(
fs
,É));

376 i‡(
e
->
k
 =
VVARARG
) {

377 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 2);

378 
e
->
k
 = 
VRELOCABLE
;

380 
	}
}

383 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

384 
e
->
k
) {

385 
VLOCAL
: {

386 
e
->
k
 = 
VNONRELOC
;

389 
VUPVAL
: {

390 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

391 
e
->
k
 = 
VRELOCABLE
;

394 
VINDEXED
: {

395 
OpCode
 
›
 = 
OP_GETTABUP
;

396 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

397 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

398 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

399 
›
 = 
OP_GETTABLE
;

401 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

402 
e
->
k
 = 
VRELOCABLE
;

405 
VVARARG
:

406 
VCALL
: {

407 
	`luaK_£t⁄îë
(
fs
, 
e
);

412 
	}
}

415 
	$code_œbñ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

416 
	`luaK_gëœbñ
(
fs
);

417  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

418 
	}
}

421 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

422 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

423 
e
->
k
) {

424 
VNIL
: {

425 
	`luaK_nû
(
fs
, 
ªg
, 1);

428 
VFALSE
: 
VTRUE
: {

429 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

432 
VK
: {

433 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

436 
VKNUM
: {

437 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

440 
VRELOCABLE
: {

441 
In°ru˘i⁄
 *
pc
 = &
	`gëcode
(
fs
, 
e
);

442 
	`SETARG_A
(*
pc
, 
ªg
);

445 
VNONRELOC
: {

446 i‡(
ªg
 !
e
->
u
.
öfo
)

447 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

451 
	`lua_as£π
(
e
->
k
 =
VVOID
 ||É->k =
VJMP
);

455 
e
->
u
.
öfo
 = 
ªg
;

456 
e
->
k
 = 
VNONRELOC
;

457 
	}
}

460 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

461 i‡(
e
->
k
 !
VNONRELOC
) {

462 
	`luaK_ª£rvîegs
(
fs
, 1);

463 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

465 
	}
}

468 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

469 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

470 i‡(
e
->
k
 =
VJMP
)

471 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

472 i‡(
	`hasjumps
(
e
)) {

473 
föÆ
;

474 
p_f
 = 
NO_JUMP
;

475 
p_t
 = 
NO_JUMP
;

476 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

477 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

478 
p_f
 = 
	`code_œbñ
(
fs
, 
ªg
, 0, 1);

479 
p_t
 = 
	`code_œbñ
(
fs
, 
ªg
, 1, 0);

480 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

482 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

483 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

484 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

486 
e
->
f
 =É->
t
 = 
NO_JUMP
;

487 
e
->
u
.
öfo
 = 
ªg
;

488 
e
->
k
 = 
VNONRELOC
;

489 
	}
}

492 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

493 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

494 
	`‰ìexp
(
fs
, 
e
);

495 
	`luaK_ª£rvîegs
(
fs
, 1);

496 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

497 
	}
}

500 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

501 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

502 i‡(
e
->
k
 =
VNONRELOC
) {

503 i‡(!
	`hasjumps
(
e
)ËÉ->
u
.
öfo
;

504 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

505 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

506  
e
->
u
.
öfo
;

509 
	`luaK_exp2√xåeg
(
fs
, 
e
);

510  
e
->
u
.
öfo
;

511 
	}
}

514 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

515 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

516 
	`luaK_exp2™yªg
(
fs
, 
e
);

517 
	}
}

520 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

521 i‡(
	`hasjumps
(
e
))

522 
	`luaK_exp2™yªg
(
fs
, 
e
);

524 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

525 
	}
}

528 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

529 
	`luaK_exp2vÆ
(
fs
, 
e
);

530 
e
->
k
) {

531 
VTRUE
:

532 
VFALSE
:

533 
VNIL
: {

534 i‡(
fs
->
nk
 <
MAXINDEXRK
) {

535 
e
->
u
.
öfo
 = (e->
k
 =
VNIL
Ë? 
	`nûK
(
fs
Ë: 
	`boﬁK
(fs, (e->k =
VTRUE
));

536 
e
->
k
 = 
VK
;

537  
	`RKASK
(
e
->
u
.
öfo
);

541 
VKNUM
: {

542 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
);

543 
e
->
k
 = 
VK
;

546 
VK
: {

547 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

548  
	`RKASK
(
e
->
u
.
öfo
);

554  
	`luaK_exp2™yªg
(
fs
, 
e
);

555 
	}
}

558 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

559 
v¨
->
k
) {

560 
VLOCAL
: {

561 
	`‰ìexp
(
fs
, 
ex
);

562 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

565 
VUPVAL
: {

566 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

567 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

570 
VINDEXED
: {

571 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

572 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

573 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

577 
	`lua_as£π
(0);

581 
	`‰ìexp
(
fs
, 
ex
);

582 
	}
}

585 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

586 
îeg
;

587 
	`luaK_exp2™yªg
(
fs
, 
e
);

588 
îeg
 = 
e
->
u
.
öfo
;

589 
	`‰ìexp
(
fs
, 
e
);

590 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

591 
e
->
k
 = 
VNONRELOC
;

592 
	`luaK_ª£rvîegs
(
fs
, 2);

593 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

594 
	`‰ìexp
(
fs
, 
key
);

595 
	}
}

598 
	$övîtjump
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

599 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

600 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

601 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

602 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

603 
	}
}

606 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

607 i‡(
e
->
k
 =
VRELOCABLE
) {

608 
In°ru˘i⁄
 
õ
 = 
	`gëcode
(
fs
, 
e
);

609 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

610 
fs
->
pc
--;

611  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

615 
	`disch¨ge2™yªg
(
fs
, 
e
);

616 
	`‰ìexp
(
fs
, 
e
);

617  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

618 
	}
}

621 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

622 
pc
;

623 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

624 
e
->
k
) {

625 
VJMP
: {

626 
	`övîtjump
(
fs
, 
e
);

627 
pc
 = 
e
->
u
.
öfo
;

630 
VK
: 
VKNUM
: 
VTRUE
: {

631 
pc
 = 
NO_JUMP
;

635 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

639 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

640 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

641 
e
->
t
 = 
NO_JUMP
;

642 
	}
}

645 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

646 
pc
;

647 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

648 
e
->
k
) {

649 
VJMP
: {

650 
pc
 = 
e
->
u
.
öfo
;

653 
VNIL
: 
VFALSE
: {

654 
pc
 = 
NO_JUMP
;

658 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

662 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

663 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

664 
e
->
f
 = 
NO_JUMP
;

665 
	}
}

668 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

669 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

670 
e
->
k
) {

671 
VNIL
: 
VFALSE
: {

672 
e
->
k
 = 
VTRUE
;

675 
VK
: 
VKNUM
: 
VTRUE
: {

676 
e
->
k
 = 
VFALSE
;

679 
VJMP
: {

680 
	`övîtjump
(
fs
, 
e
);

683 
VRELOCABLE
:

684 
VNONRELOC
: {

685 
	`disch¨ge2™yªg
(
fs
, 
e
);

686 
	`‰ìexp
(
fs
, 
e
);

687 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

688 
e
->
k
 = 
VRELOCABLE
;

692 
	`lua_as£π
(0);

697 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

698 
	`ªmovevÆues
(
fs
, 
e
->
f
);

699 
	`ªmovevÆues
(
fs
, 
e
->
t
);

700 
	}
}

703 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

704 
	`lua_as£π
(!
	`hasjumps
(
t
));

705 
t
->
u
.
öd
.àt->u.
öfo
;

706 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

707 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
) ? VUPVAL

708 : 
	`check_exp
(
	`vkisöªg
(
t
->
k
), 
VLOCAL
);

709 
t
->
k
 = 
VINDEXED
;

710 
	}
}

713 
	$c⁄°fﬁdög
 (
OpCode
 
›
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

714 
lua_Numbî
 
r
;

715 i‡(!
	`i¢umîÆ
(
e1
Ë|| !i¢umîÆ(
e2
))  0;

716 i‡((
›
 =
OP_DIV
 || o∞=
OP_MOD
Ë&& 
e2
->
u
.
nvÆ
 == 0)

718 
r
 = 
	`luaO_¨ôh
(
›
 - 
OP_ADD
 + 
LUA_OPADD
, 
e1
->
u
.
nvÆ
, 
e2
->u.nval);

719 
e1
->
u
.
nvÆ
 = 
r
;

721 
	}
}

724 
	$codórôh
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

725 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

726 i‡(
	`c⁄°fﬁdög
(
›
, 
e1
, 
e2
))

729 
o2
 = (
›
 !
OP_UNM
 && o∞!
OP_LEN
Ë? 
	`luaK_exp2RK
(
fs
, 
e2
) : 0;

730 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

731 i‡(
o1
 > 
o2
) {

732 
	`‰ìexp
(
fs
, 
e1
);

733 
	`‰ìexp
(
fs
, 
e2
);

736 
	`‰ìexp
(
fs
, 
e2
);

737 
	`‰ìexp
(
fs
, 
e1
);

739 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
o1
, 
o2
);

740 
e1
->
k
 = 
VRELOCABLE
;

741 
	`luaK_fixlöe
(
fs
, 
löe
);

743 
	}
}

746 
	$codecomp
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
c⁄d
, 
expdesc
 *
e1
,

747 
expdesc
 *
e2
) {

748 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

749 
o2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

750 
	`‰ìexp
(
fs
, 
e2
);

751 
	`‰ìexp
(
fs
, 
e1
);

752 i‡(
c⁄d
 =0 && 
›
 !
OP_EQ
) {

753 
ãmp
;

754 
ãmp
 = 
o1
; o1 = 
o2
; o2 =Åemp;

755 
c⁄d
 = 1;

757 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 
c⁄d
, 
o1
, 
o2
);

758 
e1
->
k
 = 
VJMP
;

759 
	}
}

762 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

763 
expdesc
 
e2
;

764 
e2
.
t
 =É2.
f
 = 
NO_JUMP
;É2.
k
 = 
VKNUM
;É2.
u
.
nvÆ
 = 0;

765 
›
) {

766 
OPR_MINUS
: {

767 i‡(
	`i¢umîÆ
(
e
))

768 
e
->
u
.
nvÆ
 = 
	`luai_numunm
(
NULL
,É->u.nval);

770 
	`luaK_exp2™yªg
(
fs
, 
e
);

771 
	`codórôh
(
fs
, 
OP_UNM
, 
e
, &
e2
, 
löe
);

775 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

776 
OPR_LEN
: {

777 
	`luaK_exp2™yªg
(
fs
, 
e
);

778 
	`codórôh
(
fs
, 
OP_LEN
, 
e
, &
e2
, 
löe
);

781 : 
	`lua_as£π
(0);

783 
	}
}

786 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

787 
›
) {

788 
OPR_AND
: {

789 
	`luaK_goi·rue
(
fs
, 
v
);

792 
OPR_OR
: {

793 
	`luaK_goifÁl£
(
fs
, 
v
);

796 
OPR_CONCAT
: {

797 
	`luaK_exp2√xåeg
(
fs
, 
v
);

800 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

801 
OPR_MOD
: 
OPR_POW
: {

802 i‡(!
	`i¢umîÆ
(
v
)Ë
	`luaK_exp2RK
(
fs
, v);

806 
	`luaK_exp2RK
(
fs
, 
v
);

810 
	}
}

813 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

814 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

815 
›
) {

816 
OPR_AND
: {

817 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

818 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

819 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

820 *
e1
 = *
e2
;

823 
OPR_OR
: {

824 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

825 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

826 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

827 *
e1
 = *
e2
;

830 
OPR_CONCAT
: {

831 
	`luaK_exp2vÆ
(
fs
, 
e2
);

832 i‡(
e2
->
k
 =
VRELOCABLE
 && 
	`GET_OPCODE
(
	`gëcode
(
fs
,É2)Ë=
OP_CONCAT
) {

833 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëcode
(
fs
, 
e2
))-1);

834 
	`‰ìexp
(
fs
, 
e1
);

835 
	`SETARG_B
(
	`gëcode
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

836 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

839 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

840 
	`codórôh
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

844 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

845 
OPR_MOD
: 
OPR_POW
: {

846 
	`codórôh
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 - 
OPR_ADD
 + 
OP_ADD
), 
e1
, 
e2
, 
löe
);

849 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
: {

850 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 - 
OPR_EQ
 + 
OP_EQ
), 1, 
e1
, 
e2
);

853 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

854 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 - 
OPR_NE
 + 
OP_EQ
), 0, 
e1
, 
e2
);

857 : 
	`lua_as£π
(0);

859 
	}
}

862 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

863 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

864 
	}
}

867 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

868 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

869 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

870 
	`lua_as£π
(
to°‹e
 != 0);

871 i‡(
c
 <
MAXARG_C
)

872 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

873 i‡(
c
 <
MAXARG_Ax
) {

874 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

875 
	`codìxåØrg
(
fs
, 
c
);

878 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

879 
fs
->
‰ìªg
 = 
ba£
 + 1;

880 
	}
}

	@lcorolib.c

10 
	~<«utûus/libccom∑t.h
>

11 
	#lc‹ﬁib_c


	)

12 
	#LUA_LIB


	)

14 
	~"lua/lua.h
"

16 
	~"lua/œuxlib.h
"

17 
	~"lua/luÆib.h
"

20 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

21 
°©us
;

22 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

23 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

26 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

27 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

30 
	`lua_xmove
(
L
, 
co
, 
«rg
);

31 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

32 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

33 
ƒes
 = 
	`lua_gët›
(
co
);

34 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

35 
	`lua_p›
(
co
, 
ƒes
);

36 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

39 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

40  
ƒes
;

43 
	`lua_xmove
(
co
, 
L
, 1);

46 
	}
}

49 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

50 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

51 
r
;

52 
	`luaL_¨gcheck
(
L
, 
co
, 1, "coroutineÉxpected");

53 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

54 i‡(
r
 < 0) {

55 
	`lua_pushboﬁón
(
L
, 0);

56 
	`lua_ö£π
(
L
, -2);

60 
	`lua_pushboﬁón
(
L
, 1);

61 
	`lua_ö£π
(
L
, -(
r
 + 1));

62  
r
 + 1;

64 
	}
}

67 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

68 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

69 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

70 i‡(
r
 < 0) {

71 i‡(
	`lua_is°rög
(
L
, -1)) {

72 
	`luaL_whîe
(
L
, 1);

73 
	`lua_ö£π
(
L
, -2);

74 
	`lua_c⁄ˇt
(
L
, 2);

76  
	`lua_îr‹
(
L
);

78  
r
;

79 
	}
}

82 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

83 
lua_Sèã
 *
NL
;

84 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

85 
NL
 = 
	`lua_√wthªad
(
L
);

86 
	`lua_pushvÆue
(
L
, 1);

87 
	`lua_xmove
(
L
, 
NL
, 1);

89 
	}
}

92 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

93 
	`luaB_co¸óã
(
L
);

94 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

96 
	}
}

99 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

100  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

101 
	}
}

104 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

105 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

106 
	`luaL_¨gcheck
(
L
, 
co
, 1, "coroutineÉxpected");

107 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

109 
	`lua_°©us
(
co
)) {

110 
LUA_YIELD
:

111 
	`lua_pushlôîÆ
(
L
, "suspended");

113 
LUA_OK
: {

114 
lua_Debug
 
¨
;

115 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

116 
	`lua_pushlôîÆ
(
L
, "normal");

117 i‡(
	`lua_gët›
(
co
) == 0)

118 
	`lua_pushlôîÆ
(
L
, "dead");

120 
	`lua_pushlôîÆ
(
L
, "suspended");

124 
	`lua_pushlôîÆ
(
L
, "dead");

129 
	}
}

132 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

133 
ismaö
 = 
	`lua_pushthªad
(
L
);

134 
	`lua_pushboﬁón
(
L
, 
ismaö
);

136 
	}
}

139 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

140 {"¸óã", 
luaB_co¸óã
},

141 {"ªsume", 
luaB_c‹esume
},

142 {"ru¬ög", 
luaB_c‹u¬ög
},

143 {"°©us", 
luaB_co°©us
},

144 {"wøp", 
luaB_cowøp
},

145 {"yõld", 
luaB_yõld
},

146 {
NULL
, NULL}

151 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

152 
	`luaL_√wlib
(
L
, 
co_funcs
);

154 
	}
}

	@lctype.c

6 
	~<«utûus/libccom∑t.h
>

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"lua/l˘y≥.h
"

12 #i‡!
LUA_USE_CTYPE


16 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@ldblib.c

12 
	~<«utûus/libccom∑t.h
>

13 
	#ldblib_c


	)

14 
	#LUA_LIB


	)

18 
	~"lua/lua.h
"

20 
	~"lua/œuxlib.h
"

21 
	~"lua/luÆib.h
"

24 
	#HOOKKEY
 "_HKEY"

	)

27 
	$check°ack
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, 
n
) {

28 i‡(
L
 !
L1
 && !
	`lua_check°ack
(L1, 
n
))

29 
	`luaL_îr‹
(
L
, "stack overflow");

30 
	}
}

33 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

34 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

36 
	}
}

39 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

40 
	`luaL_check™y
(
L
, 1);

41 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

42 
	`lua_pushnû
(
L
);

45 
	}
}

48 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

49 
t
 = 
	`lua_ty≥
(
L
, 2);

50 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

52 
	`lua_£â›
(
L
, 2);

53 
	`lua_£tmë©abÀ
(
L
, 1);

55 
	}
}

58 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

59 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

60 
	`lua_pushnû
(
L
);

62 
	`lua_gëu£rvÆue
(
L
, 1);

64 
	}
}

67 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

68 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TLIGHTUSERDATA
)

69 
	`luaL_¨gîr‹
(
L
, 1, "full userdataÉxpected, gotÜight userdata");

70 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

71 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

72 
	`luaL_checkty≥
(
L
, 2, 
LUA_TTABLE
);

73 
	`lua_£â›
(
L
, 2);

74 
	`lua_£tu£rvÆue
(
L
, 1);

76 
	}
}

79 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
i
, c⁄° *
v
) {

80 
	`lua_push°rög
(
L
, 
v
);

81 
	`lua_£tfõld
(
L
, -2, 
i
);

82 
	}
}

85 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
i
, 
v
) {

86 
	`lua_pushöãgî
(
L
, 
v
);

87 
	`lua_£tfõld
(
L
, -2, 
i
);

88 
	}
}

91 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
i
, 
v
) {

92 
	`lua_pushboﬁón
(
L
, 
v
);

93 
	`lua_£tfõld
(
L
, -2, 
i
);

94 
	}
}

97 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

98 i‡(
	`lua_i°hªad
(
L
, 1)) {

99 *
¨g
 = 1;

100  
	`lua_tŸhªad
(
L
, 1);

103 *
¨g
 = 0;

104  
L
;

106 
	}
}

109 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

110 i‡(
L
 =
L1
) {

111 
	`lua_pushvÆue
(
L
, -2);

112 
	`lua_ªmove
(
L
, -3);

115 
	`lua_xmove
(
L1
, 
L
, 1);

116 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

117 
	}
}

120 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

121 
lua_Debug
 
¨
;

122 
¨g
;

123 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

124 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

125 
	`check°ack
(
L
, 
L1
, 3);

126 i‡(
	`lua_i¢umbî
(
L
, 
¨g
+1)) {

127 i‡(!
	`lua_gë°ack
(
L1
, ()
	`lua_toöãgî
(
L
, 
¨g
+1), &
¨
)) {

128 
	`lua_pushnû
(
L
);

132 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
+1)) {

133 
	`lua_pushf°rög
(
L
, ">%s", 
›ti⁄s
);

134 
›ti⁄s
 = 
	`lua_to°rög
(
L
, -1);

135 
	`lua_pushvÆue
(
L
, 
¨g
+1);

136 
	`lua_xmove
(
L
, 
L1
, 1);

139  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "function orÜevelÉxpected");

140 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

141  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

142 
	`lua_¸óãèbÀ
(
L
, 0, 2);

143 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

144 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

145 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

146 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

147 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

148 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

150 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

151 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

152 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

153 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

154 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

155 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

157 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

158 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

159 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

161 i‡(
	`°rchr
(
›ti⁄s
, 't'))

162 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

163 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

164 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

165 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

166 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

168 
	}
}

171 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

172 
¨g
;

173 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

174 
lua_Debug
 
¨
;

175 c⁄° *
«me
;

176 
nv¨
 = 
	`luaL_checköt
(
L
, 
¨g
+2);

177 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

178 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

179 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

183 i‡(!
	`lua_gë°ack
(
L1
, 
	`luaL_checköt
(
L
, 
¨g
+1), &
¨
))

184  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

185 
	`check°ack
(
L
, 
L1
, 1);

186 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

187 i‡(
«me
) {

188 
	`lua_xmove
(
L1
, 
L
, 1);

189 
	`lua_push°rög
(
L
, 
«me
);

190 
	`lua_pushvÆue
(
L
, -2);

194 
	`lua_pushnû
(
L
);

198 
	}
}

201 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

202 
¨g
;

203 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

204 
lua_Debug
 
¨
;

205 i‡(!
	`lua_gë°ack
(
L1
, 
	`luaL_checköt
(
L
, 
¨g
+1), &
¨
))

206  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

207 
	`luaL_check™y
(
L
, 
¨g
+3);

208 
	`lua_£â›
(
L
, 
¨g
+3);

209 
	`check°ack
(
L
, 
L1
, 1);

210 
	`lua_xmove
(
L
, 
L1
, 1);

211 
	`lua_push°rög
(
L
, 
	`lua_£éoˇl
(
L1
, &
¨
, 
	`luaL_checköt
(L, 
¨g
+2)));

213 
	}
}

216 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

217 c⁄° *
«me
;

218 
n
 = 
	`luaL_checköt
(
L
, 2);

219 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

220 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

221 i‡(
«me
 =
NULL
)  0;

222 
	`lua_push°rög
(
L
, 
«me
);

223 
	`lua_ö£π
(
L
, -(
gë
+1));

224  
gë
 + 1;

225 
	}
}

228 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

229  
	`auxupvÆue
(
L
, 1);

230 
	}
}

233 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

234 
	`luaL_check™y
(
L
, 3);

235  
	`auxupvÆue
(
L
, 0);

236 
	}
}

239 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

240 
lua_Debug
 
¨
;

241 
nup
 = 
	`luaL_checköt
(
L
, 
¨gnup
);

242 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

243 
	`lua_pushvÆue
(
L
, 
¨gf
);

244 
	`lua_gëöfo
(
L
, ">u", &
¨
);

245 
	`luaL_¨gcheck
(
L
, 1 <
nup
 &&Çu∞<
¨
.
nups
, 
¨gnup
, "invalid upvalue index");

246  
nup
;

247 
	}
}

250 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

251 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

252 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

254 
	}
}

257 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

258 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

259 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

260 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

261 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

262 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

264 
	}
}

267 
	#gëhookèbÀ
(
L
Ë
	`luaL_gësubèbÀ
(L, 
LUA_REGISTRYINDEX
, 
HOOKKEY
)

	)

270 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

271 c⁄° *c⁄° 
hook«mes
[] =

273 
	`gëhookèbÀ
(
L
);

274 
	`lua_pushthªad
(
L
);

275 
	`lua_øwgë
(
L
, -2);

276 i‡(
	`lua_isfun˘i⁄
(
L
, -1)) {

277 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

278 i‡(
¨
->
cuºíéöe
 >= 0)

279 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

280 
	`lua_pushnû
(
L
);

281 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

282 
	`lua_ˇŒ
(
L
, 2, 0);

284 
	}
}

287 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

288 
mask
 = 0;

289 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

290 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

291 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

292 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

293  
mask
;

294 
	}
}

297 *
	$unmakemask
 (
mask
, *
smask
) {

298 
i
 = 0;

299 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

300 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

301 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

302 
smask
[
i
] = '\0';

303  
smask
;

304 
	}
}

307 
	$db_£thook
 (
lua_Sèã
 *
L
) {

308 
¨g
, 
mask
, 
cou¡
;

309 
lua_Hook
 
func
;

310 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

311 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

312 
	`lua_£â›
(
L
, 
¨g
+1);

313 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

316 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

317 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

318 
cou¡
 = 
	`luaL_›töt
(
L
, 
¨g
+3, 0);

319 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

321 i‡(
	`gëhookèbÀ
(
L
) == 0) {

322 
	`lua_push°rög
(
L
, "k");

323 
	`lua_£tfõld
(
L
, -2, "__mode");

324 
	`lua_pushvÆue
(
L
, -1);

325 
	`lua_£tmë©abÀ
(
L
, -2);

327 
	`check°ack
(
L
, 
L1
, 1);

328 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

329 
	`lua_pushvÆue
(
L
, 
¨g
+1);

330 
	`lua_øw£t
(
L
, -3);

331 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

333 
	}
}

336 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

337 
¨g
;

338 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

339 
buff
[5];

340 
mask
 = 
	`lua_gëhookmask
(
L1
);

341 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

342 i‡(
hook
 !
NULL
 && hook !
hookf
)

343 
	`lua_pushlôîÆ
(
L
, "external hook");

345 
	`gëhookèbÀ
(
L
);

346 
	`check°ack
(
L
, 
L1
, 1);

347 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

348 
	`lua_øwgë
(
L
, -2);

349 
	`lua_ªmove
(
L
, -2);

351 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

352 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

354 
	}
}

357 
	$db_debug
 (
lua_Sèã
 *
L
) {

359 
buf„r
[250];

360 
	`luai_wrôe°rögîr‹
("%s", "lua_debug> ");

361 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

362 
	`°rcmp
(
buf„r
, "cont\n") == 0)

364 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

365 
	`lua_pˇŒ
(
L
, 0, 0, 0))

366 
	`luai_wrôe°rögîr‹
("%s\n", 
	`lua_to°rög
(
L
, -1));

367 
	`lua_£â›
(
L
, 0);

369 
	}
}

372 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

373 
¨g
;

374 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

375 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

376 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

377 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

379 
Àvñ
 = 
	`luaL_›töt
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

380 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

383 
	}
}

386 c⁄° 
luaL_Reg
 
	gdblib
[] = {

387 {"debug", 
db_debug
},

388 {"gëu£rvÆue", 
db_gëu£rvÆue
},

389 {"gëhook", 
db_gëhook
},

390 {"gëöfo", 
db_gëöfo
},

391 {"gëloˇl", 
db_gëloˇl
},

392 {"gëªgi°ry", 
db_gëªgi°ry
},

393 {"gëmë©abÀ", 
db_gëmë©abÀ
},

394 {"gëupvÆue", 
db_gëupvÆue
},

395 {"upvÆuejoö", 
db_upvÆuejoö
},

396 {"upvÆueid", 
db_upvÆueid
},

397 {"£tu£rvÆue", 
db_£tu£rvÆue
},

398 {"£thook", 
db_£thook
},

399 {"£éoˇl", 
db_£éoˇl
},

400 {"£tmë©abÀ", 
db_£tmë©abÀ
},

401 {"£tupvÆue", 
db_£tupvÆue
},

402 {"åa˚back", 
db_åa˚back
},

403 {
NULL
, NULL}

407 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

408 
	`luaL_√wlib
(
L
, 
dblib
);

410 
	}
}

	@ldebug.c

12 
	~<«utûus/libccom∑t.h
>

13 
	#ldebug_c


	)

14 
	#LUA_CORE


	)

16 
	~"lua/lua.h
"

18 
	~"lua/œpi.h
"

19 
	~"lua/lcode.h
"

20 
	~"lua/ldebug.h
"

21 
	~"lua/ldo.h
"

22 
	~"lua/lfunc.h
"

23 
	~"lua/lobje˘.h
"

24 
	~"lua/l›codes.h
"

25 
	~"lua/l°©e.h
"

26 
	~"lua/l°rög.h
"

27 
	~"lua/…abÀ.h
"

28 
	~"lua/…m.h
"

29 
	~"lua/lvm.h
"

33 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

36 c⁄° *
gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
);

39 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

40 
	`lua_as£π
(
	`isLua
(
ci
));

41  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

42 
	}
}

45 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

46  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

47 
	}
}

50 
	$sw≠exåa
 (
lua_Sèã
 *
L
) {

51 i‡(
L
->
°©us
 =
LUA_YIELD
) {

52 
CÆlInfo
 *
ci
 = 
L
->ci;

53 
StkId
 
ãmp
 = 
ci
->
func
;

54 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

55 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
ãmp
);

57 
	}
}

63 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

64 i‡(
func
 =
NULL
 || 
mask
 == 0) {

65 
mask
 = 0;

66 
func
 = 
NULL
;

68 i‡(
	`isLua
(
L
->
ci
))

69 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

70 
L
->
hook
 = 
func
;

71 
L
->
ba£hookcou¡
 = 
cou¡
;

72 
	`ª£thookcou¡
(
L
);

73 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

75 
	}
}

78 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

79  
L
->
hook
;

80 
	}
}

83 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

84  
L
->
hookmask
;

85 
	}
}

88 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

89  
L
->
ba£hookcou¡
;

90 
	}
}

93 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

94 
°©us
;

95 
CÆlInfo
 *
ci
;

96 i‡(
Àvñ
 < 0)  0;

97 
	`lua_lock
(
L
);

98 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

99 
Àvñ
--;

100 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

101 
°©us
 = 1;

102 
¨
->
i_ci
 = 
ci
;

104 
°©us
 = 0;

105 
	`lua_u∆ock
(
L
);

106  
°©us
;

107 
	}
}

110 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

111 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

112 i‡(
s
 =
NULL
)  "?";

113  
	`gë°r
(
s
);

114 
	}
}

117 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

118 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

119 i‡(
n
 >
ci
->
u
.
l
.
ba£
 - ci->
func
 - 
≈¨ams
)

120  
NULL
;

122 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

125 
	}
}

128 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

129 
StkId
 *
pos
) {

130 c⁄° *
«me
 = 
NULL
;

131 
StkId
 
ba£
;

132 i‡(
	`isLua
(
ci
)) {

133 i‡(
n
 < 0)

134  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

136 
ba£
 = 
ci
->
u
.
l
.base;

137 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

141 
ba£
 = 
ci
->
func
 + 1;

142 i‡(
«me
 =
NULL
) {

143 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

144 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

145 
«me
 = "(*temporary)";

147  
NULL
;

149 *
pos
 = 
ba£
 + (
n
 - 1);

150  
«me
;

151 
	}
}

154 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

155 c⁄° *
«me
;

156 
	`lua_lock
(
L
);

157 
	`sw≠exåa
(
L
);

158 i‡(
¨
 =
NULL
) {

159 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

160 
«me
 = 
NULL
;

162 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

165 
StkId
 
pos
 = 0;

166 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

167 i‡(
«me
) {

168 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

169 
	`≠i_ö¸_t›
(
L
);

172 
	`sw≠exåa
(
L
);

173 
	`lua_u∆ock
(
L
);

174  
«me
;

175 
	}
}

178 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

179 
StkId
 
pos
 = 0;

180 c⁄° *
«me
;

181 
	`lua_lock
(
L
);

182 
	`sw≠exåa
(
L
);

183 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

184 i‡(
«me
)

185 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

186 
L
->
t›
--;

187 
	`sw≠exåa
(
L
);

188 
	`lua_u∆ock
(
L
);

189  
«me
;

190 
	}
}

193 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

194 i‡(
	`noLuaClosuª
(
˛
)) {

195 
¨
->
sour˚
 = "=[C]";

196 
¨
->
löedeföed
 = -1;

197 
¨
->
œ°löedeföed
 = -1;

198 
¨
->
wh©
 = "C";

201 
PrŸo
 *
p
 = 
˛
->
l
.p;

202 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

203 
¨
->
löedeföed
 = 
p
->linedefined;

204 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

205 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

207 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

208 
	}
}

211 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

212 i‡(
	`noLuaClosuª
(
f
)) {

213 
	`£äûvÆue
(
L
->
t›
);

214 
	`≠i_ö¸_t›
(
L
);

217 
i
;

218 
TVÆue
 
v
;

219 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

220 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

221 
	`£thvÆue
(
L
, L->
t›
, 
t
);

222 
	`≠i_ö¸_t›
(
L
);

223 
	`£tbvÆue
(&
v
, 1);

224 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

225 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

227 
	}
}

230 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

231 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

232 
°©us
 = 1;

233 ; *
wh©
; what++) {

234 *
wh©
) {

236 
	`funcöfo
(
¨
, 
f
);

240 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

244 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

245 i‡(
	`noLuaClosuª
(
f
)) {

246 
¨
->
isv¨¨g
 = 1;

247 
¨
->
≈¨ams
 = 0;

250 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

251 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

256 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

261 i‡(
ci
 && !(ci->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

262 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
->
¥evious
, &¨->
«me
);

264 
¨
->
«mewh©
 = 
NULL
;

265 i‡(
¨
->
«mewh©
 =
NULL
) {

266 
¨
->
«mewh©
 = "";

267 
¨
->
«me
 = 
NULL
;

274 : 
°©us
 = 0;

277  
°©us
;

278 
	}
}

281 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

282 
°©us
;

283 
Closuª
 *
˛
;

284 
CÆlInfo
 *
ci
;

285 
StkId
 
func
;

286 
	`lua_lock
(
L
);

287 
	`sw≠exåa
(
L
);

288 i‡(*
wh©
 == '>') {

289 
ci
 = 
NULL
;

290 
func
 = 
L
->
t›
 - 1;

291 
	`≠i_check
(
L
, 
	`âisfun˘i⁄
(
func
), "functionÉxpected");

292 
wh©
++;

293 
L
->
t›
--;

296 
ci
 = 
¨
->
i_ci
;

297 
func
 = 
ci
->func;

298 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

300 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

301 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

302 i‡(
	`°rchr
(
wh©
, 'f')) {

303 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

304 
	`≠i_ö¸_t›
(
L
);

306 
	`sw≠exåa
(
L
);

307 i‡(
	`°rchr
(
wh©
, 'L'))

308 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

309 
	`lua_u∆ock
(
L
);

310  
°©us
;

311 
	}
}

320 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

321 c⁄° **
«me
);

327 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

328 i‡(
	`ISK
(
c
)) {

329 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

330 i‡(
	`âis°rög
(
kvÆue
)) {

331 *
«me
 = 
	`svÆue
(
kvÆue
);

337 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

338 i‡(
wh©
 && *what == 'c') {

343 *
«me
 = "?";

344 
	}
}

347 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

348 i‡(
pc
 < 
jm±¨gë
)

350  
pc
;

351 
	}
}

357 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

358 
pc
;

359 
£åeg
 = -1;

360 
jm±¨gë
 = 0;

361 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

362 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

363 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

364 
a
 = 
	`GETARG_A
(
i
);

365 
›
) {

366 
OP_LOADNIL
: {

367 
b
 = 
	`GETARG_B
(
i
);

368 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

369 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

372 
OP_TFORCALL
: {

373 i‡(
ªg
 >
a
 + 2)

374 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

377 
OP_CALL
:

378 
OP_TAILCALL
: {

379 i‡(
ªg
 >
a
)

380 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

383 
OP_JMP
: {

384 
b
 = 
	`GETARG_sBx
(
i
);

385 
de°
 = 
pc
 + 1 + 
b
;

387 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

388 i‡(
de°
 > 
jm±¨gë
)

389 
jm±¨gë
 = 
de°
;

393 
OP_TEST
: {

394 i‡(
ªg
 =
a
)

395 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

399 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

400 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

404  
£åeg
;

405 
	}
}

408 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

409 c⁄° **
«me
) {

410 
pc
;

411 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

412 i‡(*
«me
)

415 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

416 i‡(
pc
 != -1) {

417 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

418 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

419 
›
) {

420 
OP_MOVE
: {

421 
b
 = 
	`GETARG_B
(
i
);

422 i‡(
b
 < 
	`GETARG_A
(
i
))

423  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

426 
OP_GETTABUP
:

427 
OP_GETTABLE
: {

428 
k
 = 
	`GETARG_C
(
i
);

429 
t
 = 
	`GETARG_B
(
i
);

430 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

431 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

432 : 
	`upvÆ«me
(
p
, 
t
);

433 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

434  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

436 
OP_GETUPVAL
: {

437 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

440 
OP_LOADK
:

441 
OP_LOADKX
: {

442 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

443 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

444 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

445 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

450 
OP_SELF
: {

451 
k
 = 
	`GETARG_C
(
i
);

452 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

458  
NULL
;

459 
	}
}

462 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

463 
TMS
 
tm
;

464 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

465 
pc
 = 
	`cuºíçc
(
ci
);

466 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

467 
	`GET_OPCODE
(
i
)) {

468 
OP_CALL
:

469 
OP_TAILCALL
:

470  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

471 
OP_TFORCALL
: {

472 *
«me
 = "for iterator";

476 
OP_SELF
:

477 
OP_GETTABUP
:

478 
OP_GETTABLE
: 
tm
 = 
TM_INDEX
; ;

479 
OP_SETTABUP
:

480 
OP_SETTABLE
: 
tm
 = 
TM_NEWINDEX
; ;

481 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

482 
OP_ADD
: 
tm
 = 
TM_ADD
; ;

483 
OP_SUB
: 
tm
 = 
TM_SUB
; ;

484 
OP_MUL
: 
tm
 = 
TM_MUL
; ;

485 
OP_DIV
: 
tm
 = 
TM_DIV
; ;

486 
OP_MOD
: 
tm
 = 
TM_MOD
; ;

487 
OP_POW
: 
tm
 = 
TM_POW
; ;

488 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

489 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

490 
OP_LT
: 
tm
 = 
TM_LT
; ;

491 
OP_LE
: 
tm
 = 
TM_LE
; ;

492 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

494  
NULL
;

496 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

498 
	}
}

508 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

509 
StkId
 
p
;

510 
p
 = 
ci
->
u
.
l
.
ba£
;Ö < ci->
t›
;Ö++)

511 i‡(
o
 =
p
)  1;

513 
	}
}

516 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

517 c⁄° **
«me
) {

518 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

519 
i
;

520 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

521 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

522 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

526  
NULL
;

527 
	}
}

530 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

531 
CÆlInfo
 *
ci
 = 
L
->ci;

532 c⁄° *
«me
 = 
NULL
;

533 c⁄° *
t
 = 
	`objty≥«me
(
o
);

534 c⁄° *
köd
 = 
NULL
;

535 i‡(
	`isLua
(
ci
)) {

536 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

537 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

538 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

539 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

541 i‡(
köd
)

542 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†%†" 
LUA_QS
 " (a %s value)",

543 
›
, 
köd
, 
«me
, 
t
);

545 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue", 
›
, 
t
);

546 
	}
}

549 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, 
StkId
 
p1
, StkId 
p2
) {

550 i‡(
	`âis°rög
(
p1
Ë|| 
	`âi¢umbî
’1)Ëp1 = 
p2
;

551 
	`lua_as£π
(!
	`âis°rög
(
p1
Ë&& !
	`âi¢umbî
(p1));

552 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

553 
	}
}

556 
l_n‹ë
 
	$luaG_¨ôhîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

557 
TVÆue
 
ãmp
;

558 i‡(
	`luaV_t⁄umbî
(
p1
, &
ãmp
Ë=
NULL
)

559 
p2
 = 
p1
;

560 
	`luaG_ty≥îr‹
(
L
, 
p2
, "performárithmetic on");

561 
	}
}

564 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

565 c⁄° *
t1
 = 
	`objty≥«me
(
p1
);

566 c⁄° *
t2
 = 
	`objty≥«me
(
p2
);

567 i‡(
t1
 =
t2
)

568 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

570 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

571 
	}
}

574 
	$addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
) {

575 
CÆlInfo
 *
ci
 = 
L
->ci;

576 i‡(
	`isLua
(
ci
)) {

577 
buff
[
LUA_IDSIZE
];

578 
löe
 = 
	`cuºíéöe
(
ci
);

579 
TSåög
 *
§c
 = 
	`ci_func
(
ci
)->
p
->
sour˚
;

580 i‡(
§c
)

581 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

583 
buff
[0] = '?'; buff[1] = '\0';

585 
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

587 
	}
}

590 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

591 i‡(
L
->
îrfunc
 != 0) {

592 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

593 i‡(!
	`âisfun˘i⁄
(
îrfunc
)Ë
	`luaD_throw
(
L
, 
LUA_ERRERR
);

594 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

595 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

596 
L
->
t›
++;

597 
	`luaD_ˇŒ
(
L
, L->
t›
 - 2, 1, 0);

599 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

600 
	}
}

603 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

604 
va_li°
 
¨gp
;

605 
	`va_°¨t
(
¨gp
, 
fmt
);

606 
	`addöfo
(
L
, 
	`luaO_pushvf°rög
(L, 
fmt
, 
¨gp
));

607 
	`va_íd
(
¨gp
);

608 
	`luaG_îr‹msg
(
L
);

609 
	}
}

	@ldo.c

11 
	~<«utûus/libccom∑t.h
>

12 
	#ldo_c


	)

13 
	#LUA_CORE


	)

15 
	~"lua/lua.h
"

17 
	~"lua/œpi.h
"

18 
	~"lua/ldebug.h
"

19 
	~"lua/ldo.h
"

20 
	~"lua/lfunc.h
"

21 
	~"lua/lgc.h
"

22 
	~"lua/lmem.h
"

23 
	~"lua/lobje˘.h
"

24 
	~"lua/l›codes.h
"

25 
	~"lua/Õ¨£r.h
"

26 
	~"lua/l°©e.h
"

27 
	~"lua/l°rög.h
"

28 
	~"lua/…abÀ.h
"

29 
	~"lua/…m.h
"

30 
	~"lua/lundump.h
"

31 
	~"lua/lvm.h
"

32 
	~"lua/lzio.h
"

50 #i‡!
deföed
(
LUAI_THROW
)

52 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

54 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

55 
	#LUAI_TRY
(
L
,
c
,
a
) \

56 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

57 
	#luai_jmpbuf
 

	)

59 #ñi‡
deföed
(
LUA_USE_ULONGJMP
)

61 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

62 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

63 
	#luai_jmpbuf
 
jmp_buf


	)

67 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

68 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

69 
	#luai_jmpbuf
 
jmp_buf


	)

78 
	slua_l⁄gjmp
 {

79 
lua_l⁄gjmp
 *
	m¥evious
;

80 
luai_jmpbuf
 
	mb
;

81 vﬁ©ûê
	m°©us
;

85 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

86 
îrcode
) {

87 
LUA_ERRMEM
: {

88 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

91 
LUA_ERRERR
: {

92 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

96 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

100 
L
->
t›
 = 
ﬁdt›
 + 1;

101 
	}
}

104 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

105 i‡(
L
->
îr‹Jmp
) {

106 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

107 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

110 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

111 i‡(
	`G
(
L
)->
maöthªad
->
îr‹Jmp
) {

112 
	`£tobjs2s
(
L
, 
	`G
(L)->
maöthªad
->
t›
++, L->top - 1);

113 
	`luaD_throw
(
	`G
(
L
)->
maöthªad
, 
îrcode
);

116 i‡(
	`G
(
L
)->
∑nic
) {

117 
	`lua_u∆ock
(
L
);

118 (
	`G
(
L
)->
∑nic
)(L);

120 
	`ab‹t
();

123 
	}
}

126 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

127 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

128 
	`¥ötk
("\nÜua_rawunportected | | 1 ");

129 
lua_l⁄gjmp
 
lj
;

130 
lj
.
°©us
 = 
LUA_OK
;

131 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

132 
L
->
îr‹Jmp
 = &
lj
;

133 
	`¥ötk
("\nÜua_rawunportected | | 2 ");

134 
	`LUAI_TRY
(
L
, &
lj
,

135 (*
f
)(
L
, 
ud
);

137 
	`¥ötk
("\nÜua_rawunportected | | 3 ");

138 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

139 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

140  
lj
.
°©us
;

141 
	}
}

146 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

147 
CÆlInfo
 *
ci
;

148 
GCObje˘
 *
up
;

149 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

150 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
gch
.
√xt
)

151 
	`gco2uv
(
up
)->
v
 = (gco2uv(up)->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

152 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

153 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

154 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

155 i‡(
	`isLua
(
ci
))

156 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

158 
	}
}

162 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

165 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

166 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

167 
lim
 = 
L
->
°acksize
;

168 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

169 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

170 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

171 ; 
lim
 < 
√wsize
;Üim++)

172 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

173 
L
->
°acksize
 = 
√wsize
;

174 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

175 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

176 
	}
}

179 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

180 
size
 = 
L
->
°acksize
;

181 i‡(
size
 > 
LUAI_MAXSTACK
)

182 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

184 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

185 
√wsize
 = 2 * 
size
;

186 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

187 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

188 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

189 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

190 
	`luaG_ru√º‹
(
L
, "stack overflow");

193 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

195 
	}
}

198 
	$°acköu£
 (
lua_Sèã
 *
L
) {

199 
CÆlInfo
 *
ci
;

200 
StkId
 
lim
 = 
L
->
t›
;

201 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

202 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

203 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

205  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

206 
	}
}

209 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

210 
öu£
 = 
	`°acköu£
(
L
);

211 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

212 i‡(
goodsize
 > 
LUAI_MAXSTACK
) goodsize = LUAI_MAXSTACK;

213 i‡(
öu£
 > 
LUAI_MAXSTACK
 ||

214 
goodsize
 >
L
->
°acksize
)

215 
	`c⁄dmove°ack
(
L
);

217 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

218 
	}
}

221 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

222 
lua_Hook
 
hook
 = 
L
->hook;

223 i‡(
hook
 && 
L
->
Ælowhook
) {

224 
CÆlInfo
 *
ci
 = 
L
->ci;

225 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

226 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

227 
lua_Debug
 
¨
;

228 
¨
.
evít
 =Évent;

229 
¨
.
cuºíéöe
 = 
löe
;

230 
¨
.
i_ci
 = 
ci
;

231 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

232 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

233 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

234 
L
->
Ælowhook
 = 0;

235 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

236 
	`lua_u∆ock
(
L
);

237 (*
hook
)(
L
, &
¨
);

238 
	`lua_lock
(
L
);

239 
	`lua_as£π
(!
L
->
Ælowhook
);

240 
L
->
Ælowhook
 = 1;

241 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

242 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

243 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

245 
	}
}

248 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

249 
hook
 = 
LUA_HOOKCALL
;

250 
ci
->
u
.
l
.
ßvedpc
++;

251 i‡(
	`isLua
(
ci
->
¥evious
) &&

252 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

253 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

254 
hook
 = 
LUA_HOOKTAILCALL
;

256 
	`luaD_hook
(
L
, 
hook
, -1);

257 
ci
->
u
.
l
.
ßvedpc
--;

258 
	}
}

261 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

262 
i
;

263 
nfix¨gs
 = 
p
->
num∑øms
;

264 
StkId
 
ba£
, 
fixed
;

265 
	`lua_as£π
(
a˘uÆ
 >
nfix¨gs
);

267 
	`luaD_check°ack
(
L
, 
p
->
max°acksize
);

268 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

269 
ba£
 = 
L
->
t›
;

270 
i
=0; i<
nfix¨gs
; i++) {

271 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

272 
	`£äûvÆue
(
fixed
 + 
i
);

274  
ba£
;

275 
	}
}

278 
StkId
 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

279 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

280 
StkId
 
p
;

281 
±rdiff_t
 
fun¸
 = 
	`ßve°ack
(
L
, 
func
);

282 i‡(!
	`âisfun˘i⁄
(
tm
))

283 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

285 
p
 = 
L
->
t›
;Ö > 
func
;Ö--Ë
	`£tobjs2s
(L,Ö,Ö-1);

286 
	`ö¸_t›
(
L
);

287 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

288 
	`£tobj2s
(
L
, 
func
, 
tm
);

289  
func
;

290 
	}
}

294 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

300 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

301 
lua_CFun˘i⁄
 
f
;

302 
CÆlInfo
 *
ci
;

303 
n
;

304 
±rdiff_t
 
fun¸
 = 
	`ßve°ack
(
L
, 
func
);

305 
	`ây≥
(
func
)) {

306 
LUA_TLCF
:

307 
f
 = 
	`fvÆue
(
func
);

308 
Cfunc
;

309 
LUA_TCCL
: {

310 
f
 = 
	`˛CvÆue
(
func
)->f;

311 
Cfunc
:

312 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

313 
ci
 = 
	`√xt_ci
(
L
);

314 
ci
->
ƒesu…s
 =Çresults;

315 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

316 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

317 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

318 
ci
->
ˇŒ°©us
 = 0;

319 
	`luaC_checkGC
(
L
);

320 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

321 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

322 
	`lua_u∆ock
(
L
);

323 
n
 = (*
f
)(
L
);

324 
	`lua_lock
(
L
);

325 
	`≠i_check√Àms
(
L
, 
n
);

326 
	`luaD_posˇŒ
(
L
, L->
t›
 - 
n
);

329 
LUA_TLCL
: {

330 
StkId
 
ba£
;

331 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

332 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

333 
	`luaD_check°ack
(
L
, 
p
->
max°acksize
);

334 ; 
n
 < 
p
->
num∑øms
;Ç++)

335 
	`£äûvÆue
(
L
->
t›
++);

336 i‡(!
p
->
is_v¨¨g
) {

337 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

338 
ba£
 = 
func
 + 1;

341 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

342 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

344 
ci
 = 
	`√xt_ci
(
L
);

345 
ci
->
ƒesu…s
 =Çresults;

346 
ci
->
func
 = func;

347 
ci
->
u
.
l
.
ba£
 = base;

348 
ci
->
t›
 = 
ba£
 + 
p
->
max°acksize
;

349 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

350 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

351 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

352 
L
->
t›
 = 
ci
->top;

353 
	`luaC_checkGC
(
L
);

354 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

355 
	`ˇŒhook
(
L
, 
ci
);

359 
func
 = 
	`åyfuncTM
(
L
, func);

360  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

363 
	}
}

366 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
fú°Resu…
) {

367 
StkId
 
ªs
;

368 
w™ãd
, 
i
;

369 
CÆlInfo
 *
ci
 = 
L
->ci;

370 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

371 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

372 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

373 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

374 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

376 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

378 
ªs
 = 
ci
->
func
;

379 
w™ãd
 = 
ci
->
ƒesu…s
;

380 
L
->
ci
 = còci->
¥evious
;

382 
i
 = 
w™ãd
; i !0 && 
fú°Resu…
 < 
L
->
t›
; i--)

383 
	`£tobjs2s
(
L
, 
ªs
++, 
fú°Resu…
++);

384 
i
-- > 0)

385 
	`£äûvÆue
(
ªs
++);

386 
L
->
t›
 = 
ªs
;

387  (
w™ãd
 - 
LUA_MULTRET
);

388 
	}
}

397 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
, 
Ælowyõld
) {

398 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
) {

399 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

400 
	`luaG_ru√º‹
(
L
, "C stack overflow");

401 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

402 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

404 i‡(!
Ælowyõld
Ë
L
->
¬y
++;

405 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

406 
	`luaV_execuã
(
L
);

407 i‡(!
Ælowyõld
Ë
L
->
¬y
--;

408 
L
->
nCˇŒs
--;

409 
	}
}

412 
	$föishCˇŒ
 (
lua_Sèã
 *
L
) {

413 
CÆlInfo
 *
ci
 = 
L
->ci;

414 
n
;

415 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
);

416 
	`lua_as£π
(
L
->
¬y
 == 0);

417 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

418 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

419 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

422 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

424 i‡(!(
ci
->
ˇŒ°©us
 & 
CIST_STAT
))

425 
ci
->
u
.
c
.
°©us
 = 
LUA_YIELD
;

426 
	`lua_as£π
(
ci
->
u
.
c
.
°©us
 !
LUA_OK
);

427 
ci
->
ˇŒ°©us
 = (ci->ˇŒ°©u†& ~(
CIST_YPCALL
 | 
CIST_STAT
)Ë| 
CIST_YIELDED
;

428 
	`lua_u∆ock
(
L
);

429 
n
 = (*
ci
->
u
.
c
.
k
)(
L
);

430 
	`lua_lock
(
L
);

431 
	`≠i_check√Àms
(
L
, 
n
);

433 
	`luaD_posˇŒ
(
L
, L->
t›
 - 
n
);

434 
	}
}

437 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

438 
	`UNUSED
(
ud
);

440 i‡(
L
->
ci
 =&L->
ba£_ci
)

442 i‡(!
	`isLua
(
L
->
ci
))

443 
	`föishCˇŒ
(
L
);

445 
	`luaV_föishOp
(
L
);

446 
	`luaV_execuã
(
L
);

449 
	}
}

455 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

456 
CÆlInfo
 *
ci
;

457 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

458 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

459  
ci
;

461  
NULL
;

462 
	}
}

465 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

466 
StkId
 
ﬁdt›
;

467 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

468 i‡(
ci
 =
NULL
)  0;

470 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

471 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

472 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

473 
L
->
ci
 = ci;

474 
L
->
Ælowhook
 = 
ci
->
u
.
c
.
ﬁd_Ælowhook
;

475 
L
->
¬y
 = 0;

476 
	`luaD_shrök°ack
(
L
);

477 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

478 
ci
->
ˇŒ°©us
 |
CIST_STAT
;

479 
ci
->
u
.
c
.
°©us
 = status;

481 
	}
}

489 
l_n‹ë
 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
StkId
 
fú°Arg
) {

490 
L
->
t›
 = 
fú°Arg
;

491 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

492 
	`≠i_ö¸_t›
(
L
);

493 
	`luaD_throw
(
L
, -1);

494 
	}
}

500 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

501 
nCˇŒs
 = 
L
->nCcalls;

502 
StkId
 
fú°Arg
 = 
	`ˇ°
(StkId, 
ud
);

503 
CÆlInfo
 *
ci
 = 
L
->ci;

504 i‡(
nCˇŒs
 >
LUAI_MAXCCALLS
)

505 
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
fú°Arg
);

506 i‡(
L
->
°©us
 =
LUA_OK
) {

507 i‡(
ci
 !&
L
->
ba£_ci
)

508 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
fú°Arg
);

510 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

511 
	`luaV_execuã
(
L
);

513 i‡(
L
->
°©us
 !
LUA_YIELD
)

514 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
fú°Arg
);

516 
L
->
°©us
 = 
LUA_OK
;

517 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

518 i‡(
	`isLua
(
ci
))

519 
	`luaV_execuã
(
L
);

521 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

522 
n
;

523 
ci
->
u
.
c
.
°©us
 = 
LUA_YIELD
;

524 
ci
->
ˇŒ°©us
 |
CIST_YIELDED
;

525 
	`lua_u∆ock
(
L
);

526 
n
 = (*
ci
->
u
.
c
.
k
)(
L
);

527 
	`lua_lock
(
L
);

528 
	`≠i_check√Àms
(
L
, 
n
);

529 
fú°Arg
 = 
L
->
t›
 - 
n
;

531 
	`luaD_posˇŒ
(
L
, 
fú°Arg
);

533 
	`uƒﬁl
(
L
, 
NULL
);

535 
	`lua_as£π
(
nCˇŒs
 =
L
->nCcalls);

536 
	}
}

539 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

540 
°©us
;

541 
ﬁd¬y
 = 
L
->
¬y
;

542 
	`lua_lock
(
L
);

543 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

544 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

545 
L
->
¬y
 = 0;

546 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

547 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, L->
t›
 - 
«rgs
);

548 i‡(
°©us
 == -1)

549 
°©us
 = 
LUA_ERRRUN
;

551 
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

552 i‡(
	`ªcovî
(
L
, 
°©us
))

553 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, 
NULL
);

555 
L
->
°©us
 = 
	`ˇ°_byã
(status);

556 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

557 
L
->
ci
->
t›
 = L->top;

561 
	`lua_as£π
(
°©us
 =
L
->status);

563 
L
->
¬y
 = 
ﬁd¬y
;

564 
L
->
nCˇŒs
--;

565 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

566 
	`lua_u∆ock
(
L
);

567  
°©us
;

568 
	}
}

571 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
˘x
, 
lua_CFun˘i⁄
 
k
) {

572 
CÆlInfo
 *
ci
 = 
L
->ci;

573 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

574 
	`lua_lock
(
L
);

575 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

576 i‡(
L
->
¬y
 > 0) {

577 i‡(
L
 !
	`G
(L)->
maöthªad
)

578 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

580 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

582 
L
->
°©us
 = 
LUA_YIELD
;

583 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

584 i‡(
	`isLua
(
ci
)) {

585 
	`≠i_check
(
L
, 
k
 =
NULL
, "hooks cannot continueáfter yielding");

588 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

589 
ci
->
u
.
c
.
˘x
 = ctx;

590 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

591 
	`luaD_throw
(
L
, 
LUA_YIELD
);

593 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

594 
	`lua_u∆ock
(
L
);

596 
	}
}

599 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

600 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

601 
°©us
;

602 
	`¥ötk
("\n LUAD-pcall | 1 ");

603 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

604 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

605 
ﬁd_¬y
 = 
L
->
¬y
;

606 
	`¥ötk
("\n LUAD-pcall | 1.1 ");

607 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

608 
L
->
îrfunc
 = 
ef
;

609 
	`¥ötk
("\n LUAD-pcall | 1.2 ");

611 
	`¥ötk
("\n LUAD-pcall | 2 ");

612 
°©us
 = 
LUA_OK
;

613 i‡(
°©us
 !
LUA_OK
) {

614 
	`¥ötk
("\n LUAD-pcall | 3 ");

615 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

616 
	`¥ötk
("\n LUAD-pcall | 4 ");

617 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

618 
	`¥ötk
("\n LUAD-pcall | 5 ");

619 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

620 
	`¥ötk
("\n LUAD-pcall | 6 ");

621 
L
->
ci
 = 
ﬁd_ci
;

622 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

623 
L
->
¬y
 = 
ﬁd_¬y
;

624 
	`luaD_shrök°ack
(
L
);

625 
	`¥ötk
("\n LUAD-pcall | 7 ");

627 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

628  
°©us
;

629 
	}
}

636 
	sSP¨£r
 {

637 
ZIO
 *
	mz
;

638 
Mbuf„r
 
	mbuff
;

639 
Dynd©a
 
	mdyd
;

640 c⁄° *
	mmode
;

641 c⁄° *
	m«me
;

645 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

646 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

647 
	`luaO_pushf°rög
(
L
,

648 "©ãm±Åÿlﬂdá %†chunk (modêi†" 
LUA_QS
 ")", 
x
, 
mode
);

649 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

651 
	}
}

654 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

655 
i
;

656 
Closuª
 *
˛
;

657 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

658 
c
 = 
	`zgëc
(
p
->
z
);

659 i‡(
c
 =
LUA_SIGNATURE
[0]) {

660 
	`checkmode
(
L
, 
p
->
mode
, "binary");

661 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
, &p->
buff
,Ö->
«me
);

664 
	`checkmode
(
L
, 
p
->
mode
, "text");

665 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

667 
	`lua_as£π
(
˛
->
l
.
nupvÆues
 =˛->l.
p
->
sizeupvÆues
);

668 
i
 = 0; i < 
˛
->
l
.
nupvÆues
; i++) {

669 
UpVÆ
 *
up
 = 
	`luaF_√wupvÆ
(
L
);

670 
˛
->
l
.
upvÆs
[
i
] = 
up
;

671 
	`luaC_objb¨rõr
(
L
, 
˛
, 
up
);

673 
	}
}

676 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

677 c⁄° *
mode
) {

678 
SP¨£r
 
p
;

679 
°©us
;

680 
L
->
¬y
++;

681 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

682 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

683 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

684 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

685 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

686 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

687 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

688 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

689 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

690 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

691 
L
->
¬y
--;

692  
°©us
;

693 
	}
}

	@ldump.c

9 
	#ldump_c


	)

10 
	#LUA_CORE


	)

11 
	~<«utûus/libccom∑t.h
>

12 
	~"lua/lua.h
"

14 
	~"lua/lobje˘.h
"

15 
	~"lua/l°©e.h
"

16 
	~"lua/lundump.h
"

19 
lua_Sèã
* 
	mL
;

20 
lua_Wrôî
 
	mwrôî
;

21 * 
	md©a
;

22 
	m°rù
;

23 
	m°©us
;

24 } 
	tDumpSèã
;

26 
	#DumpMem
(
b
,
n
,
size
,
D
Ë
	`DumpBlock
(b,“)*(size),D)

	)

27 
	#DumpV¨
(
x
,
D
Ë
	`DumpMem
(&x,1,(x),D)

	)

29 
	$DumpBlock
(c⁄° * 
b
, 
size_t
 
size
, 
DumpSèã
* 
D
)

31 i‡(
D
->
°©us
==0)

33 
	`lua_u∆ock
(
D
->
L
);

34 
D
->
°©us
=(*D->
wrôî
)(D->
L
,
b
,
size
,D->
d©a
);

35 
	`lua_lock
(
D
->
L
);

37 
	}
}

39 
	$DumpCh¨
(
y
, 
DumpSèã
* 
D
)

41 
x
=()
y
;

42 
	`DumpV¨
(
x
,
D
);

43 
	}
}

45 
	$DumpI¡
(
x
, 
DumpSèã
* 
D
)

47 
	`DumpV¨
(
x
,
D
);

48 
	}
}

50 
	$DumpNumbî
(
lua_Numbî
 
x
, 
DumpSèã
* 
D
)

52 
	`DumpV¨
(
x
,
D
);

53 
	}
}

55 
	$DumpVe˘‹
(c⁄° * 
b
, 
n
, 
size_t
 
size
, 
DumpSèã
* 
D
)

57 
	`DumpI¡
(
n
,
D
);

58 
	`DumpMem
(
b
,
n
,
size
,
D
);

59 
	}
}

61 
	$DumpSåög
(c⁄° 
TSåög
* 
s
, 
DumpSèã
* 
D
)

63 i‡(
s
==
NULL
)

65 
size_t
 
size
=0;

66 
	`DumpV¨
(
size
,
D
);

70 
size_t
 
size
=
s
->
tsv
.
Àn
+1;

71 
	`DumpV¨
(
size
,
D
);

72 
	`DumpBlock
(
	`gë°r
(
s
),
size
*(),
D
);

74 
	}
}

76 
	#DumpCode
(
f
,
D
Ë
	`DumpVe˘‹
(f->
code
,f->
sizecode
,(
In°ru˘i⁄
),D)

	)

78 
DumpFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
DumpSèã
* 
D
);

80 
	$DumpC⁄°™ts
(c⁄° 
PrŸo
* 
f
, 
DumpSèã
* 
D
)

82 
i
,
n
=
f
->
sizek
;

83 
	`DumpI¡
(
n
,
D
);

84 
i
=0; i<
n
; i++)

86 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

87 
	`DumpCh¨
(
	`ây≥nv
(
o
),
D
);

88 
	`ây≥nv
(
o
))

90 
LUA_TNIL
:

92 
LUA_TBOOLEAN
:

93 
	`DumpCh¨
(
	`bvÆue
(
o
),
D
);

95 
LUA_TNUMBER
:

96 
	`DumpNumbî
(
	`nvÆue
(
o
),
D
);

98 
LUA_TSTRING
:

99 
	`DumpSåög
(
	`øwtsvÆue
(
o
),
D
);

101 : 
	`lua_as£π
(0);

104 
n
=
f
->
sizï
;

105 
	`DumpI¡
(
n
,
D
);

106 
i
=0; i<
n
; i++Ë
	`DumpFun˘i⁄
(
f
->
p
[i],
D
);

107 
	}
}

109 
	$DumpUpvÆues
(c⁄° 
PrŸo
* 
f
, 
DumpSèã
* 
D
)

111 
i
,
n
=
f
->
sizeupvÆues
;

112 
	`DumpI¡
(
n
,
D
);

113 
i
=0; i<
n
; i++)

115 
	`DumpCh¨
(
f
->
upvÆues
[
i
].
ö°ack
,
D
);

116 
	`DumpCh¨
(
f
->
upvÆues
[
i
].
idx
,
D
);

118 
	}
}

120 
	$DumpDebug
(c⁄° 
PrŸo
* 
f
, 
DumpSèã
* 
D
)

122 
i
,
n
;

123 
	`DumpSåög
((
D
->
°rù
Ë? 
NULL
 : 
f
->
sour˚
,D);

124 
n
(
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

125 
	`DumpVe˘‹
(
f
->
löeöfo
,
n
,(),
D
);

126 
n
(
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

127 
	`DumpI¡
(
n
,
D
);

128 
i
=0; i<
n
; i++)

130 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
,
D
);

131 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
,
D
);

132 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
,
D
);

134 
n
(
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

135 
	`DumpI¡
(
n
,
D
);

136 
i
=0; i<
n
; i++Ë
	`DumpSåög
(
f
->
upvÆues
[i].
«me
,
D
);

137 
	}
}

139 
	$DumpFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
DumpSèã
* 
D
)

141 
	`DumpI¡
(
f
->
löedeföed
,
D
);

142 
	`DumpI¡
(
f
->
œ°löedeföed
,
D
);

143 
	`DumpCh¨
(
f
->
num∑øms
,
D
);

144 
	`DumpCh¨
(
f
->
is_v¨¨g
,
D
);

145 
	`DumpCh¨
(
f
->
max°acksize
,
D
);

146 
	`DumpCode
(
f
,
D
);

147 
	`DumpC⁄°™ts
(
f
,
D
);

148 
	`DumpUpvÆues
(
f
,
D
);

149 
	`DumpDebug
(
f
,
D
);

150 
	}
}

152 
	$DumpHódî
(
DumpSèã
* 
D
)

154 
lu_byã
 
h
[
LUAC_HEADERSIZE
];

155 
	`luaU_hódî
(
h
);

156 
	`DumpBlock
(
h
,
LUAC_HEADERSIZE
,
D
);

157 
	}
}

162 
	$luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
, * 
d©a
, 
°rù
)

164 
DumpSèã
 
D
;

165 
D
.
L
=L;

166 
D
.
wrôî
=
w
;

167 
D
.
d©a
=data;

168 
D
.
°rù
=strip;

169 
D
.
°©us
=0;

170 
	`DumpHódî
(&
D
);

171 
	`DumpFun˘i⁄
(
f
,&
D
);

172  
D
.
°©us
;

173 
	}
}

	@lfunc.c

10 
	#lfunc_c


	)

11 
	#LUA_CORE


	)

12 
	~<«utûus/libccom∑t.h
>

13 
	~"lua/lua.h
"

15 
	~"lua/lfunc.h
"

16 
	~"lua/lgc.h
"

17 
	~"lua/lmem.h
"

18 
	~"lua/lobje˘.h
"

19 
	~"lua/l°©e.h
"

23 
Closuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

24 
Closuª
 *
c
 = &
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
), 
NULL
, 0)->
˛
;

25 
c
->c.
nupvÆues
 = 
	`ˇ°_byã
(
n
);

26  
c
;

27 
	}
}

30 
Closuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

31 
Closuª
 *
c
 = &
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
), 
NULL
, 0)->
˛
;

32 
c
->
l
.
p
 = 
NULL
;

33 
c
->
l
.
nupvÆues
 = 
	`ˇ°_byã
(
n
);

34 
n
--Ë
c
->
l
.
upvÆs
[n] = 
NULL
;

35  
c
;

36 
	}
}

39 
UpVÆ
 *
	$luaF_√wupvÆ
 (
lua_Sèã
 *
L
) {

40 
UpVÆ
 *
uv
 = &
	`luaC_√wobj
(
L
, 
LUA_TUPVAL
, (UpVÆ), 
NULL
, 0)->uv;

41 
uv
->
v
 = &uv->
u
.
vÆue
;

42 
	`£äûvÆue
(
uv
->
v
);

43  
uv
;

44 
	}
}

47 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

48 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

49 
GCObje˘
 **
µ
 = &
L
->
›íupvÆ
;

50 
UpVÆ
 *
p
;

51 
UpVÆ
 *
uv
;

52 *
µ
 !
NULL
 && (
p
 = 
	`gco2uv
(*µ))->
v
 >
Àvñ
) {

53 
GCObje˘
 *
o
 = 
	`obj2gco
(
p
);

54 
	`lua_as£π
(
p
->
v
 !&p->
u
.
vÆue
);

55 
	`lua_as£π
(!
	`isﬁd
(
o
Ë|| isﬁd(
	`obj2gco
(
L
)));

56 i‡(
p
->
v
 =
Àvñ
) {

57 i‡(
	`isdód
(
g
, 
o
))

58 
	`ch™gewhôe
(
o
);

59  
p
;

61 
µ
 = &
p
->
√xt
;

64 
uv
 = &
	`luaC_√wobj
(
L
, 
LUA_TUPVAL
, (
UpVÆ
), 
µ
, 0)->uv;

65 
uv
->
v
 = 
Àvñ
;

66 
uv
->
u
.
l
.
¥ev
 = &
g
->
uvhód
;

67 
uv
->
u
.
l
.
√xt
 = 
g
->
uvhód
.u.l.next;

68 
uv
->
u
.
l
.
√xt
->u.l.
¥ev
 = uv;

69 
g
->
uvhód
.
u
.
l
.
√xt
 = 
uv
;

70 
	`lua_as£π
(
uv
->
u
.
l
.
√xt
->u.l.
¥ev
 == uv && uv->u.l.prev->u.l.next == uv);

71  
uv
;

72 
	}
}

75 
	$u∆ökupvÆ
 (
UpVÆ
 *
uv
) {

76 
	`lua_as£π
(
uv
->
u
.
l
.
√xt
->u.l.
¥ev
 == uv && uv->u.l.prev->u.l.next == uv);

77 
uv
->
u
.
l
.
√xt
->u.l.
¥ev
 = uv->u.l.prev;

78 
uv
->
u
.
l
.
¥ev
->u.l.
√xt
 = uv->u.l.next;

79 
	}
}

82 
	$luaF_‰ìupvÆ
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

83 i‡(
uv
->
v
 !&uv->
u
.
vÆue
)

84 
	`u∆ökupvÆ
(
uv
);

85 
	`luaM_‰ì
(
L
, 
uv
);

86 
	}
}

89 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

90 
UpVÆ
 *
uv
;

91 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

92 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = 
	`gco2uv
(L->›íupvÆ))->
v
 >
Àvñ
) {

93 
GCObje˘
 *
o
 = 
	`obj2gco
(
uv
);

94 
	`lua_as£π
(!
	`isbœck
(
o
Ë&& 
uv
->
v
 !&uv->
u
.
vÆue
);

95 
L
->
›íupvÆ
 = 
uv
->
√xt
;

96 i‡(
	`isdód
(
g
, 
o
))

97 
	`luaF_‰ìupvÆ
(
L
, 
uv
);

99 
	`u∆ökupvÆ
(
uv
);

100 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

101 
uv
->
v
 = &uv->
u
.
vÆue
;

102 
	`gch
(
o
)->
√xt
 = 
g
->
Ælgc
;

103 
g
->
Ælgc
 = 
o
;

104 
	`luaC_checkupvÆcﬁ‹
(
g
, 
uv
);

107 
	}
}

110 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

111 
PrŸo
 *
f
 = &
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (PrŸo), 
NULL
, 0)->
p
;

112 
f
->
k
 = 
NULL
;

113 
f
->
sizek
 = 0;

114 
f
->
p
 = 
NULL
;

115 
f
->
sizï
 = 0;

116 
f
->
code
 = 
NULL
;

117 
f
->
ˇche
 = 
NULL
;

118 
f
->
sizecode
 = 0;

119 
f
->
löeöfo
 = 
NULL
;

120 
f
->
sizñöeöfo
 = 0;

121 
f
->
upvÆues
 = 
NULL
;

122 
f
->
sizeupvÆues
 = 0;

123 
f
->
num∑øms
 = 0;

124 
f
->
is_v¨¨g
 = 0;

125 
f
->
max°acksize
 = 0;

126 
f
->
locv¨s
 = 
NULL
;

127 
f
->
sizñocv¨s
 = 0;

128 
f
->
löedeföed
 = 0;

129 
f
->
œ°löedeföed
 = 0;

130 
f
->
sour˚
 = 
NULL
;

131  
f
;

132 
	}
}

135 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

136 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

137 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

138 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

139 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

140 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

141 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

142 
	`luaM_‰ì
(
L
, 
f
);

143 
	}
}

150 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

151 
i
;

152 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

153 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

154 
loˇl_numbî
--;

155 i‡(
loˇl_numbî
 == 0)

156  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

159  
NULL
;

160 
	}
}

	@lgc.c

9 
	#lgc_c


	)

10 
	#LUA_CORE


	)

11 
	~<«utûus/libccom∑t.h
>

12 
	~"lua/lua.h
"

14 
	~"lua/ldebug.h
"

15 
	~"lua/ldo.h
"

16 
	~"lua/lfunc.h
"

17 
	~"lua/lgc.h
"

18 
	~"lua/lmem.h
"

19 
	~"lua/lobje˘.h
"

20 
	~"lua/l°©e.h
"

21 
	~"lua/l°rög.h
"

22 
	~"lua/…abÀ.h
"

23 
	~"lua/…m.h
"

31 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

34 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

37 
	#GCFINALIZENUM
 4

	)

44 
	#STEPMULADJ
 200

	)

51 
	#PAUSEADJ
 100

	)

58 
	#maskcﬁ‹s
 (~(
	`bô2mask
(
BLACKBIT
, 
OLDBIT
Ë| 
WHITEBITS
))

	)

59 
	#makewhôe
(
g
,
x
) \

60 (
	`gch
(
x
)->
m¨ked
 = 
	`ˇ°_byã
((gch(x)->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

62 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(
	`gch
(x)->
m¨ked
, 
WHITEBITS
)

	)

63 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(
	`gch
(x)->
m¨ked
, 
BLACKBIT
)

	)

66 
	#isföÆized
(
x
Ë
	`ã°bô
(
	`gch
(x)->
m¨ked
, 
FINALIZEDBIT
)

	)

68 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

71 
	#checkc⁄si°ícy
(
obj
) \

72 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

75 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

76 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

78 
	#m¨kobje˘
(
g
,
t
Ë{ i‡(—Ë&& 
	`iswhôe
(
	`obj2gco
(t))) \

79 
	`ªÆlym¨kobje˘
(
g
, 
	`obj2gco
(
t
)); }

	)

81 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

94 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

100 
	#lökèbÀ
(
h
,
p
Ë((h)->
g˛i°
 = *’), *’Ë
	`obj2gco
(h))

	)

107 
	$ªmovì¡ry
 (
Node
 *
n
) {

108 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

109 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

110 
	`£tdódvÆue
(
	`gkey
(
n
));

111 
	}
}

121 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

122 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

123 i‡(
	`âis°rög
(
o
)) {

124 
	`m¨kobje˘
(
g
, 
	`øwtsvÆue
(
o
));

127  
	`iswhôe
(
	`gcvÆue
(
o
));

128 
	}
}

135 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

136 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

137 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

138 
	`lua_as£π
(
g
->
gc°©e
 !
GCS∑u£
);

139 
	`lua_as£π
(
	`gch
(
o
)->
â
 !
LUA_TTABLE
);

140 i‡(
	`kìpöv¨ü¡out
(
g
))

141 
	`ªÆlym¨kobje˘
(
g
, 
v
);

143 
	`lua_as£π
(
	`isswìµha£
(
g
));

144 
	`makewhôe
(
g
, 
o
);

146 
	}
}

155 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

156 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

157 
	`lua_as£π
(
	`isbœck
(
o
Ë&& !
	`isdód
(
g
, oË&& 
	`gch
(o)->
â
 =
LUA_TTABLE
);

158 
	`bœck2gøy
(
o
);

159 
	`gco2t
(
o
)->
g˛i°
 = 
g
->
gøyagaö
;

160 
g
->
gøyagaö
 = 
o
;

161 
	}
}

172 
LUAI_FUNC
 
	$luaC_b¨rõΩrŸo_
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
Closuª
 *
c
) {

173 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

174 
	`lua_as£π
(
	`isbœck
(
	`obj2gco
(
p
)));

175 i‡(
p
->
ˇche
 =
NULL
) {

176 
	`luaC_objb¨rõr
(
L
, 
p
, 
c
);

179 
	`bœck2gøy
(
	`obj2gco
(
p
));

180 
p
->
g˛i°
 = 
g
->
gøyagaö
;

181 
g
->
gøyagaö
 = 
	`obj2gco
(
p
);

183 
	}
}

190 
	$luaC_checkupvÆcﬁ‹
 (
globÆ_Sèã
 *
g
, 
UpVÆ
 *
uv
) {

191 
GCObje˘
 *
o
 = 
	`obj2gco
(
uv
);

192 
	`lua_as£π
(!
	`isbœck
(
o
));

193 i‡(
	`isgøy
(
o
)) {

194 i‡(
	`kìpöv¨ü¡
(
g
)) {

195 
	`ª£tﬁdbô
(
o
);

196 
	`gøy2bœck
(
o
);

197 
	`m¨kvÆue
(
g
, 
uv
->
v
);

200 
	`lua_as£π
(
	`isswìµha£
(
g
));

201 
	`makewhôe
(
g
, 
o
);

204 
	}
}

212 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
, 
GCObje˘
 **
li°
,

213 
off£t
) {

214 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

215 *
øw
 = 
	`ˇ°
(*, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

216 
GCObje˘
 *
o
 = 
	`obj2gco
(
øw
 + 
off£t
);

217 i‡(
li°
 =
NULL
)

218 
li°
 = &
g
->
Ælgc
;

219 
	`gch
(
o
)->
m¨ked
 = 
	`luaC_whôe
(
g
);

220 
	`gch
(
o
)->
â
 =Åt;

221 
	`gch
(
o
)->
√xt
 = *
li°
;

222 *
li°
 = 
o
;

223  
o
;

224 
	}
}

243 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

244 
lu_mem
 
size
;

245 
	`whôe2gøy
(
o
);

246 
	`gch
(
o
)->
â
) {

247 
LUA_TSHRSTR
:

248 
LUA_TLNGSTR
: {

249 
size
 = 
	`size°rög
(
	`gco2ts
(
o
));

252 
LUA_TUSERDATA
: {

253 
TabÀ
 *
mt
 = 
	`gco2u
(
o
)->
më©abÀ
;

254 
	`m¨kobje˘
(
g
, 
mt
);

255 
	`m¨kobje˘
(
g
, 
	`gco2u
(
o
)->
ív
);

256 
size
 = 
	`sizeud©a
(
	`gco2u
(
o
));

259 
LUA_TUPVAL
: {

260 
UpVÆ
 *
uv
 = 
	`gco2uv
(
o
);

261 
	`m¨kvÆue
(
g
, 
uv
->
v
);

262 i‡(
uv
->
v
 !&uv->
u
.
vÆue
)

264 
size
 = (
UpVÆ
);

267 
LUA_TLCL
: {

268 
	`gco2l˛
(
o
)->
g˛i°
 = 
g
->
gøy
;

269 
g
->
gøy
 = 
o
;

272 
LUA_TCCL
: {

273 
	`gco2c˛
(
o
)->
g˛i°
 = 
g
->
gøy
;

274 
g
->
gøy
 = 
o
;

277 
LUA_TTABLE
: {

278 
	`lökèbÀ
(
	`gco2t
(
o
), &
g
->
gøy
);

281 
LUA_TTHREAD
: {

282 
	`gco2th
(
o
)->
g˛i°
 = 
g
->
gøy
;

283 
g
->
gøy
 = 
o
;

286 
LUA_TPROTO
: {

287 
	`gco2p
(
o
)->
g˛i°
 = 
g
->
gøy
;

288 
g
->
gøy
 = 
o
;

291 : 
	`lua_as£π
(0); ;

293 
	`gøy2bœck
(
o
);

294 
g
->
GCmemåav
 +
size
;

295 
	}
}

301 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

302 
i
;

303 
i
=0; i < 
LUA_NUMTAGS
; i++)

304 
	`m¨kobje˘
(
g
, g->
mt
[
i
]);

305 
	}
}

311 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

312 
GCObje˘
 *
o
;

313 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = 
	`gch
(o)->
√xt
) {

314 
	`makewhôe
(
g
, 
o
);

315 
	`ªÆlym¨kobje˘
(
g
, 
o
);

317 
	}
}

324 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

325 
UpVÆ
 *
uv
;

326 
uv
 = 
g
->
uvhód
.
u
.
l
.
√xt
; uv != &g->uvhead; uv = uv->u.l.next) {

327 i‡(
	`isgøy
(
	`obj2gco
(
uv
)))

328 
	`m¨kvÆue
(
g
, 
uv
->
v
);

330 
	}
}

337 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

338 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

339 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

340 
	`m¨kobje˘
(
g
, g->
maöthªad
);

341 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

342 
	`m¨kmt
(
g
);

343 
	`m¨kbeög‚z
(
g
);

344 
	}
}

355 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

356 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

359 
has˛órs
 = (
h
->
sizóºay
 > 0);

360 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

361 
	`checkdódkey
(
n
);

362 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

363 
	`ªmovì¡ry
(
n
);

365 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

366 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

367 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

368 
has˛órs
 = 1;

371 i‡(
has˛órs
)

372 
	`lökèbÀ
(
h
, &
g
->
wók
);

374 
	`lökèbÀ
(
h
, &
g
->
gøyagaö
);

375 
	}
}

378 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

379 
m¨ked
 = 0;

380 
has˛órs
 = 0;

381 
¥›
 = 0;

382 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

383 
i
;

385 
i
 = 0; i < 
h
->
sizóºay
; i++) {

386 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

387 
m¨ked
 = 1;

388 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

392 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

393 
	`checkdódkey
(
n
);

394 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

395 
	`ªmovì¡ry
(
n
);

396 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

397 
has˛órs
 = 1;

398 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

399 
¥›
 = 1;

401 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

402 
m¨ked
 = 1;

403 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

406 i‡(
g
->
gc°©e
 !
GCS©omic
 || 
¥›
)

407 
	`lökèbÀ
(
h
, &
g
->
ïhemî⁄
);

408 i‡(
has˛órs
)

409 
	`lökèbÀ
(
h
, &
g
->
Ælwók
);

411 
	`lökèbÀ
(
h
, &
g
->
gøyagaö
);

412  
m¨ked
;

413 
	}
}

416 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

417 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

418 
i
;

419 
i
 = 0; i < 
h
->
sizóºay
; i++)

420 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

421 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

422 
	`checkdódkey
(
n
);

423 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

424 
	`ªmovì¡ry
(
n
);

426 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

427 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

428 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

431 
	}
}

434 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

435 c⁄° *
wókkey
, *
wókvÆue
;

436 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

437 
	`m¨kobje˘
(
g
, 
h
->
më©abÀ
);

438 i‡(
mode
 && 
	`âis°rög
(mode) &&

439 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

440 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

441 (
wókkey
 || 
wókvÆue
))) {

442 
	`bœck2gøy
(
	`obj2gco
(
h
));

443 i‡(!
wókkey
)

444 
	`åavî£wókvÆue
(
g
, 
h
);

445 i‡(!
wókvÆue
)

446 
	`åavî£ïhemî⁄
(
g
, 
h
);

448 
	`lökèbÀ
(
h
, &
g
->
Ælwók
);

451 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

452  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

453 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`sizíode
(
h
));

454 
	}
}

457 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

458 
i
;

459 i‡(
f
->
ˇche
 && 
	`iswhôe
(
	`obj2gco
(f->cache)))

460 
f
->
ˇche
 = 
NULL
;

461 
	`m¨kobje˘
(
g
, 
f
->
sour˚
);

462 
i
 = 0; i < 
f
->
sizek
; i++)

463 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

464 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

465 
	`m¨kobje˘
(
g
, 
f
->
upvÆues
[
i
].
«me
);

466 
i
 = 0; i < 
f
->
sizï
; i++)

467 
	`m¨kobje˘
(
g
, 
f
->
p
[
i
]);

468 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

469 
	`m¨kobje˘
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

470  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

471 (
PrŸo
 *Ë* 
f
->
sizï
 +

472 (
TVÆue
Ë* 
f
->
sizek
 +

473 (Ë* 
f
->
sizñöeöfo
 +

474 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

475 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

476 
	}
}

479 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

480 
i
;

481 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

482 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

483  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

484 
	}
}

486 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

487 
i
;

488 
	`m¨kobje˘
(
g
, 
˛
->
p
);

489 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

490 
	`m¨kobje˘
(
g
, 
˛
->
upvÆs
[
i
]);

491  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

492 
	}
}

495 
lu_mem
 
	$åavî£°ack
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

496 
n
 = 0;

497 
StkId
 
o
 = 
th
->
°ack
;

498 i‡(
o
 =
NULL
)

500 ; 
o
 < 
th
->
t›
; o++)

501 
	`m¨kvÆue
(
g
, 
o
);

502 i‡(
g
->
gc°©e
 =
GCS©omic
) {

503 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

504 ; 
o
 < 
lim
; o++)

505 
	`£äûvÆue
(
o
);

508 
CÆlInfo
 *
ci
;

509 
ci
 = &
th
->
ba£_ci
; cò!th->ci; còci->
√xt
)

510 
n
++;

512  (
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
 +

513 (
CÆlInfo
Ë* 
n
;

514 
	}
}

521 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

522 
lu_mem
 
size
;

523 
GCObje˘
 *
o
 = 
g
->
gøy
;

524 
	`lua_as£π
(
	`isgøy
(
o
));

525 
	`gøy2bœck
(
o
);

526 
	`gch
(
o
)->
â
) {

527 
LUA_TTABLE
: {

528 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

529 
g
->
gøy
 = 
h
->
g˛i°
;

530 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

533 
LUA_TLCL
: {

534 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

535 
g
->
gøy
 = 
˛
->
g˛i°
;

536 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

539 
LUA_TCCL
: {

540 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

541 
g
->
gøy
 = 
˛
->
g˛i°
;

542 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

545 
LUA_TTHREAD
: {

546 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

547 
g
->
gøy
 = 
th
->
g˛i°
;

548 
th
->
g˛i°
 = 
g
->
gøyagaö
;

549 
g
->
gøyagaö
 = 
o
;

550 
	`bœck2gøy
(
o
);

551 
size
 = 
	`åavî£°ack
(
g
, 
th
);

554 
LUA_TPROTO
: {

555 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

556 
g
->
gøy
 = 
p
->
g˛i°
;

557 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

560 : 
	`lua_as£π
(0); ;

562 
g
->
GCmemåav
 +
size
;

563 
	}
}

566 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

567 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

568 
	}
}

571 
	$¥›ag©ñi°
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
) {

572 
	`lua_as£π
(
g
->
gøy
 =
NULL
);

573 
g
->
gøy
 = 
l
;

574 
	`¥›ag©óŒ
(
g
);

575 
	}
}

582 
	$ªåavî£gøys
 (
globÆ_Sèã
 *
g
) {

583 
GCObje˘
 *
wók
 = 
g
->weak;

584 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

585 
GCObje˘
 *
ïhemî⁄
 = 
g
->ephemeron;

586 
g
->
wók
 = g->
gøyagaö
 = g->
ïhemî⁄
 = 
NULL
;

587 
	`¥›ag©óŒ
(
g
);

588 
	`¥›ag©ñi°
(
g
, 
gøyagaö
);

589 
	`¥›ag©ñi°
(
g
, 
wók
);

590 
	`¥›ag©ñi°
(
g
, 
ïhemî⁄
);

591 
	}
}

594 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

595 
ch™ged
;

597 
GCObje˘
 *
w
;

598 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

599 
g
->
ïhemî⁄
 = 
NULL
;

600 
ch™ged
 = 0;

601 (
w
 = 
√xt
Ë!
NULL
) {

602 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

603 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

604 
	`¥›ag©óŒ
(
g
);

605 
ch™ged
 = 1;

608 } 
ch™ged
);

609 
	}
}

625 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

626 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

627 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

628 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

629 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

630 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

631 
	`£äûvÆue
(
	`gvÆ
(
n
));

632 
	`ªmovì¡ry
(
n
);

636 
	}
}

643 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

644 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

645 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

646 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

647 
i
;

648 
i
 = 0; i < 
h
->
sizóºay
; i++) {

649 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

650 i‡(
	`is˛óªd
(
g
, 
o
))

651 
	`£äûvÆue
(
o
);

653 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

654 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

655 
	`£äûvÆue
(
	`gvÆ
(
n
));

656 
	`ªmovì¡ry
(
n
);

660 
	}
}

663 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

664 
	`gch
(
o
)->
â
) {

665 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

666 
LUA_TLCL
: {

667 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeL˛osuª
(
	`gco2l˛
(o)->
nupvÆues
));

670 
LUA_TCCL
: {

671 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

674 
LUA_TUPVAL
: 
	`luaF_‰ìupvÆ
(
L
, 
	`gco2uv
(
o
)); ;

675 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

676 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

677 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

678 
LUA_TSHRSTR
:

679 
	`G
(
L
)->
°π
.
nu£
--;

681 
LUA_TLNGSTR
: {

682 
	`luaM_‰ìmem
(
L
, 
o
, 
	`size°rög
(
	`gco2ts
(o)));

685 : 
	`lua_as£π
(0);

687 
	}
}

690 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

691 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

698 
	$swì±hªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

699 i‡(
L1
->
°ack
 =
NULL
) ;

700 
	`swìpwhﬁñi°
(
L
, &
L1
->
›íupvÆ
);

701 
	`luaE_‰ìCI
(
L1
);

703 i‡(
	`G
(
L
)->
gcköd
 !
KGC_EMERGENCY
)

704 
	`luaD_shrök°ack
(
L1
);

705 
	}
}

719 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

720 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

721 
ow
 = 
	`Ÿhîwhôe
(
g
);

722 
to˛ór
, 
to£t
;

723 
to°›
;

724 i‡(
	`isgíî©i⁄Æ
(
g
)) {

725 
to˛ór
 = ~0;

726 
to£t
 = 
	`bômask
(
OLDBIT
);

727 
to°›
 = 
	`bômask
(
OLDBIT
);

730 
to˛ór
 = 
maskcﬁ‹s
;

731 
to£t
 = 
	`luaC_whôe
(
g
);

732 
to°›
 = 0;

734 *
p
 !
NULL
 && 
cou¡
-- > 0) {

735 
GCObje˘
 *
cuº
 = *
p
;

736 
m¨ked
 = 
	`gch
(
cuº
)->marked;

737 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

738 *
p
 = 
	`gch
(
cuº
)->
√xt
;

739 
	`‰ìobj
(
L
, 
cuº
);

742 i‡(
	`ã°bôs
(
m¨ked
, 
to°›
))

743  
NULL
;

744 i‡(
	`gch
(
cuº
)->
â
 =
LUA_TTHREAD
)

745 
	`swì±hªad
(
L
, 
	`gco2th
(
cuº
));

747 
	`gch
(
cuº
)->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
to˛ór
Ë| 
to£t
);

748 
p
 = &
	`gch
(
cuº
)->
√xt
;

751  (*
p
 =
NULL
) ? NULL :Ö;

752 
	}
}

758 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, *
n
) {

759 
GCObje˘
 ** 
ﬁd
 = 
p
;

760 
i
 = 0;

762 
i
++;

763 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

764 } 
p
 =
ﬁd
);

765 i‡(
n
Ë*¿+
i
;

766  
p
;

767 
	}
}

778 
	$checkSizes
 (
lua_Sèã
 *
L
) {

779 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

780 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

781 
hs
 = 
g
->
°π
.
size
 / 2;

782 i‡(
g
->
°π
.
nu£
 < 
	`ˇ°
(
lu_öt32
, 
hs
))

783 
	`luaS_ªsize
(
L
, 
hs
);

784 
	`luaZ_‰ìbuf„r
(
L
, &
g
->
buff
);

786 
	}
}

789 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

790 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

791 
	`lua_as£π
(
	`isföÆized
(
o
));

792 
g
->
tobe‚z
 = 
	`gch
(
o
)->
√xt
;

793 
	`gch
(
o
)->
√xt
 = 
g
->
Ælgc
;

794 
g
->
Ælgc
 = 
o
;

795 
	`ª£tbô
(
	`gch
(
o
)->
m¨ked
, 
SEPARATED
);

796 
	`lua_as£π
(!
	`isﬁd
(
o
));

797 i‡(!
	`kìpöv¨ü¡out
(
g
))

798 
	`makewhôe
(
g
, 
o
);

799  
o
;

800 
	}
}

803 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

804 
	`UNUSED
(
ud
);

805 
	`luaD_ˇŒ
(
L
, L->
t›
 - 2, 0, 0);

806 
	}
}

809 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

810 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

811 c⁄° 
TVÆue
 *
tm
;

812 
TVÆue
 
v
;

813 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

814 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

815 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

816 
°©us
;

817 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

818 
ru¬ög
 = 
g
->
g¸u¬ög
;

819 
L
->
Ælowhook
 = 0;

820 
g
->
g¸u¬ög
 = 0;

821 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

822 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

823 
L
->
t›
 += 2;

824 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

825 
L
->
Ælowhook
 = 
ﬁdah
;

826 
g
->
g¸u¬ög
 = 
ru¬ög
;

827 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

828 i‡(
°©us
 =
LUA_ERRRUN
) {

829 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

830 ? 
	`svÆue
(
L
->
t›
 - 1)

832 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

833 
°©us
 = 
LUA_ERRGCMM
;

835 
	`luaD_throw
(
L
, 
°©us
);

838 
	}
}

845 
	$£∑øãtobe‚z
 (
lua_Sèã
 *
L
, 
Æl
) {

846 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

847 
GCObje˘
 **
p
 = &
g
->
föobj
;

848 
GCObje˘
 *
cuº
;

849 
GCObje˘
 **
œ°√xt
 = &
g
->
tobe‚z
;

851 *
œ°√xt
 !
NULL
)

852 
œ°√xt
 = &
	`gch
(*œ°√xt)->
√xt
;

853 (
cuº
 = *
p
Ë!
NULL
) {

854 
	`lua_as£π
(!
	`isföÆized
(
cuº
));

855 
	`lua_as£π
(
	`ã°bô
(
	`gch
(
cuº
)->
m¨ked
, 
SEPARATED
));

856 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

857 
p
 = &
	`gch
(
cuº
)->
√xt
;

859 
	`l_£tbô
(
	`gch
(
cuº
)->
m¨ked
, 
FINALIZEDBIT
);

860 *
p
 = 
	`gch
(
cuº
)->
√xt
;

861 
	`gch
(
cuº
)->
√xt
 = *
œ°√xt
;

862 *
œ°√xt
 = 
cuº
;

863 
œ°√xt
 = &
	`gch
(
cuº
)->
√xt
;

866 
	}
}

873 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

874 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

875 i‡(
	`ã°bô
(
	`gch
(
o
)->
m¨ked
, 
SEPARATED
) ||

876 
	`isföÆized
(
o
) ||

877 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

880 
GCObje˘
 **
p
;

881 
GChódî
 *
ho
 = 
	`gch
(
o
);

882 i‡(
g
->
swìpgc
 =&
ho
->
√xt
) {

883 
	`lua_as£π
(
	`isswìµha£
(
g
));

884 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->swìpgc, 
NULL
);

887 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &
	`gch
(*p)->
√xt
) { }

888 *
p
 = 
ho
->
√xt
;

889 
ho
->
√xt
 = 
g
->
föobj
;

890 
g
->
föobj
 = 
o
;

891 
	`l_£tbô
(
ho
->
m¨ked
, 
SEPARATED
);

892 i‡(!
	`kìpöv¨ü¡out
(
g
))

893 
	`makewhôe
(
g
, 
o
);

895 
	`ª£tﬁdbô
(
o
);

897 
	}
}

913 
	$£çau£
 (
globÆ_Sèã
 *
g
, 
l_mem
 
e°im©e
) {

914 
l_mem
 
debt
, 
thªshﬁd
;

915 
e°im©e
 =É°im©ê/ 
PAUSEADJ
;

916 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

917 ? 
e°im©e
 * 
g
->
g˝au£


918 : 
MAX_LMEM
;

919 
debt
 = -
	`ˇ°
(
l_mem
, 
thªshﬁd
 - 
	`gëtŸÆbyãs
(
g
));

920 
	`luaE_£tdebt
(
g
, 
debt
);

921 
	}
}

924 
	#swìµha£s
 \

925 (
	`bômask
(
GCSswìp°rög
Ë| bômask(
GCSswìpud©a
Ë| bômask(
GCSswìp
))

	)

936 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

937 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

938 
n
 = 0;

939 
g
->
gc°©e
 = 
GCSswìp°rög
;

940 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
 && g->
swìpfö
 == NULL);

942 
g
->
swìp°rgc
 = 0;

943 
g
->
swìpfö
 = 
	`swì±ﬁive
(
L
, &g->
föobj
, &
n
);

944 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, &g->
Ælgc
, &
n
);

945  
n
;

946 
	}
}

952 
	$luaC_ch™gemode
 (
lua_Sèã
 *
L
, 
mode
) {

953 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

954 i‡(
mode
 =
g
->
gcköd
) ;

955 i‡(
mode
 =
KGC_GEN
) {

957 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS¥›ag©e
));

958 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g);

959 
g
->
gcköd
 = 
KGC_GEN
;

964 
g
->
gcköd
 = 
KGC_NORMAL
;

965 
	`íãrswìp
(
L
);

966 
	`luaC_ru¡û°©e
(
L
, ~
swìµha£s
);

968 
	}
}

974 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

975 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

976 
g
->
tobe‚z
) {

977 
	`ª£tﬁdbô
(
g
->
tobe‚z
);

978 
	`GCTM
(
L
, 
¥›ag©ìº‹s
);

980 
	}
}

983 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

984 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

985 
i
;

986 
	`£∑øãtobe‚z
(
L
, 1);

987 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

988 
	`ˇŒÆÕídögföÆizîs
(
L
, 0);

989 
g
->
cuºítwhôe
 = 
WHITEBITS
;

990 
g
->
gcköd
 = 
KGC_NORMAL
;

991 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

992 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

993 
i
 = 0; i < 
g
->
°π
.
size
; i++)

994 
	`swìpwhﬁñi°
(
L
, &
g
->
°π
.
hash
[
i
]);

995 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

996 
	}
}

999 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

1000 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1001 
l_mem
 
w‹k
 = -
	`ˇ°
÷_mem, 
g
->
GCmemåav
);

1002 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

1003 
	`lua_as£π
(!
	`iswhôe
(
	`obj2gco
(
g
->
maöthªad
)));

1004 
	`m¨kobje˘
(
g
, 
L
);

1006 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

1007 
	`m¨kmt
(
g
);

1009 
	`ªm¨kupvÆs
(
g
);

1010 
	`¥›ag©óŒ
(
g
);

1011 
w‹k
 +
g
->
GCmemåav
;

1013 
	`ªåavî£gøys
(
g
);

1014 
w‹k
 -
g
->
GCmemåav
;

1015 
	`c⁄vîgìphemî⁄s
(
g
);

1018 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

1019 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

1020 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

1021 
w‹k
 +
g
->
GCmemåav
;

1022 
	`£∑øãtobe‚z
(
L
, 0);

1023 
	`m¨kbeög‚z
(
g
);

1024 
	`¥›ag©óŒ
(
g
);

1025 
w‹k
 -
g
->
GCmemåav
;

1026 
	`c⁄vîgìphemî⁄s
(
g
);

1029 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1030 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1032 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1033 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1034 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1035 
w‹k
 +
g
->
GCmemåav
;

1036  
w‹k
;

1037 
	}
}

1040 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1041 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1042 
g
->
gc°©e
) {

1043 
GCS∑u£
: {

1045 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1046 
	`lua_as£π
(!
	`isgíî©i⁄Æ
(
g
));

1047 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1048 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1049  
g
->
GCmemåav
;

1051 
GCS¥›ag©e
: {

1052 i‡(
g
->
gøy
) {

1053 
lu_mem
 
ﬁdåav
 = 
g
->
GCmemåav
;

1054 
	`¥›ag©em¨k
(
g
);

1055  
g
->
GCmemåav
 - 
ﬁdåav
;

1058 
lu_mem
 
w‹k
;

1059 
sw
;

1060 
g
->
gc°©e
 = 
GCS©omic
;

1061 
g
->
GCe°im©e
 = g->
GCmemåav
; ;

1062 
w‹k
 = 
	`©omic
(
L
);

1063 
g
->
GCe°im©e
 +
w‹k
;

1064 
sw
 = 
	`íãrswìp
(
L
);

1065  
w‹k
 + 
sw
 * 
GCSWEEPCOST
;

1068 
GCSswìp°rög
: {

1069 
i
;

1070 
i
 = 0; i < 
GCSWEEPMAX
 && 
g
->
swìp°rgc
 + i < g->
°π
.
size
; i++)

1071 
	`swìpwhﬁñi°
(
L
, &
g
->
°π
.
hash
[g->
swìp°rgc
 + 
i
]);

1072 
g
->
swìp°rgc
 +
i
;

1073 i‡(
g
->
swìp°rgc
 >g->
°π
.
size
)

1074 
g
->
gc°©e
 = 
GCSswìpud©a
;

1075  
i
 * 
GCSWEEPCOST
;

1077 
GCSswìpud©a
: {

1078 i‡(
g
->
swìpfö
) {

1079 
g
->
swìpfö
 = 
	`swì∂i°
(
L
, g->swìpfö, 
GCSWEEPMAX
);

1080  
GCSWEEPMAX
*
GCSWEEPCOST
;

1083 
g
->
gc°©e
 = 
GCSswìp
;

1087 
GCSswìp
: {

1088 i‡(
g
->
swìpgc
) {

1089 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1090  
GCSWEEPMAX
*
GCSWEEPCOST
;

1094 
GCObje˘
 *
mt
 = 
	`obj2gco
(
g
->
maöthªad
);

1095 
	`swì∂i°
(
L
, &
mt
, 1);

1096 
	`checkSizes
(
L
);

1097 
g
->
gc°©e
 = 
GCS∑u£
;

1098  
GCSWEEPCOST
;

1101 : 
	`lua_as£π
(0);  0;

1103 
	}
}

1110 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1111 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1112 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1113 
	`sögÀ°ï
(
L
);

1114 
	}
}

1117 
	$gíî©i⁄ÆcﬁÀ˘i⁄
 (
lua_Sèã
 *
L
) {

1118 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1119 
	`lua_as£π
(
g
->
gc°©e
 =
GCS¥›ag©e
);

1120 i‡(
g
->
GCe°im©e
 == 0) {

1121 
	`luaC_fuŒgc
(
L
, 0);

1122 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g);

1125 
lu_mem
 
e°im©e
 = 
g
->
GCe°im©e
;

1126 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1127 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1128 i‡(
	`gëtŸÆbyãs
(
g
Ë> (
e°im©e
 / 100Ë* g->
gcmaj‹öc
)

1129 
g
->
GCe°im©e
 = 0;

1131 
g
->
GCe°im©e
 = 
e°im©e
;

1134 
	`£çau£
(
g
, 
	`gëtŸÆbyãs
(g));

1135 
	`lua_as£π
(
g
->
gc°©e
 =
GCS¥›ag©e
);

1136 
	}
}

1139 
	$öc°ï
 (
lua_Sèã
 *
L
) {

1140 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1141 
l_mem
 
debt
 = 
g
->
GCdebt
;

1142 
°ïmul
 = 
g
->
gc°ïmul
;

1143 i‡(
°ïmul
 < 40) stepmul = 40;

1145 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1146 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1148 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1149 
debt
 -
w‹k
;

1150 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1151 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1152 
	`£çau£
(
g
, g->
GCe°im©e
);

1154 
debt
 = (debà/ 
°ïmul
Ë* 
STEPMULADJ
;

1155 
	`luaE_£tdebt
(
g
, 
debt
);

1157 
	}
}

1163 
	$luaC_f‹˚°ï
 (
lua_Sèã
 *
L
) {

1164 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1165 
i
;

1166 i‡(
	`isgíî©i⁄Æ
(
g
)Ë
	`gíî©i⁄ÆcﬁÀ˘i⁄
(
L
);

1167 
	`öc°ï
(
L
);

1169 
i
 = 0; 
g
->
tobe‚z
 && (ò< 
GCFINALIZENUM
 || g->
gc°©e
 =
GCS∑u£
); i++)

1170 
	`GCTM
(
L
, 1);

1171 
	}
}

1177 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1178 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1179 i‡(
g
->
g¸u¬ög
Ë
	`luaC_f‹˚°ï
(
L
);

1180 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1181 
	}
}

1189 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1190 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1191 
‹igköd
 = 
g
->
gcköd
;

1192 
	`lua_as£π
(
‹igköd
 !
KGC_EMERGENCY
);

1193 i‡(
i£mîgícy
)

1194 
g
->
gcköd
 = 
KGC_EMERGENCY
;

1196 
g
->
gcköd
 = 
KGC_NORMAL
;

1197 
	`ˇŒÆÕídögföÆizîs
(
L
, 1);

1199 i‡(
	`kìpöv¨ü¡
(
g
)) {

1202 
	`íãrswìp
(
L
);

1205 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1206 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1207 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1208 i‡(
‹igköd
 =
KGC_GEN
) {

1210 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS¥›ag©e
));

1212 
g
->
gcköd
 = 
‹igköd
;

1213 
	`£çau£
(
g
, 
	`gëtŸÆbyãs
(g));

1214 i‡(!
i£mîgícy
)

1215 
	`ˇŒÆÕídögföÆizîs
(
L
, 1);

1216 
	}
}

	@linit.c

16 
	#löô_c


	)

17 
	#LUA_LIB


	)

18 
	~<«utûus/libccom∑t.h
>

19 
	~"lua/lua.h
"

21 
	~"lua/luÆib.h
"

22 
	~"lua/œuxlib.h
"

29 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

30 {"_G", 
lua›í_ba£
},

31 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

32 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

33 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

34 {
LUA_IOLIBNAME
, 
lua›í_io
},

35 {
LUA_OSLIBNAME
, 
lua›í_os
},

36 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

37 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

38 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

39 {
LUA_DBLIBNAME
, 
lua›í_debug
},

40 {
NULL
, NULL}

47 c⁄° 
luaL_Reg
 
	g¥ñﬂdedlibs
[] = {

48 {
NULL
, NULL}

52 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

53 c⁄° 
luaL_Reg
 *
lib
;

55 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

56 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

57 
	`lua_p›
(
L
, 1);

60 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

61 
lib
 = 
¥ñﬂdedlibs
;Üib->
func
;Üib++) {

62 
	`lua_pushcfun˘i⁄
(
L
, 
lib
->
func
);

63 
	`lua_£tfõld
(
L
, -2, 
lib
->
«me
);

65 
	`lua_p›
(
L
, 1);

66 
	}
}

	@liolib.c

12 #i‡!
deföed
(
_FILE_OFFSET_BITS
)

13 
	#_LARGEFILE_SOURCE
 1

	)

14 
	#_FILE_OFFSET_BITS
 64

	)

25 
	#liﬁib_c


	)

26 
	#LUA_LIB


	)

27 
	#LIB_LUA


	)

28 
	~<«utûus/libccom∑t.h
>

29 
	~"lua/lua.h
"

31 
	~"lua/œuxlib.h
"

32 
	~"lua/luÆib.h
"

35 #i‡!
deföed
(
lua_checkmode
)

42 
	#lua_checkmode
(
mode
) \

43 (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 && \

44 (*
mode
 != '+' || ++mode) && \

45 (*
mode
 != 'b' || ++mode) && \

46 (*
mode
 ='\0'))

	)

57 #i‡!
deföed
(
lua_p›í
)

59 #i‡
deföed
(
LUA_USE_POPEN
)

61 
	#lua_p›í
(
L
,
c
,
m
Ë(()L, 
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

62 
	#lua_p˛o£
(
L
,
fûe
Ë(()L, 
	`p˛o£
(fûe))

	)

64 #ñi‡
deföed
(
LUA_WIN
)

66 
	#lua_p›í
(
L
,
c
,
m
Ë(()L, 
	`_p›í
(c,m))

	)

67 
	#lua_p˛o£
(
L
,
fûe
Ë(()L, 
	`_p˛o£
(fûe))

	)

72 
	#lua_p›í
(
L
,
c
,
m
) (()(()c, m), \

73 
	`luaL_îr‹
(
L
, 
	`LUA_QL
("p›í"Ë"ÇŸ suµ‹ãd"), (
FILE
*)0)

	)

74 
	#lua_p˛o£
(
L
,
fûe
Ë(()(()L, fûe), -1)

	)

90 #i‡!
deföed
(
lua_f£ek
Ë&& !deföed(
LUA_ANSI
)

92 #i‡
deföed
(
LUA_USE_POSIX
)

94 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

95 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

96 
	#l_£eknum
 
off_t


	)

98 #ñi‡
deföed
(
LUA_WIN
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

99 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

102 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

103 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

104 
	#l_£eknum
 
__öt64


	)

111 #i‡!
deföed
(
l_f£ek
)

112 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

113 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

114 
	#l_£eknum
 

	)

120 
	#IO_PREFIX
 "_IO_"

	)

121 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

122 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

125 
luaL_Såóm
 
	tLSåóm
;

128 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

130 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

133 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

134 
LSåóm
 *
p
;

135 
	`luaL_check™y
(
L
, 1);

136 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

137 i‡(
p
 =
NULL
)

138 
	`lua_pushnû
(
L
);

139 i‡(
	`is˛o£d
(
p
))

140 
	`lua_pushlôîÆ
(
L
, "closed file");

142 
	`lua_pushlôîÆ
(
L
, "file");

144 
	}
}

147 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

148 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

149 i‡(
	`is˛o£d
(
p
))

150 
	`lua_pushlôîÆ
(
L
, "file (closed)");

152 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

154 
	}
}

157 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

158 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

159 i‡(
	`is˛o£d
(
p
))

160 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

161 
	`lua_as£π
(
p
->
f
);

162  
p
->
f
;

163 
	}
}

171 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

172 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

173 
p
->
˛o£f
 = 
NULL
;

174 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

175  
p
;

176 
	}
}

179 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

180 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

181 
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

182 
p
->
˛o£f
 = 
NULL
;

183  (*
cf
)(
L
);

184 
	}
}

187 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

188 i‡(
	`lua_i¢⁄e
(
L
, 1))

189 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

190 
	`tofûe
(
L
);

191  
	`aux_˛o£
(
L
);

192 
	}
}

195 
	$f_gc
 (
lua_Sèã
 *
L
) {

196 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

197 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

198 
	`aux_˛o£
(
L
);

200 
	}
}

206 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

207 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

208 
ªs
 = 
	`f˛o£
(
p
->
f
);

209  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

210 
	}
}

213 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

214 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

215 
p
->
f
 = 
NULL
;

216 
p
->
˛o£f
 = &
io_f˛o£
;

217  
p
;

218 
	}
}

221 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

222 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

223 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

224 i‡(
p
->
f
 =
NULL
)

225 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê" 
LUA_QS
 " (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

226 
	}
}

229 
	$io_›í
 (
lua_Sèã
 *
L
) {

230 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

231 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

232 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

233 c⁄° *
md
 = 
mode
;

234 
	`luaL_¨gcheck
(
L
, 
	`lua_checkmode
(
md
), 2, "invalid mode");

235 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

236  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

237 
	}
}

243 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

244 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

245  
	`luaL_exe¸esu…
(
L
, 
	`lua_p˛o£
(L, 
p
->
f
));

246 
	}
}

249 
	$io_p›í
 (
lua_Sèã
 *
L
) {

250 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

251 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

252 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

253 
p
->
f
 = 
	`lua_p›í
(
L
, 
fûíame
, 
mode
);

254 
p
->
˛o£f
 = &
io_p˛o£
;

255  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

256 
	}
}

259 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

260 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

261 
p
->
f
 = 
	`tmpfûe
();

262  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

263 
	}
}

266 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

267 
LSåóm
 *
p
;

268 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

269 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

270 i‡(
	`is˛o£d
(
p
))

271 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
	`°æí
(
IO_PREFIX
));

272  
p
->
f
;

273 
	}
}

276 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

277 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

278 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

279 i‡(
fûíame
)

280 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

282 
	`tofûe
(
L
);

283 
	`lua_pushvÆue
(
L
, 1);

285 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

288 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

290 
	}
}

293 
	$io_öput
 (
lua_Sèã
 *
L
) {

294  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

295 
	}
}

298 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

299  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

300 
	}
}

303 
io_ªadlöe
 (
lua_Sèã
 *
L
);

306 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

307 
i
;

308 
n
 = 
	`lua_gët›
(
L
) - 1;

310 
	`luaL_¨gcheck
(
L
, 
n
 <
LUA_MINSTACK
 - 3, LUA_MINSTACK - 3, "too many options");

311 
	`lua_pushvÆue
(
L
, 1);

312 
	`lua_pushöãgî
(
L
, 
n
);

313 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

314 
i
 = 1; i <
n
; i++Ë
	`lua_pushvÆue
(
L
, i + 1);

315 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

316 
	}
}

319 
	$f_löes
 (
lua_Sèã
 *
L
) {

320 
	`tofûe
(
L
);

321 
	`aux_löes
(
L
, 0);

323 
	}
}

326 
	$io_löes
 (
lua_Sèã
 *
L
) {

327 
to˛o£
;

328 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

329 i‡(
	`lua_i¢û
(
L
, 1)) {

330 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

331 
	`lua_ª∂a˚
(
L
, 1);

332 
	`tofûe
(
L
);

333 
to˛o£
 = 0;

336 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

337 
	`›ícheck
(
L
, 
fûíame
, "r");

338 
	`lua_ª∂a˚
(
L
, 1);

339 
to˛o£
 = 1;

341 
	`aux_löes
(
L
, 
to˛o£
);

343 
	}
}

353 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

354 
lua_Numbî
 
d
;

355 i‡(
	`fsˇnf
(
f
, 
LUA_NUMBER_SCAN
, &
d
) == 1) {

356 
	`lua_pushnumbî
(
L
, 
d
);

360 
	`lua_pushnû
(
L
);

363 
	}
}

366 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

367 
c
 = 
	`gëc
(
f
);

368 
	`ungëc
(
c
, 
f
);

369 
	`lua_pushl°rög
(
L
, 
NULL
, 0);

370  (
c
 !
EOF
);

371 
	}
}

374 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

375 
luaL_Buf„r
 
b
;

376 
	`luaL_bufföô
(
L
, &
b
);

378 
size_t
 
l
;

379 *
p
 = 
	`luaL_¥ïbuf„r
(&
b
);

380 i‡(
	`fgës
(
p
, 
LUAL_BUFFERSIZE
, 
f
Ë=
NULL
) {

381 
	`luaL_pushªsu…
(&
b
);

382  (
	`lua_øwÀn
(
L
, -1) > 0);

384 
l
 = 
	`°æí
(
p
);

385 i‡(
l
 =0 || 
p
[l-1] != '\n')

386 
	`luaL_addsize
(&
b
, 
l
);

388 
	`luaL_addsize
(&
b
, 
l
 - 
ch›
);

389 
	`luaL_pushªsu…
(&
b
);

393 
	}
}

396 
	#MAX_SIZE_T
 (~(
size_t
)0)

	)

398 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

399 
size_t
 
æí
 = 
LUAL_BUFFERSIZE
;

400 
luaL_Buf„r
 
b
;

401 
	`luaL_bufföô
(
L
, &
b
);

403 *
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
æí
);

404 
size_t
 
ƒ
 = 
	`‰ód
(
p
, (), 
æí
, 
f
);

405 
	`luaL_addsize
(&
b
, 
ƒ
);

406 i‡(
ƒ
 < 
æí
) ;

407 i‡(
æí
 <(
MAX_SIZE_T
 / 4))

408 
æí
 *= 2;

410 
	`luaL_pushªsu…
(&
b
);

411 
	}
}

414 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

415 
size_t
 
ƒ
;

416 *
p
;

417 
luaL_Buf„r
 
b
;

418 
	`luaL_bufföô
(
L
, &
b
);

419 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

420 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

421 
	`luaL_addsize
(&
b
, 
ƒ
);

422 
	`luaL_pushªsu…
(&
b
);

423  (
ƒ
 > 0);

424 
	}
}

427 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

428 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

429 
suc˚ss
;

430 
n
;

431 
	`˛óªº
(
f
);

432 i‡(
«rgs
 == 0) {

433 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

434 
n
 = 
fú°
+1;

437 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

438 
suc˚ss
 = 1;

439 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

440 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

441 
size_t
 
l
 = (size_t)
	`lua_toöãgî
(
L
, 
n
);

442 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

445 c⁄° *
p
 = 
	`lua_to°rög
(
L
, 
n
);

446 
	`luaL_¨gcheck
(
L
, 
p
 &&Ö[0] ='*', 
n
, "invalid option");

447 
p
[1]) {

449 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

452 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

455 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

458 
	`ªad_Æl
(
L
, 
f
);

459 
suc˚ss
 = 1;

462  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

467 i‡(
	`„º‹
(
f
))

468  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

469 i‡(!
suc˚ss
) {

470 
	`lua_p›
(
L
, 1);

471 
	`lua_pushnû
(
L
);

473  
n
 - 
fú°
;

474 
	}
}

477 
	$io_ªad
 (
lua_Sèã
 *
L
) {

478  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

479 
	}
}

482 
	$f_ªad
 (
lua_Sèã
 *
L
) {

483  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

484 
	}
}

487 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

488 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

489 
i
;

490 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

491 i‡(
	`is˛o£d
(
p
))

492  
	`luaL_îr‹
(
L
, "file isálready closed");

493 
	`lua_£â›
(
L
 , 1);

494 
i
 = 1; i <
n
; i++)

495 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

496 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

497 
	`lua_as£π
(
n
 > 0);

498 i‡(!
	`lua_i¢û
(
L
, -
n
))

499  
n
;

501 i‡(
n
 > 1) {

503  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

505 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

506 
	`lua_£â›
(
L
, 0);

507 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

508 
	`aux_˛o£
(
L
);

512 
	}
}

517 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

518 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

519 
°©us
 = 1;

520 ; 
«rgs
--; 
¨g
++) {

521 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

523 
°©us
 = status &&

524 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
, 
	`lua_t⁄umbî
(
L
, 
¨g
)) > 0;

527 
size_t
 
l
;

528 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

529 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

532 i‡(
°©us
)  1;

533  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

534 
	}
}

537 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

538  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

539 
	}
}

542 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

543 
FILE
 *
f
 = 
	`tofûe
(
L
);

544 
	`lua_pushvÆue
(
L
, 1);

545  
	`g_wrôe
(
L
, 
f
, 2);

546 
	}
}

549 
	$f_£ek
 (
lua_Sèã
 *
L
) {

550 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

551 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

552 
FILE
 *
f
 = 
	`tofûe
(
L
);

553 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

554 
lua_Numbî
 
p3
 = 
	`luaL_›äumbî
(
L
, 3, 0);

555 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

556 
	`luaL_¨gcheck
(
L
, (
lua_Numbî
)
off£t
 =
p3
, 3,

558 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

559 i‡(
›
)

560  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

562 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
	`l_·ñl
(
f
));

565 
	}
}

568 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

569 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

570 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

571 
FILE
 *
f
 = 
	`tofûe
(
L
);

572 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

573 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

574 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], 
sz
);

575  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

576 
	}
}

580 
	$io_Êush
 (
lua_Sèã
 *
L
) {

581  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

582 
	}
}

585 
	$f_Êush
 (
lua_Sèã
 *
L
) {

586  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

587 
	}
}

593 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

594 {"˛o£", 
io_˛o£
},

595 {"Êush", 
io_Êush
},

596 {"öput", 
io_öput
},

597 {"löes", 
io_löes
},

598 {"›í", 
io_›í
},

599 {"ouçut", 
io_ouçut
},

600 {"p›í", 
io_p›í
},

601 {"ªad", 
io_ªad
},

602 {"tmpfûe", 
io_tmpfûe
},

603 {"ty≥", 
io_ty≥
},

604 {"wrôe", 
io_wrôe
},

605 {
NULL
, NULL}

612 c⁄° 
luaL_Reg
 
	gÊib
[] = {

613 {"˛o£", 
io_˛o£
},

614 {"Êush", 
f_Êush
},

615 {"löes", 
f_löes
},

616 {"ªad", 
f_ªad
},

617 {"£ek", 
f_£ek
},

618 {"£tvbuf", 
f_£tvbuf
},

619 {"wrôe", 
f_wrôe
},

620 {"__gc", 
f_gc
},

621 {"__to°rög", 
f_to°rög
},

622 {
NULL
, NULL}

626 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

627 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

628 
	`lua_pushvÆue
(
L
, -1);

629 
	`lua_£tfõld
(
L
, -2, "__index");

630 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

631 
	`lua_p›
(
L
, 1);

632 
	}
}

638 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

639 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

640 
p
->
˛o£f
 = &
io_no˛o£
;

641 
	`lua_pushnû
(
L
);

642 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

644 
	}
}

647 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

648 c⁄° *
‚ame
) {

649 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

650 
p
->
f
 = f;

651 
p
->
˛o£f
 = &
io_no˛o£
;

652 i‡(
k
 !
NULL
) {

653 
	`lua_pushvÆue
(
L
, -1);

654 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

656 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

657 
	}
}

660 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

661 
	`luaL_√wlib
(
L
, 
iﬁib
);

662 
	`¸óãmëa
(
L
);

664 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

665 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

666 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

668 
	}
}

	@llex.c

11 
	#Œex_c


	)

12 
	#LUA_CORE


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/lua.h
"

16 
	~"lua/l˘y≥.h
"

17 
	~"lua/ldo.h
"

18 
	~"lua/Œex.h
"

19 
	~"lua/lobje˘.h
"

20 
	~"lua/Õ¨£r.h
"

21 
	~"lua/l°©e.h
"

22 
	~"lua/l°rög.h
"

23 
	~"lua/…abÀ.h
"

24 
	~"lua/lzio.h
"

28 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

32 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

36 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

46 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

49 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

52 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

53 
Mbuf„r
 *
b
 = 
ls
->
buff
;

54 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

55 
size_t
 
√wsize
;

56 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZET
/2)

57 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

58 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

59 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

61 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

62 
	}
}

65 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

66 
i
;

67 
i
=0; i<
NUM_RESERVED
; i++) {

68 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

69 
	`luaS_fix
(
ts
);

70 
ts
->
tsv
.
exåa
 = 
	`ˇ°_byã
(
i
+1);

72 
	}
}

75 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

76 i‡(
tokí
 < 
FIRST_RESERVED
) {

77 
	`lua_as£π
(
tokí
 =
	`ˇ°
(,Åoken));

78  (
	`li•röt
(
tokí
)Ë? 
	`luaO_pushf°rög
(
ls
->
L
, 
	`LUA_QL
("%c"),Åoken) :

79 
	`luaO_pushf°rög
(
ls
->
L
, "ch¨(%d)", 
tokí
);

82 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

83 i‡(
tokí
 < 
TK_EOS
)

84  
	`luaO_pushf°rög
(
ls
->
L
, 
LUA_QS
, 
s
);

86  
s
;

88 
	}
}

91 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

92 
tokí
) {

93 
TK_NAME
:

94 
TK_STRING
:

95 
TK_NUMBER
:

96 
	`ßve
(
ls
, '\0');

97  
	`luaO_pushf°rög
(
ls
->
L
, 
LUA_QS
, 
	`luaZ_buf„r
÷s->
buff
));

99  
	`luaX_tokí2°r
(
ls
, 
tokí
);

101 
	}
}

104 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

105 
buff
[
LUA_IDSIZE
];

106 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
ls
->
sour˚
), 
LUA_IDSIZE
);

107 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, "%s:%d: %s", 
buff
,Üs->
löíumbî
, msg);

108 i‡(
tokí
)

109 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

110 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

111 
	}
}

114 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

115 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

116 
	}
}

124 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

125 
lua_Sèã
 *
L
 = 
ls
->L;

126 
TVÆue
 *
o
;

127 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

128 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

129 
o
 = 
	`luaH_£t
(
L
, 
ls
->
fs
->
h
, L->
t›
 - 1);

130 i‡(
	`âi¢û
(
o
)) {

133 
	`£tbvÆue
(
o
, 1);

134 
	`luaC_checkGC
(
L
);

137 
ts
 = 
	`øwtsvÆue
(
	`key‰omvÆ
(
o
));

139 
L
->
t›
--;

140  
ts
;

141 
	}
}

148 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

149 
ﬁd
 = 
ls
->
cuºít
;

150 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

151 
	`√xt
(
ls
);

152 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

153 
	`√xt
(
ls
);

154 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

155 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

156 
	}
}

159 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

160 
fú°ch¨
) {

161 
ls
->
de˝oöt
 = '.';

162 
ls
->
L
 = L;

163 
ls
->
cuºít
 = 
fú°ch¨
;

164 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

165 
ls
->
z
 = z;

166 
ls
->
fs
 = 
NULL
;

167 
ls
->
löíumbî
 = 1;

168 
ls
->
œ°löe
 = 1;

169 
ls
->
sour˚
 = source;

170 
ls
->
ívn
 = 
	`luaS_√w
(
L
, 
LUA_ENV
);

171 
	`luaS_fix
(
ls
->
ívn
);

172 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

173 
	}
}

185 
	$check_√xt
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

186 i‡(
ls
->
cuºít
 ='\0' || !
	`°rchr
(
£t
,Üs->current))

188 
	`ßve_™d_√xt
(
ls
);

190 
	}
}

196 
	$buf‰ïœ˚
 (
LexSèã
 *
ls
, 
‰om
, 
to
) {

197 
size_t
 
n
 = 
	`luaZ_bufÊí
(
ls
->
buff
);

198 *
p
 = 
	`luaZ_buf„r
(
ls
->
buff
);

199 
n
--)

200 i‡(
p
[
n
] =
‰om
Ëp[n] = 
to
;

201 
	}
}

204 #i‡!
deföed
(
gëloˇÀde˝oöt
)

206 
	#gëloˇÀde˝oöt
(Ë(1.2)

	)

210 
	#buff2d
(
b
,
e
Ë
	`luaO_°r2d
(
	`luaZ_buf„r
(b), 
	`luaZ_bufÊí
(bË- 1,É)

	)

216 
	$åyde˝oöt
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

217 
ﬁd
 = 
ls
->
de˝oöt
;

218 
ls
->
de˝oöt
 = 
	`gëloˇÀde˝oöt
();

219 
	`buf‰ïœ˚
(
ls
, 
ﬁd
,Üs->
de˝oöt
);

220 i‡(!
	`buff2d
(
ls
->
buff
, &
£möfo
->
r
)) {

222 
	`buf‰ïœ˚
(
ls
,Üs->
de˝oöt
, '.');

223 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_NUMBER
);

225 
	}
}

233 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

234 c⁄° *
expo
 = "Ee";

235 
fú°
 = 
ls
->
cuºít
;

236 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

237 
	`ßve_™d_√xt
(
ls
);

238 i‡(
fú°
 ='0' && 
	`check_√xt
(
ls
, "Xx"))

239 
expo
 = "Pp";

241 i‡(
	`check_√xt
(
ls
, 
expo
))

242 
	`check_√xt
(
ls
, "+-");

243 i‡(
	`lisxdigô
(
ls
->
cuºít
) ||Üs->current == '.')

244 
	`ßve_™d_√xt
(
ls
);

247 
	`ßve
(
ls
, '\0');

248 
	`buf‰ïœ˚
(
ls
, '.',Üs->
de˝oöt
);

249 i‡(!
	`buff2d
(
ls
->
buff
, &
£möfo
->
r
))

250 
	`åyde˝oöt
(
ls
, 
£möfo
);

251 
	}
}

258 
	$skù_£p
 (
LexSèã
 *
ls
) {

259 
cou¡
 = 0;

260 
s
 = 
ls
->
cuºít
;

261 
	`lua_as£π
(
s
 == '[' || s == ']');

262 
	`ßve_™d_√xt
(
ls
);

263 
ls
->
cuºít
 == '=') {

264 
	`ßve_™d_√xt
(
ls
);

265 
cou¡
++;

267  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

268 
	}
}

271 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

272 
	`ßve_™d_√xt
(
ls
);

273 i‡(
	`cuºIsNewlöe
(
ls
))

274 
	`ö˛öíumbî
(
ls
);

276 
ls
->
cuºít
) {

277 
EOZ
:

278 
	`Àxîr‹
(
ls
, (
£möfo
) ? "unfinishedÜong string" :

279 "unföishedÜ⁄g commít", 
TK_EOS
);

282 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

283 
	`ßve_™d_√xt
(
ls
);

284 
ídlo›
;

289 
	`ßve
(
ls
, '\n');

290 
	`ö˛öíumbî
(
ls
);

291 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

295 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

296 
	`√xt
(
ls
);

299 } 
ídlo›
:

300 i‡(
£möfo
)

301 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

302 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

303 
	}
}

306 
	$es˚º‹
 (
LexSèã
 *
ls
, *
c
, 
n
, c⁄° *
msg
) {

307 
i
;

308 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

309 
	`ßve
(
ls
, '\\');

310 
i
 = 0; i < 
n
 && 
c
[i] !
EOZ
; i++)

311 
	`ßve
(
ls
, 
c
[
i
]);

312 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

313 
	}
}

316 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

317 
c
[3], 
i
;

318 
r
 = 0;

319 
c
[0] = 'x';

320 
i
 = 1; i < 3; i++) {

321 
c
[
i
] = 
	`√xt
(
ls
);

322 i‡(!
	`lisxdigô
(
c
[
i
]))

323 
	`es˚º‹
(
ls
, 
c
, 
i
 + 1, "hexadecimal digitÉxpected");

324 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
c
[
i
]);

326  
r
;

327 
	}
}

330 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

331 
c
[3], 
i
;

332 
r
 = 0;

333 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

334 
c
[
i
] = 
ls
->
cuºít
;

335 
r
 = 10*∏+ 
c
[
i
] - '0';

336 
	`√xt
(
ls
);

338 i‡(
r
 > 
UCHAR_MAX
)

339 
	`es˚º‹
(
ls
, 
c
, 
i
, "decimalÉscapeÅooÜarge");

340  
r
;

341 
	}
}

344 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

345 
	`ßve_™d_√xt
(
ls
);

346 
ls
->
cuºít
 !
dñ
) {

347 
ls
->
cuºít
) {

348 
EOZ
:

349 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

353 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

356 
c
;

357 
	`√xt
(
ls
);

358 
ls
->
cuºít
) {

359 'a': 
c
 = '\a'; 
ªad_ßve
;

360 'b': 
c
 = '\b'; 
ªad_ßve
;

361 'f': 
c
 = '\f'; 
ªad_ßve
;

362 'n': 
c
 = '\n'; 
ªad_ßve
;

363 'r': 
c
 = '\r'; 
ªad_ßve
;

364 't': 
c
 = '\t'; 
ªad_ßve
;

365 'v': 
c
 = '\v'; 
ªad_ßve
;

366 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

368 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

370 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

371 
EOZ
: 
no_ßve
;

373 
	`√xt
(
ls
);

374 
	`lis•a˚
(
ls
->
cuºít
)) {

375 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

376 
	`√xt
(
ls
);

378 
no_ßve
;

381 i‡(!
	`lisdigô
(
ls
->
cuºít
))

382 
	`es˚º‹
(
ls
, &ls->
cuºít
, 1, "invalidÉscape sequence");

384 
c
 = 
	`ªadde˚sc
(
ls
);

385 
⁄ly_ßve
;

388 
ªad_ßve
: 
	`√xt
(
ls
);

389 
⁄ly_ßve
: 
	`ßve
(
ls
, 
c
);

390 
no_ßve
: ;

393 
	`ßve_™d_√xt
(
ls
);

396 
	`ßve_™d_√xt
(
ls
);

397 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

398 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

399 
	}
}

402 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

403 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

405 
ls
->
cuºít
) {

407 
	`ö˛öíumbî
(
ls
);

411 
	`√xt
(
ls
);

415 
	`√xt
(
ls
);

416 i‡(
ls
->
cuºít
 != '-')  '-';

418 
	`√xt
(
ls
);

419 i‡(
ls
->
cuºít
 == '[') {

420 
£p
 = 
	`skù_£p
(
ls
);

421 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

422 i‡(
£p
 >= 0) {

423 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

424 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

429 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

430 
	`√xt
(
ls
);

434 
£p
 = 
	`skù_£p
(
ls
);

435 i‡(
£p
 >= 0) {

436 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

437  
TK_STRING
;

439 i‡(
£p
 == -1)  '[';

440 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

443 
	`√xt
(
ls
);

444 i‡(
ls
->
cuºít
 != '=')  '=';

445 { 
	`√xt
(
ls
);  
TK_EQ
; }

448 
	`√xt
(
ls
);

449 i‡(
ls
->
cuºít
 != '=')  '<';

450 { 
	`√xt
(
ls
);  
TK_LE
; }

453 
	`√xt
(
ls
);

454 i‡(
ls
->
cuºít
 != '=')  '>';

455 { 
	`√xt
(
ls
);  
TK_GE
; }

458 
	`√xt
(
ls
);

459 i‡(
ls
->
cuºít
 != '=')  '~';

460 { 
	`√xt
(
ls
);  
TK_NE
; }

463 
	`√xt
(
ls
);

464 i‡(
ls
->
cuºít
 != ':')  ':';

465 { 
	`√xt
(
ls
);  
TK_DBCOLON
; }

468 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

469  
TK_STRING
;

472 
	`ßve_™d_√xt
(
ls
);

473 i‡(
	`check_√xt
(
ls
, ".")) {

474 i‡(
	`check_√xt
(
ls
, "."))

475  
TK_DOTS
;

476  
TK_CONCAT
;

478 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

483 
	`ªad_numîÆ
(
ls
, 
£möfo
);

484  
TK_NUMBER
;

486 
EOZ
: {

487  
TK_EOS
;

490 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

491 
TSåög
 *
ts
;

493 
	`ßve_™d_√xt
(
ls
);

494 } 
	`li¶Ænum
(
ls
->
cuºít
));

495 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

496 
	`luaZ_bufÊí
(
ls
->
buff
));

497 
£möfo
->
ts
 =Ås;

498 i‡(
	`i§e£rved
(
ts
))

499  
ts
->
tsv
.
exåa
 - 1 + 
FIRST_RESERVED
;

501  
TK_NAME
;

505 
c
 = 
ls
->
cuºít
;

506 
	`√xt
(
ls
);

507  
c
;

512 
	}
}

515 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

516 
ls
->
œ°löe
 =Üs->
löíumbî
;

517 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

518 
ls
->
t
 =Üs->
lookahód
;

519 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

522 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

523 
	}
}

526 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

527 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

528 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

529  
ls
->
lookahód
.
tokí
;

530 
	}
}

	@lmathlib.c

8 
	#HUGE_VAL
 (123456)

	)

13 
	~<«utûus/«ut_ty≥s.h
>

14 
	~<«utûus/libccom∑t.h
>

17 
	#lm©hlib_c


	)

18 
	#LUA_LIB


	)

19 
	~"lua/lua.h
"

21 
	~"lua/œuxlib.h
"

22 
	~"lua/luÆib.h
"

23 
	~"lua/luac⁄f.h
"

25 #unde‡
PI


26 
	#PI
 ((
lua_Numbî
)(3.1415926535897932384626433832795))

	)

27 
	#RADIANS_PER_DEGREE
 ((
lua_Numbî
)(
PI
/180.0))

	)

29 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

30 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

32 
	}
}

34 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

35 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

37 
	}
}

39 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

40 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

42 
	}
}

44 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

45 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

47 
	}
}

49 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

50 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

52 
	}
}

54 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

55 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

57 
	}
}

59 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

60 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

62 
	}
}

64 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

65 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

67 
	}
}

69 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

70 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

72 
	}
}

74 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

75 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™
)(
	`luaL_checknumbî
(L, 1)));

77 
	}
}

79 
	$m©h_©™2
 (
lua_Sèã
 *
L
) {

80 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
	`luaL_checknumbî
(L, 1),

81 
	`luaL_checknumbî
(
L
, 2)));

83 
	}
}

85 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

86 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(L, 1)));

88 
	}
}

90 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

91 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(L, 1)));

93 
	}
}

95 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

96 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

97 
	`luaL_checknumbî
(
L
, 2)));

99 
	}
}

101 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

102 
lua_Numbî
 
ù
;

103 
lua_Numbî
 
Â
 = 
	`l_m©h›
(
modf
)(
	`luaL_checknumbî
(
L
, 1), &
ù
);

104 
	`lua_pushnumbî
(
L
, 
ù
);

105 
	`lua_pushnumbî
(
L
, 
Â
);

107 
	}
}

109 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

110 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

112 
	}
}

114 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

115 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

116 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

117 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

119 
	}
}

121 
	$m©h_log
 (
lua_Sèã
 *
L
) {

122 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

123 
lua_Numbî
 
ªs
;

124 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

125 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

127 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

128 i‡(
ba£
 =(
lua_Numbî
)10.0Ë
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

129 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

131 
	`lua_pushnumbî
(
L
, 
ªs
);

133 
	}
}

135 #i‡
deföed
(
LUA_COMPAT_LOG10
)

136 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

137 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

139 
	}
}

142 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

143 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

145 
	}
}

147 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

148 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1)/
RADIANS_PER_DEGREE
);

150 
	}
}

152 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

153 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1)*
RADIANS_PER_DEGREE
);

155 
	}
}

157 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

158 
e
;

159 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

160 
	`lua_pushöãgî
(
L
, 
e
);

162 
	}
}

164 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

165 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

166 
ï
 = 
	`luaL_checköt
(
L
, 2);

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

169 
	}
}

173 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

174 
n
 = 
	`lua_gët›
(
L
);

175 
lua_Numbî
 
dmö
 = 
	`luaL_checknumbî
(
L
, 1);

176 
i
;

177 
i
=2; i<=
n
; i++) {

178 
lua_Numbî
 
d
 = 
	`luaL_checknumbî
(
L
, 
i
);

179 i‡(
d
 < 
dmö
)

180 
dmö
 = 
d
;

182 
	`lua_pushnumbî
(
L
, 
dmö
);

184 
	}
}

187 
	$m©h_max
 (
lua_Sèã
 *
L
) {

188 
n
 = 
	`lua_gët›
(
L
);

189 
lua_Numbî
 
dmax
 = 
	`luaL_checknumbî
(
L
, 1);

190 
i
;

191 
i
=2; i<=
n
; i++) {

192 
lua_Numbî
 
d
 = 
	`luaL_checknumbî
(
L
, 
i
);

193 i‡(
d
 > 
dmax
)

194 
dmax
 = 
d
;

196 
	`lua_pushnumbî
(
L
, 
dmax
);

198 
	}
}

201 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

204 
lua_Numbî
 
r
 = (lua_Numbî)(
	`ønd
()%
RAND_MAX
) / (lua_Number)RAND_MAX;

205 
	`lua_gët›
(
L
)) {

207 
	`lua_pushnumbî
(
L
, 
r
);

211 
lua_Numbî
 
u
 = 
	`luaL_checknumbî
(
L
, 1);

212 
	`luaL_¨gcheck
(
L
, (
lua_Numbî
)1.0 <
u
, 1, "interval isÉmpty");

213 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Êo‹
)(
r
*
u
Ë+ (
lua_Numbî
)(1.0));

217 
lua_Numbî
 
l
 = 
	`luaL_checknumbî
(
L
, 1);

218 
lua_Numbî
 
u
 = 
	`luaL_checknumbî
(
L
, 2);

219 
	`luaL_¨gcheck
(
L
, 
l
 <
u
, 2, "interval isÉmpty");

220 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Êo‹
)(
r
*(
u
-
l
+1)) +Ü);

223 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

226 
	}
}

229 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

230 
	`§™d
(
	`luaL_checkunsig√d
(
L
, 1));

231 ()
	`ønd
();

233 
	}
}

236 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

237 {"abs", 
m©h_abs
},

238 {"acos", 
m©h_acos
},

239 {"asö", 
m©h_asö
},

240 {"©™2", 
m©h_©™2
},

241 {"©™", 
m©h_©™
},

242 {"˚û", 
m©h_˚û
},

243 {"cosh", 
m©h_cosh
},

244 {"cos", 
m©h_cos
},

245 {"deg", 
m©h_deg
},

246 {"exp", 
m©h_exp
},

247 {"Êo‹", 
m©h_Êo‹
},

248 {"fmod", 
m©h_fmod
},

249 {"‰exp", 
m©h_‰exp
},

250 {"ldexp", 
m©h_ldexp
},

251 #i‡
deföed
(
LUA_COMPAT_LOG10
)

252 {"log10", 
m©h_log10
},

254 {"log", 
m©h_log
},

255 {"max", 
m©h_max
},

256 {"mö", 
m©h_mö
},

257 {"modf", 
m©h_modf
},

258 {"pow", 
m©h_pow
},

259 {"ød", 
m©h_ød
},

260 {"øndom", 
m©h_øndom
},

261 {"øndom£ed", 
m©h_øndom£ed
},

262 {"söh", 
m©h_söh
},

263 {"sö", 
m©h_sö
},

264 {"sqπ", 
m©h_sqπ
},

265 {"ènh", 
m©h_ènh
},

266 {"èn", 
m©h_èn
},

267 {
NULL
, NULL}

274 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

275 
	`luaL_√wlib
(
L
, 
m©hlib
);

276 
	`lua_pushnumbî
(
L
, 
PI
);

277 
	`lua_£tfõld
(
L
, -2, "pi");

278 
	`lua_pushnumbî
(
L
, 
HUGE_VAL
);

279 
	`lua_£tfõld
(
L
, -2, "huge");

281 
	}
}

	@lmem.c

9 
	~<«utûus/libccom∑t.h
>

10 
	#lmem_c


	)

11 
	#LUA_CORE


	)

13 
	~"lua/lua.h
"

15 
	~"lua/ldebug.h
"

16 
	~"lua/ldo.h
"

17 
	~"lua/lgc.h
"

18 
	~"lua/lmem.h
"

19 
	~"lua/lobje˘.h
"

20 
	~"lua/l°©e.h
"

43 
	#MINSIZEARRAY
 4

	)

46 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

47 
limô
, c⁄° *
wh©
) {

48 *
√wblock
;

49 
√wsize
;

50 i‡(*
size
 >
limô
/2) {

51 i‡(*
size
 >
limô
)

52 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

53 
√wsize
 = 
limô
;

56 
√wsize
 = (*
size
)*2;

57 i‡(
√wsize
 < 
MINSIZEARRAY
)

58 
√wsize
 = 
MINSIZEARRAY
;

60 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

61 *
size
 = 
√wsize
;

62  
√wblock
;

63 
	}
}

66 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

67 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

68 
	}
}

75 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

76 *
√wblock
;

77 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

78 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

79 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

80 #i‡
	`deföed
(
HARDMEMTESTS
)

81 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

82 
	`luaC_fuŒgc
(
L
, 1);

84 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

85 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

86 
	`≠i_check
(
L
, 
nsize
 > 
ªÆosize
,

88 i‡(
g
->
g¸u¬ög
) {

89 
	`luaC_fuŒgc
(
L
, 1);

90 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

92 i‡(
√wblock
 =
NULL
)

93 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

95 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

96 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

97  
√wblock
;

98 
	}
}

	@loadlib.c

24 
	#lﬂdlib_c


	)

25 
	#LUA_LIB


	)

26 
	~<«utûus/libccom∑t.h
>

27 
	~"lua/lua.h
"

29 
	~"lua/œuxlib.h
"

30 
	~"lua/luÆib.h
"

31 
	~<«utûus/libccom∑t.h
>

37 #i‡!
deföed
(
LUA_PATH
)

38 
	#LUA_PATH
 "LUA_PATH"

	)

41 #i‡!
deföed
(
LUA_CPATH
)

42 
	#LUA_CPATH
 "LUA_CPATH"

	)

45 
	#LUA_PATHSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

47 
	#LUA_PATHVERSION
 
LUA_PATH
 
LUA_PATHSUFFIX


	)

48 
	#LUA_CPATHVERSION
 
LUA_CPATH
 
LUA_PATHSUFFIX


	)

59 #i‡!
deföed
 (
LUA_PATH_SEP
)

60 
	#LUA_PATH_SEP
 ";"

	)

62 #i‡!
deföed
 (
LUA_PATH_MARK
)

63 
	#LUA_PATH_MARK
 "?"

	)

65 #i‡!
deföed
 (
LUA_EXEC_DIR
)

66 
	#LUA_EXEC_DIR
 "!"

	)

68 #i‡!
deföed
 (
LUA_IGMARK
)

69 
	#LUA_IGMARK
 "-"

	)

79 #i‡!
deföed
(
LUA_CSUBSEP
)

80 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

83 #i‡!
deföed
(
LUA_LSUBSEP
)

84 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

89 
	#LUA_POF
 "lua›í_"

	)

92 
	#LUA_OFSEP
 "_"

	)

96 
	#CLIBS
 "_CLIBS"

	)

98 
	#LIB_FAIL
 "›í"

	)

102 
	#ERRLIB
 1

	)

103 
	#ERRFUNC
 2

	)

105 
	#£çrogdú
(
L
Ë(()0)

	)

111 
Œ_u∆ﬂdlib
 (*
lib
);

112 *
Œ_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

113 
lua_CFun˘i⁄
 
Œ_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

117 #i‡
deföed
(
LUA_USE_DLOPEN
)

127 
	~<dlf˙.h
>

129 
	$Œ_u∆ﬂdlib
 (*
lib
) {

130 
	`dl˛o£
(
lib
);

131 
	}
}

134 *
	$Œ_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

135 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

136 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

137  
lib
;

138 
	}
}

141 
lua_CFun˘i⁄
 
	$Œ_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

142 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`dlsym
(
lib
, 
sym
);

143 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

144  
f
;

145 
	}
}

151 #ñi‡
deföed
(
LUA_DL_DLL
)

158 #unde‡
£çrogdú


163 #i‡!
deföed
(
LUA_LLE_FLAGS
)

164 
	#LUA_LLE_FLAGS
 0

	)

168 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

169 
buff
[
MAX_PATH
 + 1];

170 *
lb
;

171 
DWORD
 
nsize
 = (
buff
)/();

172 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

173 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

174 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

176 *
lb
 = '\0';

177 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

178 
	`lua_ªmove
(
L
, -2);

180 
	}
}

183 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

184 
îr‹
 = 
	`GëLa°Eº‹
();

185 
buf„r
[128];

186 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

187 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

188 
	`lua_push°rög
(
L
, 
buf„r
);

190 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

191 
	}
}

193 
	$Œ_u∆ﬂdlib
 (*
lib
) {

194 
	`FªeLibøry
((
HMODULE
)
lib
);

195 
	}
}

198 *
	$Œ_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

199 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

200 ()(
£eglb
);

201 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

202  
lib
;

203 
	}
}

206 
lua_CFun˘i⁄
 
	$Œ_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

207 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

208 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

209  
f
;

210 
	}
}

222 #unde‡
LIB_FAIL


223 
	#LIB_FAIL
 "ab£¡"

	)

226 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

229 
	$Œ_u∆ﬂdlib
 (*
lib
) {

230 ()(
lib
);

231 
	}
}

234 *
	$Œ_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

235 ()(
∑th
); ()(
£eglb
);

236 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

237  
NULL
;

238 
	}
}

241 
lua_CFun˘i⁄
 
	$Œ_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

242 ()(
lib
); ()(
sym
);

243 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

244  
NULL
;

245 
	}
}

251 *
	$Œ_check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

252 *
∂ib
;

253 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
CLIBS
);

254 
	`lua_gëfõld
(
L
, -1, 
∑th
);

255 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

256 
	`lua_p›
(
L
, 2);

257  
∂ib
;

258 
	}
}

261 
	$Œ_addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

262 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
CLIBS
);

263 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

264 
	`lua_pushvÆue
(
L
, -1);

265 
	`lua_£tfõld
(
L
, -3, 
∑th
);

266 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

267 
	`lua_p›
(
L
, 1);

268 
	}
}

275 
	$g˘m
 (
lua_Sèã
 *
L
) {

276 
n
 = 
	`luaL_Àn
(
L
, 1);

277 ; 
n
 >= 1;Ç--) {

278 
	`lua_øwgëi
(
L
, 1, 
n
);

279 
	`Œ_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

280 
	`lua_p›
(
L
, 1);

283 
	}
}

286 
	$Œ_lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

287 *
ªg
 = 
	`Œ_check˛ib
(
L
, 
∑th
);

288 i‡(
ªg
 =
NULL
) {

289 
ªg
 = 
	`Œ_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

290 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

291 
	`Œ_addto˛ib
(
L
, 
∑th
, 
ªg
);

293 i‡(*
sym
 == '*') {

294 
	`lua_pushboﬁón
(
L
, 1);

298 
lua_CFun˘i⁄
 
f
 = 
	`Œ_sym
(
L
, 
ªg
, 
sym
);

299 i‡(
f
 =
NULL
)

300  
ERRFUNC
;

301 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

304 
	}
}

307 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

308 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

309 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

310 
°©
 = 
	`Œ_lﬂdfunc
(
L
, 
∑th
, 
öô
);

311 i‡(
°©
 == 0)

314 
	`lua_pushnû
(
L
);

315 
	`lua_ö£π
(
L
, -2);

316 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

319 
	}
}

330 
	$ªadabÀ
 (c⁄° *
fûíame
) {

331 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

332 i‡(
f
 =
NULL
)  0;

333 
	`f˛o£
(
f
);

335 
	}
}

338 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

339 c⁄° *
l
;

340 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

341 i‡(*
∑th
 ='\0'Ë 
NULL
;

342 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

343 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

344 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

345  
l
;

346 
	}
}

349 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

350 c⁄° *
∑th
,

351 c⁄° *
£p
,

352 c⁄° *
dú£p
) {

353 
luaL_Buf„r
 
msg
;

354 
	`luaL_bufföô
(
L
, &
msg
);

355 i‡(*
£p
 != '\0')

356 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

357 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

358 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

359 
LUA_PATH_MARK
, 
«me
);

360 
	`lua_ªmove
(
L
, -2);

361 i‡(
	`ªadabÀ
(
fûíame
))

362  
fûíame
;

363 
	`lua_pushf°rög
(
L
, "\n\äÿfûê" 
LUA_QS
, 
fûíame
);

364 
	`lua_ªmove
(
L
, -2);

365 
	`luaL_addvÆue
(&
msg
);

367 
	`luaL_pushªsu…
(&
msg
);

368  
NULL
;

369 
	}
}

372 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

373 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

374 
	`luaL_check°rög
(
L
, 2),

375 
	`luaL_›t°rög
(
L
, 3, "."),

376 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

377 i‡(
f
 !
NULL
)  1;

379 
	`lua_pushnû
(
L
);

380 
	`lua_ö£π
(
L
, -2);

383 
	}
}

386 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

387 c⁄° *
≤ame
,

388 c⁄° *
dú£p
) {

389 c⁄° *
∑th
;

390 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

391 
∑th
 = 
	`lua_to°rög
(
L
, -1);

392 i‡(
∑th
 =
NULL
)

393 
	`luaL_îr‹
(
L
, 
	`LUA_QL
("∑ckage.%s"Ë" mu° bê®°rög", 
≤ame
);

394  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

395 
	}
}

398 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

399 i‡(
°©
) {

400 
	`lua_push°rög
(
L
, 
fûíame
);

404  
	`luaL_îr‹
(
L
, "îr‹Üﬂdög moduÀ " 
LUA_QS


405 " from fûê" 
LUA_QS
 ":\n\t%s",

406 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

407 
	}
}

410 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

411 c⁄° *
fûíame
;

412 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

413 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

414 i‡(
fûíame
 =
NULL
)  1;

415  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

416 
	}
}

419 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

420 c⁄° *
fun˙ame
;

421 c⁄° *
m¨k
;

422 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

423 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

424 i‡(
m¨k
) {

425 
°©
;

426 
fun˙ame
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

427 
fun˙ame
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", funcname);

428 
°©
 = 
	`Œ_lﬂdfunc
(
L
, 
fûíame
, 
fun˙ame
);

429 i‡(
°©
 !
ERRFUNC
)  stat;

430 
mod«me
 = 
m¨k
 + 1;

432 
fun˙ame
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

433  
	`Œ_lﬂdfunc
(
L
, 
fûíame
, 
fun˙ame
);

434 
	}
}

437 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

438 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

439 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

440 i‡(
fûíame
 =
NULL
)  1;

441  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

442 
	}
}

445 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

446 c⁄° *
fûíame
;

447 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

448 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

449 
°©
;

450 i‡(
p
 =
NULL
)  0;

451 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

452 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

453 i‡(
fûíame
 =
NULL
)  1;

454 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

455 i‡(
°©
 !
ERRFUNC
)

456  
	`checklﬂd
(
L
, 0, 
fûíame
);

458 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ " 
LUA_QS
 " in file " LUA_QS,

459 
«me
, 
fûíame
);

463 
	`lua_push°rög
(
L
, 
fûíame
);

465 
	}
}

468 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

469 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

470 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

471 
	`lua_gëfõld
(
L
, -1, 
«me
);

472 i‡(
	`lua_i¢û
(
L
, -1))

473 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

475 
	}
}

478 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

479 
i
;

480 
luaL_Buf„r
 
msg
;

481 
	`luaL_bufföô
(
L
, &
msg
);

482 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "searchers");

483 i‡(!
	`lua_i°abÀ
(
L
, 3))

484 
	`luaL_îr‹
(
L
, 
	`LUA_QL
("package.searchers") " must beáÅable");

486 
i
 = 1; ; i++) {

487 
	`lua_øwgëi
(
L
, 3, 
i
);

488 i‡(
	`lua_i¢û
(
L
, -1)) {

489 
	`lua_p›
(
L
, 1);

490 
	`luaL_pushªsu…
(&
msg
);

491 
	`luaL_îr‹
(
L
, "moduÀ " 
LUA_QS
 "Çot found:%s",

492 
«me
, 
	`lua_to°rög
(
L
, -1));

494 
	`lua_push°rög
(
L
, 
«me
);

495 
	`lua_ˇŒ
(
L
, 1, 2);

496 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

498 i‡(
	`lua_is°rög
(
L
, -2)) {

499 
	`lua_p›
(
L
, 1);

500 
	`luaL_addvÆue
(&
msg
);

503 
	`lua_p›
(
L
, 2);

505 
	}
}

508 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

509 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

510 
	`lua_£â›
(
L
, 1);

511 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

512 
	`lua_gëfõld
(
L
, 2, 
«me
);

513 i‡(
	`lua_toboﬁón
(
L
, -1))

516 
	`lua_p›
(
L
, 1);

517 
	`födlﬂdî
(
L
, 
«me
);

518 
	`lua_push°rög
(
L
, 
«me
);

519 
	`lua_ö£π
(
L
, -2);

520 
	`lua_ˇŒ
(
L
, 2, 1);

521 i‡(!
	`lua_i¢û
(
L
, -1))

522 
	`lua_£tfõld
(
L
, 2, 
«me
);

523 
	`lua_gëfõld
(
L
, 2, 
«me
);

524 i‡(
	`lua_i¢û
(
L
, -1)) {

525 
	`lua_pushboﬁón
(
L
, 1);

526 
	`lua_pushvÆue
(
L
, -1);

527 
	`lua_£tfõld
(
L
, 2, 
«me
);

530 
	}
}

541 #i‡
deföed
(
LUA_COMPAT_MODULE
)

546 
	$£t_ív
 (
lua_Sèã
 *
L
) {

547 
lua_Debug
 
¨
;

548 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

549 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

550 
	`lua_iscfun˘i⁄
(
L
, -1))

551 
	`luaL_îr‹
(
L
, 
	`LUA_QL
("module") "Çot called fromá Lua function");

552 
	`lua_pushvÆue
(
L
, -2);

553 
	`lua_£tupvÆue
(
L
, -2, 1);

554 
	`lua_p›
(
L
, 1);

555 
	}
}

558 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

559 
i
;

560 
i
 = 2; i <
n
; i++) {

561 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

562 
	`lua_pushvÆue
(
L
, 
i
);

563 
	`lua_pushvÆue
(
L
, -2);

564 
	`lua_ˇŒ
(
L
, 1, 0);

567 
	}
}

570 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

571 c⁄° *
dŸ
;

572 
	`lua_pushvÆue
(
L
, -1);

573 
	`lua_£tfõld
(
L
, -2, "_M");

574 
	`lua_push°rög
(
L
, 
mod«me
);

575 
	`lua_£tfõld
(
L
, -2, "_NAME");

576 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

577 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

578 
dŸ
++;

580 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

581 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

582 
	}
}

585 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

586 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

587 
œ°¨g
 = 
	`lua_gët›
(
L
);

588 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

590 
	`lua_gëfõld
(
L
, -1, "_NAME");

591 i‡(!
	`lua_i¢û
(
L
, -1))

592 
	`lua_p›
(
L
, 1);

594 
	`lua_p›
(
L
, 1);

595 
	`modöô
(
L
, 
mod«me
);

597 
	`lua_pushvÆue
(
L
, -1);

598 
	`£t_ív
(
L
);

599 
	`do›ti⁄s
(
L
, 
œ°¨g
);

601 
	}
}

604 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

605 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

606 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

607 
	`lua_¸óãèbÀ
(
L
, 0, 1);

608 
	`lua_pushvÆue
(
L
, -1);

609 
	`lua_£tmë©abÀ
(
L
, 1);

611 
	`lua_pushglobÆèbÀ
(
L
);

612 
	`lua_£tfõld
(
L
, -2, "__index");

614 
	}
}

622 
	#AUXMARK
 "\1"

	)

628 
	$n€nv
 (
lua_Sèã
 *
L
) {

629 
b
;

630 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

631 
b
 = 
	`lua_toboﬁón
(
L
, -1);

632 
	`lua_p›
(
L
, 1);

633  
b
;

634 
	}
}

637 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
, c⁄° *
ív«me1
,

638 c⁄° *
ív«me2
, c⁄° *
def
) {

639 c⁄° *
∑th
 = 
	`gëív
(
ív«me1
);

640 i‡(
∑th
 =
NULL
)

641 
∑th
 = 
	`gëív
(
ív«me2
);

642 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

643 
	`lua_push°rög
(
L
, 
def
);

646 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

647 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

648 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
def
);

649 
	`lua_ªmove
(
L
, -2);

651 
	`£çrogdú
(
L
);

652 
	`lua_£tfõld
(
L
, -2, 
fõld«me
);

653 
	}
}

656 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

657 {"lﬂdlib", 
Œ_lﬂdlib
},

658 {"£¨ch∑th", 
Œ_£¨ch∑th
},

659 #i‡
deföed
(
LUA_COMPAT_MODULE
)

660 {"£óŒ", 
Œ_£óŒ
},

662 {
NULL
, NULL}

666 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

667 #i‡
deföed
(
LUA_COMPAT_MODULE
)

668 {"moduÀ", 
Œ_moduÀ
},

670 {"ªquúe", 
Œ_ªquúe
},

671 {
NULL
, NULL}

675 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

676 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

677 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

678 
i
;

680 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

682 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

683 
	`lua_pushvÆue
(
L
, -2);

684 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

685 
	`lua_øw£ti
(
L
, -2, 
i
+1);

687 
	}
}

690 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

692 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, 
CLIBS
);

693 
	`lua_¸óãèbÀ
(
L
, 0, 1);

694 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

695 
	`lua_£tfõld
(
L
, -2, "__gc");

696 
	`lua_£tmë©abÀ
(
L
, -2);

698 
	`luaL_√wlib
(
L
, 
pk_funcs
);

699 
	`¸óã£¨chî°abÀ
(
L
);

700 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

701 
	`lua_pushvÆue
(
L
, -1);

702 
	`lua_£tfõld
(
L
, -3, "loaders");

704 
	`lua_£tfõld
(
L
, -2, "searchers");

706 
	`£ç©h
(
L
, "∑th", 
LUA_PATHVERSION
, 
LUA_PATH
, 
LUA_PATH_DEFAULT
);

708 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATHVERSION
, 
LUA_CPATH
, 
LUA_CPATH_DEFAULT
);

710 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

711 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

712 
	`lua_£tfõld
(
L
, -2, "config");

714 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

715 
	`lua_£tfõld
(
L
, -2, "loaded");

717 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

718 
	`lua_£tfõld
(
L
, -2, "preload");

719 
	`lua_pushglobÆèbÀ
(
L
);

720 
	`lua_pushvÆue
(
L
, -2);

721 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

722 
	`lua_p›
(
L
, 1);

724 
	}
}

	@lobject.c

12 
	#lobje˘_c


	)

13 
	#LUA_CORE


	)

14 
	~<«utûus/libccom∑t.h
>

15 
	~"lua/lua.h
"

17 
	~"lua/l˘y≥.h
"

18 
	~"lua/ldebug.h
"

19 
	~"lua/ldo.h
"

20 
	~"lua/lmem.h
"

21 
	~"lua/lobje˘.h
"

22 
	~"lua/l°©e.h
"

23 
	~"lua/l°rög.h
"

24 
	~"lua/lvm.h
"

28 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

36 
	$luaO_öt2fb
 (
x
) {

37 
e
 = 0;

38 i‡(
x
 < 8)  x;

39 
x
 >= 0x10) {

40 
x
 = (x+1) >> 1;

41 
e
++;

43  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

44 
	}
}

48 
	$luaO_fb2öt
 (
x
) {

49 
e
 = (
x
 >> 3) & 0x1f;

50 i‡(
e
 =0Ë 
x
;

51  ((
x
 & 7Ë+ 8Ë<< (
e
 - 1);

52 
	}
}

55 
	$luaO_˚ûlog2
 (
x
) {

56 c⁄° 
lu_byã
 
log_2
[256] = {

66 
l
 = 0;

67 
x
--;

68 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

69  
l
 + 
log_2
[
x
];

70 
	}
}

73 
lua_Numbî
 
	$luaO_¨ôh
 (
›
, 
lua_Numbî
 
v1
,Üua_Numbî 
v2
) {

74 
›
) {

75 
LUA_OPADD
:  
	`luai_numadd
(
NULL
, 
v1
, 
v2
);

76 
LUA_OPSUB
:  
	`luai_numsub
(
NULL
, 
v1
, 
v2
);

77 
LUA_OPMUL
:  
	`luai_nummul
(
NULL
, 
v1
, 
v2
);

78 
LUA_OPDIV
:  
	`luai_numdiv
(
NULL
, 
v1
, 
v2
);

79 
LUA_OPMOD
:  
	`luai_nummod
(
NULL
, 
v1
, 
v2
);

80 
LUA_OPPOW
:  
	`luai_numpow
(
NULL
, 
v1
, 
v2
);

81 
LUA_OPUNM
:  
	`luai_numunm
(
NULL
, 
v1
);

82 : 
	`lua_as£π
(0);  0;

84 
	}
}

87 
	$luaO_hexavÆue
 (
c
) {

88 i‡(
	`lisdigô
(
c
))  c - '0';

89  
	`…ﬁowî
(
c
) - 'a' + 10;

90 
	}
}

93 #i‡!
deföed
(
lua_°rx2numbî
)

95 
	~<m©h.h
>

98 
	$i¢eg
 (c⁄° **
s
) {

99 i‡(**
s
 == '-') { (*s)++;  1; }

100 i‡(**
s
 == '+') (*s)++;

102 
	}
}

105 
lua_Numbî
 
	$ªadhexa
 (c⁄° **
s
, 
lua_Numbî
 
r
, *
cou¡
) {

106 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(**
s
)); (*s)++) {

107 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ ca°_num(
	`luaO_hexavÆue
(
	`ˇ°_uch¨
(**
s
)));

108 (*
cou¡
)++;

110  
r
;

111 
	}
}

118 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

119 
lua_Numbî
 
r
 = 0.0;

120 
e
 = 0, 
i
 = 0;

121 
√g
 = 0;

122 *
íd±r
 = 
	`ˇ°
(*, 
s
);

123 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

124 
√g
 = 
	`i¢eg
(&
s
);

125 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

127 
s
 += 2;

128 
r
 = 
	`ªadhexa
(&
s
,Ñ, &
i
);

129 i‡(*
s
 == '.') {

130 
s
++;

131 
r
 = 
	`ªadhexa
(&
s
,Ñ, &
e
);

133 i‡(
i
 =0 && 
e
 == 0)

135 
e
 *= -4;

136 *
íd±r
 = 
	`ˇ°
(*, 
s
);

137 i‡(*
s
 == 'p' || *s == 'P') {

138 
exp1
 = 0;

139 
√g1
;

140 
s
++;

141 
√g1
 = 
	`i¢eg
(&
s
);

142 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

143 
ªt
;

144 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

145 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

146 i‡(
√g1
Ë
exp1
 = -exp1;

147 
e
 +
exp1
;

149 *
íd±r
 = 
	`ˇ°
(*, 
s
);

150 
ªt
:

151 i‡(
√g
Ë
r
 = -r;

152  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

153 
	}
}

158 
	$luaO_°r2d
 (c⁄° *
s
, 
size_t
 
Àn
, 
lua_Numbî
 *
ªsu…
) {

159 *
íd±r
;

160 i‡(
	`°Ωbrk
(
s
, "nN"))

162 i‡(
	`°Ωbrk
(
s
, "xX"))

163 *
ªsu…
 = 
	`lua_°rx2numbî
(
s
, &
íd±r
);

165 *
ªsu…
 = 
	`lua_°r2numbî
(
s
, &
íd±r
);

166 i‡(
íd±r
 =
s
)  0;

167 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

168  (
íd±r
 =
s
 + 
Àn
);

169 
	}
}

173 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

174 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

175 
	}
}

179 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

180 
n
 = 0;

182 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

183 i‡(
e
 =
NULL
) ;

184 
	`luaD_check°ack
(
L
, 2);

185 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

186 *(
e
+1)) {

188 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

189 i‡(
s
 =
NULL
) s = "(null)";

190 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

194 
buff
;

195 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

196 
	`push°r
(
L
, &
buff
, 1);

200 
	`£ävÆue
(
L
->
t›
++, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, )));

204 
	`£ävÆue
(
L
->
t›
++, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

208 
buff
[4*(*) + 8];

209 
l
 = 
	`•rötf
(
buff
, "%p", 
	`va_¨g
(
¨gp
, *));

210 
	`push°r
(
L
, 
buff
, 
l
);

214 
	`push°r
(
L
, "%", 1);

218 
	`luaG_ru√º‹
(
L
,

219 "övÆid o±i⁄ " 
	`LUA_QL
("%%%c") "Åo " LUA_QL("lua_pushfstring"),

220 *(
e
 + 1));

223 
n
 += 2;

224 
fmt
 = 
e
+2;

226 
	`luaD_check°ack
(
L
, 1);

227 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

228 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

229  
	`svÆue
(
L
->
t›
 - 1);

230 
	}
}

233 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

234 c⁄° *
msg
;

235 
va_li°
 
¨gp
;

236 
	`va_°¨t
(
¨gp
, 
fmt
);

237 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

238 
	`va_íd
(
¨gp
);

239  
msg
;

240 
	}
}

244 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

246 
	#RETS
 "..."

	)

247 
	#PRE
 "[°rög \""

	)

248 
	#POS
 "\"]"

	)

250 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

252 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

253 
size_t
 
l
 = 
	`°æí
(
sour˚
);

254 i‡(*
sour˚
 == '=') {

255 i‡(
l
 <
bufÊí
)

256 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

258 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

259 *
out
 = '\0';

262 i‡(*
sour˚
 == '@') {

263 i‡(
l
 <
bufÊí
)

264 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

266 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

267 
bufÊí
 -
	`LL
(
RETS
);

268 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

272 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

273 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

274 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

275 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

276 
	`add°r
(
out
, 
sour˚
, 
l
);

279 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

280 i‡(
l
 > 
bufÊí
)Ü = bufflen;

281 
	`add°r
(
out
, 
sour˚
, 
l
);

282 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

284 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

286 
	}
}

	@lopcodes.c

8 
	#l›codes_c


	)

9 
	#LUA_CORE


	)

11 
	~<«utûus/libccom∑t.h
>

12 
	~"lua/l›codes.h
"

17 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

58 
NULL


62 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

64 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

66 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

67 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

68 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

69 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

70 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

71 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

72 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

73 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

74 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

75 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

76 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

78 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

79 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

84 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

89 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

90 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

94 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

97 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

99 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

100 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

102 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

104 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@loslib.c

16 
	#lo¶ib_c


	)

17 
	#LUA_LIB


	)

18 
	#LIBCCOMPAT
 1

	)

20 
	~<«utûus/libccom∑t.h
>

21 
	~"lua/lua.h
"

23 
	~"lua/œuxlib.h
"

24 
	~"lua/luÆib.h
"

30 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

32 #i‡!
deföed
(
LUA_USE_POSIX
)

33 
	#LUA_STRFTIMEOPTIONS
 { "aAbBcdHIjmMpSUwWxXyYz%", "" }

	)

35 
	#LUA_STRFTIMEOPTIONS
 \

38 "O", "deHImMSuUVwWy" }

	)

49 #i‡
deföed
(
LUA_USE_MKSTEMP
)

50 
	~<uni°d.h
>

51 
	#LUA_TMPNAMBUFSIZE
 32

	)

52 
	#lua_tm≤am
(
b
,
e
) { \

53 
	`°r˝y
(
b
, "/tmp/lua_XXXXXX"); \

54 
e
 = 
	`mk°emp
(
b
); \

55 i‡(
e
 !-1Ë
	`˛o£
(e); \

56 
e
 = (ê=-1); }

	)

58 #ñi‡!
deföed
(
lua_tm≤am
)

60 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

61 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

70 #i‡
deföed
(
LUA_USE_GMTIME_R
)

72 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

73 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

75 #ñi‡!
deföed
(
l_gmtime
)

77 
	#l_gmtime
(
t
,
r
Ë((Ï, 
	`gmtime
—))

	)

78 
	#l_loˇ…ime
(
t
,
r
Ë((Ï, 
	`loˇ…ime
—))

	)

84 
	$os_execuã
 (
lua_Sèã
 *
L
) {

85 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

86 
°©
 = 
	`sy°em
(
cmd
);

87 i‡(
cmd
 !
NULL
)

88  
	`luaL_exe¸esu…
(
L
, 
°©
);

90 
	`lua_pushboﬁón
(
L
, 
°©
);

93 
	}
}

96 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

97 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

98  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

99 
	}
}

102 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

103 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

104 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

105  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

106 
	}
}

109 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

110 
buff
[
LUA_TMPNAMBUFSIZE
];

111 
îr
;

112 
	`lua_tm≤am
(
buff
, 
îr
);

113 i‡(
îr
)

114  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

115 
	`lua_push°rög
(
L
, 
buff
);

117 
	}
}

120 
	$os_gëív
 (
lua_Sèã
 *
L
) {

121 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

123 
	}
}

126 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

127 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

129 
	}
}

140 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

141 
	`lua_pushöãgî
(
L
, 
vÆue
);

142 
	`lua_£tfõld
(
L
, -2, 
key
);

143 
	}
}

145 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

146 i‡(
vÆue
 < 0)

148 
	`lua_pushboﬁón
(
L
, 
vÆue
);

149 
	`lua_£tfõld
(
L
, -2, 
key
);

150 
	}
}

152 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

153 
ªs
;

154 
	`lua_gëfõld
(
L
, -1, 
key
);

155 
ªs
 = 
	`lua_i¢û
(
L
, -1Ë? -1 : 
	`lua_toboﬁón
(L, -1);

156 
	`lua_p›
(
L
, 1);

157  
ªs
;

158 
	}
}

161 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
) {

162 
ªs
, 
i¢um
;

163 
	`lua_gëfõld
(
L
, -1, 
key
);

164 
ªs
 = ()
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

165 i‡(!
i¢um
) {

166 i‡(
d
 < 0)

167  
	`luaL_îr‹
(
L
, "fõld " 
LUA_QS
 " missög i¿d©êèbÀ", 
key
);

168 
ªs
 = 
d
;

170 
	`lua_p›
(
L
, 1);

171  
ªs
;

172 
	}
}

175 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
, *
buff
) {

176 c⁄° *c⁄° 
›ti⁄s
[] = 
LUA_STRFTIMEOPTIONS
;

177 
i
;

178 
i
 = 0; i < (
›ti⁄s
)/(options[0]); i += 2) {

179 i‡(*
c⁄v
 !'\0' && 
	`°rchr
(
›ti⁄s
[
i
], *c⁄vË!
NULL
) {

180 
buff
[1] = *
c⁄v
;

181 i‡(*
›ti⁄s
[
i
 + 1] == '\0') {

182 
buff
[2] = '\0';

183  
c⁄v
 + 1;

185 i‡(*(
c⁄v
 + 1) != '\0' &&

186 
	`°rchr
(
›ti⁄s
[
i
 + 1], *(
c⁄v
 + 1)Ë!
NULL
) {

187 
buff
[2] = *(
c⁄v
 + 1);

188 
buff
[3] = '\0';

189  
c⁄v
 + 2;

193 
	`luaL_¨gîr‹
(
L
, 1,

194 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

195  
c⁄v
;

196 
	}
}

199 
	$os_d©e
 (
lua_Sèã
 *
L
) {

200 c⁄° *
s
 = 
	`luaL_›t°rög
(
L
, 1, "%c");

201 
time_t
 
t
 = 
	`luaL_›t
(
L
, (time_t)
luaL_checknumbî
, 2, 
	`time
(
NULL
));

202 
tm
 
tmr
, *
°m
;

203 i‡(*
s
 == '!') {

204 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

205 
s
++;

208 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

209 i‡(
°m
 =
NULL
)

210 
	`lua_pushnû
(
L
);

211 i‡(
	`°rcmp
(
s
, "*t") == 0) {

212 
	`lua_¸óãèbÀ
(
L
, 0, 9);

213 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

214 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

215 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

216 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

217 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
+1);

218 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
+1900);

219 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
+1);

220 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
+1);

221 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

224 
cc
[4];

225 
luaL_Buf„r
 
b
;

226 
cc
[0] = '%';

227 
	`luaL_bufföô
(
L
, &
b
);

228 *
s
) {

229 i‡(*
s
 != '%')

230 
	`luaL_addch¨
(&
b
, *
s
++);

232 
size_t
 
ª¶í
;

233 
buff
[200];

234 
s
 = 
	`check›ti⁄
(
L
, s + 1, 
cc
);

235 
ª¶í
 = 
	`°r·ime
(
buff
, (buff), 
cc
, 
°m
);

236 
	`luaL_addl°rög
(&
b
, 
buff
, 
ª¶í
);

239 
	`luaL_pushªsu…
(&
b
);

242 
	}
}

245 
	$os_time
 (
lua_Sèã
 *
L
) {

246 
time_t
 
t
;

247 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

248 
t
 = 
	`time
(
NULL
);

250 
tm
 
ts
;

251 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

252 
	`lua_£â›
(
L
, 1);

253 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0);

254 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0);

255 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12);

256 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1);

257 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1) - 1;

258 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1) - 1900;

259 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

260 
t
 = 
	`mktime
(&
ts
);

262 i‡(
t
 =(
time_t
)(-1))

263 
	`lua_pushnû
(
L
);

265 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
t
);

267 
	}
}

270 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

271 
	`lua_pushnumbî
(
L
, 
	`dif·ime
((
time_t
)(
	`luaL_checknumbî
(L, 1)),

272 (
time_t
)(
	`luaL_›äumbî
(
L
, 2, 0))));

274 
	}
}

279 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

280 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

281 
LC_NUMERIC
, 
LC_TIME
};

282 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

283 "numîic", "time", 
NULL
};

284 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

285 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

286 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

288 
	}
}

291 
	$os_exô
 (
lua_Sèã
 *
L
) {

292 
°©us
;

293 i‡(
	`lua_isboﬁón
(
L
, 1))

294 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

296 
°©us
 = 
	`luaL_›töt
(
L
, 1, 
EXIT_SUCCESS
);

297 i‡(
	`lua_toboﬁón
(
L
, 2))

298 
	`lua_˛o£
(
L
);

299 i‡(
L
Ë
	`exô
(
°©us
);

301 
	}
}

304 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

305 {"˛ock", 
os_˛ock
},

306 {"d©e", 
os_d©e
},

307 {"dif·ime", 
os_dif·ime
},

308 {"execuã", 
os_execuã
},

309 {"exô", 
os_exô
},

310 {"gëív", 
os_gëív
},

311 {"ªmove", 
os_ªmove
},

312 {"ª«me", 
os_ª«me
},

313 {"£éoˇÀ", 
os_£éoˇÀ
},

314 {"time", 
os_time
},

315 {"tm≤ame", 
os_tm≤ame
},

316 {
NULL
, NULL}

323 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

324 
	`luaL_√wlib
(
L
, 
sy¶ib
);

326 
	}
}

	@lparser.c

10 
	#SHRT_MAX
 1

	)

11 
	#Õ¨£r_c


	)

12 
	#LUA_CORE


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/lua.h
"

16 
	~"lua/lcode.h
"

17 
	~"lua/ldebug.h
"

18 
	~"lua/ldo.h
"

19 
	~"lua/lfunc.h
"

20 
	~"lua/Œex.h
"

21 
	~"lua/lmem.h
"

22 
	~"lua/lobje˘.h
"

23 
	~"lua/l›codes.h
"

24 
	~"lua/Õ¨£r.h
"

25 
	~"lua/l°©e.h
"

26 
	~"lua/l°rög.h
"

27 
	~"lua/…abÀ.h
"

32 
	#MAXVARS
 200

	)

35 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	sBlockC¡
 {

43 
BlockC¡
 *
	m¥evious
;

44 
	mfú°œbñ
;

45 
	mfú°gŸo
;

46 
lu_byã
 
	m«˘v¨
;

47 
lu_byã
 
	mupvÆ
;

48 
lu_byã
 
	mi¶o›
;

49 } 
	tBlockC¡
;

56 
°©emít
 (
LexSèã
 *
ls
);

57 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

60 
	$™ch‹_tokí
 (
LexSèã
 *
ls
) {

62 
	`lua_as£π
(
ls
->
fs
 !
NULL
 ||Üs->
t
.
tokí
 =
TK_EOS
);

63 i‡(
ls
->
t
.
tokí
 =
TK_NAME
 ||Üs->t.tokí =
TK_STRING
) {

64 
TSåög
 *
ts
 = 
ls
->
t
.
£möfo
.ts;

65 
	`luaX_√w°rög
(
ls
, 
	`gë°r
(
ts
),Ås->
tsv
.
Àn
);

67 
	}
}

71 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

72 
ls
->
t
.
tokí
 = 0;

73 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

74 
	}
}

77 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

78 
	`luaX_sy¡axîr‹
(
ls
,

79 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

80 
	}
}

83 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

84 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

85 c⁄° *
msg
;

86 
löe
 = 
fs
->
f
->
löedeföed
;

87 c⁄° *
whîe
 = (
löe
 == 0)

89 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

90 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

91 
wh©
, 
limô
, 
whîe
);

92 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

93 
	}
}

96 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

97 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

98 
	}
}

101 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

102 i‡(
ls
->
t
.
tokí
 =
c
) {

103 
	`luaX_√xt
(
ls
);

107 
	}
}

110 
	$check
 (
LexSèã
 *
ls
, 
c
) {

111 i‡(
ls
->
t
.
tokí
 !
c
)

112 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

113 
	}
}

116 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

117 
	`check
(
ls
, 
c
);

118 
	`luaX_√xt
(
ls
);

119 
	}
}

122 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

126 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

127 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

128 i‡(
whîe
 =
ls
->
löíumbî
)

129 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

131 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

133 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

136 
	}
}

139 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

140 
TSåög
 *
ts
;

141 
	`check
(
ls
, 
TK_NAME
);

142 
ts
 = 
ls
->
t
.
£möfo
.ts;

143 
	`luaX_√xt
(
ls
);

144  
ts
;

145 
	}
}

148 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

149 
e
->
f
 =É->
t
 = 
NO_JUMP
;

150 
e
->
k
 = k;

151 
e
->
u
.
öfo
 = 
i
;

152 
	}
}

155 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

156 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

157 
	}
}

160 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

161 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

162 
	}
}

165 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

166 
FuncSèã
 *
fs
 = 
ls
->fs;

167 
PrŸo
 *
f
 = 
fs
->f;

168 
ﬁdsize
 = 
f
->
sizñocv¨s
;

169 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

170 
LocV¨
, 
SHRT_MAX
, "local variables");

171 
ﬁdsize
 < 
f
->
sizñocv¨s
Ëf->
locv¨s
[ﬁdsize++].
v¨«me
 = 
NULL
;

172 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

173 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

174  
fs
->
∆ocv¨s
++;

175 
	}
}

178 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

179 
FuncSèã
 *
fs
 = 
ls
->fs;

180 
Dynd©a
 *
dyd
 = 
ls
->dyd;

181 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

182 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

183 
MAXVARS
, "local variables");

184 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

185 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

186 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

187 
	}
}

190 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

191 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

192 
	}
}

194 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

195 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

198 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

199 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

200 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

201  &
fs
->
f
->
locv¨s
[
idx
];

202 
	}
}

205 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

206 
FuncSèã
 *
fs
 = 
ls
->fs;

207 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

208 ; 
nv¨s
;Çvars--) {

209 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

211 
	}
}

214 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

215 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

216 
fs
->
«˘v¨
 > 
tﬁevñ
)

217 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

218 
	}
}

221 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

222 
i
;

223 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

224 
i
 = 0; i < 
fs
->
nups
; i++) {

225 i‡(
	`luaS_eq°r
(
up
[
i
].
«me
,Çame))  i;

228 
	}
}

231 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

232 
PrŸo
 *
f
 = 
fs
->f;

233 
ﬁdsize
 = 
f
->
sizeupvÆues
;

234 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

235 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

236 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

237 
ﬁdsize
 < 
f
->
sizeupvÆues
Ëf->
upvÆues
[ﬁdsize++].
«me
 = 
NULL
;

238 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

239 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

240 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

241 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

242  
fs
->
nups
++;

243 
	}
}

246 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

247 
i
;

248 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

249 i‡(
	`luaS_eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

250  
i
;

253 
	}
}

260 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

261 
BlockC¡
 *
bl
 = 
fs
->bl;

262 
bl
->
«˘v¨
 > 
Àvñ
Ëb»bl->
¥evious
;

263 
bl
->
upvÆ
 = 1;

264 
	}
}

271 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

272 i‡(
fs
 =
NULL
)

273  
VVOID
;

275 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

276 i‡(
v
 >= 0) {

277 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

278 i‡(!
ba£
)

279 
	`m¨kupvÆ
(
fs
, 
v
);

280  
VLOCAL
;

283 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

284 i‡(
idx
 < 0) {

285 i‡(
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0Ë=
VVOID
)

286  
VVOID
;

288 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

290 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

291  
VUPVAL
;

294 
	}
}

297 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

298 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

299 
FuncSèã
 *
fs
 = 
ls
->fs;

300 i‡(
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1Ë=
VVOID
) {

301 
expdesc
 
key
;

302 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

303 
	`lua_as£π
(
v¨
->
k
 =
VLOCAL
 || v¨->k =
VUPVAL
);

304 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

305 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

307 
	}
}

310 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

311 
FuncSèã
 *
fs
 = 
ls
->fs;

312 
exåa
 = 
nv¨s
 - 
√xps
;

313 i‡(
	`hasmu…ªt
(
e
->
k
)) {

314 
exåa
++;

315 i‡(
exåa
 < 0)Éxtra = 0;

316 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

317 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

320 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

321 i‡(
exåa
 > 0) {

322 
ªg
 = 
fs
->
‰ìªg
;

323 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

324 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

327 
	}
}

330 
	$íãæevñ
 (
LexSèã
 *
ls
) {

331 
lua_Sèã
 *
L
 = 
ls
->L;

332 ++
L
->
nCˇŒs
;

333 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

334 
	}
}

337 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

340 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

341 
i
;

342 
FuncSèã
 *
fs
 = 
ls
->fs;

343 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

344 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

345 
	`lua_as£π
(
	`luaS_eq°r
(
gt
->
«me
, 
œbñ
->name));

346 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

347 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

348 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

349 "<gŸÿ%s>áàlöê%d jump†ötÿthêsc›êo‡loˇ»" 
LUA_QS
,

350 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

351 
	`£mîr‹
(
ls
, 
msg
);

353 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

355 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

356 
gl
->
¨r
[
i
] = gl->arr[i + 1];

357 
gl
->
n
--;

358 
	}
}

364 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

365 
i
;

366 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

367 
Dynd©a
 *
dyd
 = 
ls
->dyd;

368 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

370 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

371 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

372 i‡(
	`luaS_eq°r
(
lb
->
«me
, 
gt
->name)) {

373 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

374 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

375 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

376 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

381 
	}
}

384 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

385 
löe
, 
pc
) {

386 
n
 = 
l
->n;

387 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

388 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

389 
l
->
¨r
[
n
].
«me
 =Çame;

390 
l
->
¨r
[
n
].
löe
 =Üine;

391 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

392 
l
->
¨r
[
n
].
pc
 =Öc;

393 
l
->
n
++;

394  
n
;

395 
	}
}

402 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

403 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

404 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

405 
i
 < 
gl
->
n
) {

406 i‡(
	`luaS_eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

407 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

409 
i
++;

411 
	}
}

420 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

421 
i
 = 
bl
->
fú°gŸo
;

422 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

425 
i
 < 
gl
->
n
) {

426 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

427 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

428 i‡(
bl
->
upvÆ
)

429 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

430 
gt
->
«˘v¨
 = 
bl
->nactvar;

432 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

433 
i
++;

435 
	}
}

438 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

439 
bl
->
i¶o›
 = isloop;

440 
bl
->
«˘v¨
 = 
fs
->nactvar;

441 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

442 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

443 
bl
->
upvÆ
 = 0;

444 
bl
->
¥evious
 = 
fs
->bl;

445 
fs
->
bl
 = bl;

446 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

447 
	}
}

453 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

454 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

455 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

456 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

457 
	}
}

463 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

464 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

466 : "nÿvisibÀÜabñ " 
LUA_QS
 " for <goto>átÜine %d";

467 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

468 
	`£mîr‹
(
ls
, 
msg
);

469 
	}
}

472 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

473 
BlockC¡
 *
bl
 = 
fs
->bl;

474 
LexSèã
 *
ls
 = 
fs
->ls;

475 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

477 
j
 = 
	`luaK_jump
(
fs
);

478 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

479 
	`luaK_∑tchtohîe
(
fs
, 
j
);

481 i‡(
bl
->
i¶o›
)

482 
	`bªakœbñ
(
ls
);

483 
fs
->
bl
 = bl->
¥evious
;

484 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

485 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

486 
fs
->
‰ìªg
 = fs->
«˘v¨
;

487 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

488 i‡(
bl
->
¥evious
)

489 
	`movegŸosout
(
fs
, 
bl
);

490 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

491 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

492 
	}
}

498 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

499 
PrŸo
 *
˛p
;

500 
lua_Sèã
 *
L
 = 
ls
->L;

501 
FuncSèã
 *
fs
 = 
ls
->fs;

502 
PrŸo
 *
f
 = 
fs
->f;

503 i‡(
fs
->
≈
 >
f
->
sizï
) {

504 
ﬁdsize
 = 
f
->
sizï
;

505 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

506 
ﬁdsize
 < 
f
->
sizï
Ëf->
p
[ﬁdsize++] = 
NULL
;

508 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

509 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

510  
˛p
;

511 
	}
}

520 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

521 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

522 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

523 
	`luaK_exp2√xåeg
(
fs
, 
v
);

524 
	}
}

527 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

528 
lua_Sèã
 *
L
 = 
ls
->L;

529 
PrŸo
 *
f
;

530 
fs
->
¥ev
 = 
ls
->fs;

531 
fs
->
ls
 =Üs;

532 
ls
->
fs
 = fs;

533 
fs
->
pc
 = 0;

534 
fs
->
œ°èrgë
 = 0;

535 
fs
->
jpc
 = 
NO_JUMP
;

536 
fs
->
‰ìªg
 = 0;

537 
fs
->
nk
 = 0;

538 
fs
->
≈
 = 0;

539 
fs
->
nups
 = 0;

540 
fs
->
∆ocv¨s
 = 0;

541 
fs
->
«˘v¨
 = 0;

542 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

543 
fs
->
bl
 = 
NULL
;

544 
f
 = 
fs
->f;

545 
f
->
sour˚
 = 
ls
->source;

546 
f
->
max°acksize
 = 2;

547 
fs
->
h
 = 
	`luaH_√w
(
L
);

549 
	`£thvÆue2s
(
L
, L->
t›
, 
fs
->
h
);

550 
	`ö¸_t›
(
L
);

551 
	`íãrblock
(
fs
, 
bl
, 0);

552 
	}
}

555 
	$˛o£_func
 (
LexSèã
 *
ls
) {

556 
lua_Sèã
 *
L
 = 
ls
->L;

557 
FuncSèã
 *
fs
 = 
ls
->fs;

558 
PrŸo
 *
f
 = 
fs
->f;

559 
	`luaK_ªt
(
fs
, 0, 0);

560 
	`Àaveblock
(
fs
);

561 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

562 
f
->
sizecode
 = 
fs
->
pc
;

563 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

564 
f
->
sizñöeöfo
 = 
fs
->
pc
;

565 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

566 
f
->
sizek
 = 
fs
->
nk
;

567 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

568 
f
->
sizï
 = 
fs
->
≈
;

569 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

570 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

571 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

572 
f
->
sizeupvÆues
 = 
fs
->
nups
;

573 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

574 
ls
->
fs
 = fs->
¥ev
;

576 
	`™ch‹_tokí
(
ls
);

577 
L
->
t›
--;

578 
	`luaC_checkGC
(
L
);

579 
	}
}

593 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

594 
ls
->
t
.
tokí
) {

595 
TK_ELSE
: 
TK_ELSEIF
:

596 
TK_END
: 
TK_EOS
:

598 
TK_UNTIL
:  
wôhu¡û
;

601 
	}
}

604 
	$°©li°
 (
LexSèã
 *
ls
) {

606 !
	`block_fﬁlow
(
ls
, 1)) {

607 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

608 
	`°©emít
(
ls
);

611 
	`°©emít
(
ls
);

613 
	}
}

616 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

618 
FuncSèã
 *
fs
 = 
ls
->fs;

619 
expdesc
 
key
;

620 
	`luaK_exp2™yªgup
(
fs
, 
v
);

621 
	`luaX_√xt
(
ls
);

622 
	`check«me
(
ls
, &
key
);

623 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

624 
	}
}

627 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

629 
	`luaX_√xt
(
ls
);

630 
	`ex¥
(
ls
, 
v
);

631 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

632 
	`check√xt
(
ls
, ']');

633 
	}
}

643 
	sC⁄sC⁄åﬁ
 {

644 
expdesc
 
	mv
;

645 
expdesc
 *
	mt
;

646 
	mnh
;

647 
	m«
;

648 
	mto°‹e
;

652 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

654 
FuncSèã
 *
fs
 = 
ls
->fs;

655 
ªg
 = 
ls
->
fs
->
‰ìªg
;

656 
expdesc
 
key
, 
vÆ
;

657 
rkkey
;

658 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

659 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

660 
	`check«me
(
ls
, &
key
);

663 
	`yödex
(
ls
, &
key
);

664 
cc
->
nh
++;

665 
	`check√xt
(
ls
, '=');

666 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

667 
	`ex¥
(
ls
, &
vÆ
);

668 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

669 
fs
->
‰ìªg
 = 
ªg
;

670 
	}
}

673 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

674 i‡(
cc
->
v
.
k
 =
VVOID
) ;

675 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

676 
cc
->
v
.
k
 = 
VVOID
;

677 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

678 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

679 
cc
->
to°‹e
 = 0;

681 
	}
}

684 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

685 i‡(
cc
->
to°‹e
 == 0) ;

686 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

687 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

688 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

689 
cc
->
«
--;

692 i‡(
cc
->
v
.
k
 !
VVOID
)

693 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

694 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

696 
	}
}

699 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

701 
	`ex¥
(
ls
, &
cc
->
v
);

702 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

703 
cc
->
«
++;

704 
cc
->
to°‹e
++;

705 
	}
}

708 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

710 
ls
->
t
.
tokí
) {

711 
TK_NAME
: {

712 i‡(
	`luaX_lookahód
(
ls
) != '=')

713 
	`li°fõld
(
ls
, 
cc
);

715 
	`ªcfõld
(
ls
, 
cc
);

719 
	`ªcfõld
(
ls
, 
cc
);

723 
	`li°fõld
(
ls
, 
cc
);

727 
	}
}

730 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

733 
FuncSèã
 *
fs
 = 
ls
->fs;

734 
löe
 = 
ls
->
löíumbî
;

735 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

736 
C⁄sC⁄åﬁ
 
cc
;

737 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

738 
cc
.
t
 =Å;

739 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

740 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

741 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

742 
	`check√xt
(
ls
, '{');

744 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

745 i‡(
ls
->
t
.
tokí
 == '}') ;

746 
	`˛o£li°fõld
(
fs
, &
cc
);

747 
	`fõld
(
ls
, &
cc
);

748 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

749 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

750 
	`œ°li°fõld
(
fs
, &
cc
);

751 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

752 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

753 
	}
}

759 
	$∑æi°
 (
LexSèã
 *
ls
) {

761 
FuncSèã
 *
fs
 = 
ls
->fs;

762 
PrŸo
 *
f
 = 
fs
->f;

763 
≈¨ams
 = 0;

764 
f
->
is_v¨¨g
 = 0;

765 i‡(
ls
->
t
.
tokí
 != ')') {

767 
ls
->
t
.
tokí
) {

768 
TK_NAME
: {

769 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

770 
≈¨ams
++;

773 
TK_DOTS
: {

774 
	`luaX_√xt
(
ls
);

775 
f
->
is_v¨¨g
 = 1;

778 : 
	`luaX_sy¡axîr‹
(
ls
, "<«me> o∏" 
	`LUA_QL
("...") "Éxpected");

780 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

782 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

783 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

784 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

785 
	}
}

788 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

790 
FuncSèã
 
√w_fs
;

791 
BlockC¡
 
bl
;

792 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

793 
√w_fs
.
f
->
löedeföed
 = 
löe
;

794 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

795 
	`check√xt
(
ls
, '(');

796 i‡(
ismëhod
) {

797 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

798 
	`adju°loˇlv¨s
(
ls
, 1);

800 
	`∑æi°
(
ls
);

801 
	`check√xt
(
ls
, ')');

802 
	`°©li°
(
ls
);

803 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

804 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

805 
	`code˛osuª
(
ls
, 
e
);

806 
	`˛o£_func
(
ls
);

807 
	}
}

810 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

812 
n
 = 1;

813 
	`ex¥
(
ls
, 
v
);

814 
	`ã°√xt
(
ls
, ',')) {

815 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

816 
	`ex¥
(
ls
, 
v
);

817 
n
++;

819  
n
;

820 
	}
}

823 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

824 
FuncSèã
 *
fs
 = 
ls
->fs;

825 
expdesc
 
¨gs
;

826 
ba£
, 
≈¨ams
;

827 
ls
->
t
.
tokí
) {

829 
	`luaX_√xt
(
ls
);

830 i‡(
ls
->
t
.
tokí
 == ')')

831 
¨gs
.
k
 = 
VVOID
;

833 
	`ex∂i°
(
ls
, &
¨gs
);

834 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

836 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

840 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

843 
TK_STRING
: {

844 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

845 
	`luaX_√xt
(
ls
);

849 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

852 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

853 
ba£
 = 
f
->
u
.
öfo
;

854 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

855 
≈¨ams
 = 
LUA_MULTRET
;

857 i‡(
¨gs
.
k
 !
VVOID
)

858 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

859 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

861 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

862 
	`luaK_fixlöe
(
fs
, 
löe
);

863 
fs
->
‰ìªg
 = 
ba£
+1;

865 
	}
}

877 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

879 
ls
->
t
.
tokí
) {

881 
löe
 = 
ls
->
löíumbî
;

882 
	`luaX_√xt
(
ls
);

883 
	`ex¥
(
ls
, 
v
);

884 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

885 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

888 
TK_NAME
: {

889 
	`sögÀv¨
(
ls
, 
v
);

893 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

896 
	}
}

899 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

902 
FuncSèã
 *
fs
 = 
ls
->fs;

903 
löe
 = 
ls
->
löíumbî
;

904 
	`¥im¨yexp
(
ls
, 
v
);

906 
ls
->
t
.
tokí
) {

908 
	`fõld£l
(
ls
, 
v
);

912 
expdesc
 
key
;

913 
	`luaK_exp2™yªgup
(
fs
, 
v
);

914 
	`yödex
(
ls
, &
key
);

915 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

919 
expdesc
 
key
;

920 
	`luaX_√xt
(
ls
);

921 
	`check«me
(
ls
, &
key
);

922 
	`luaK_£lf
(
fs
, 
v
, &
key
);

923 
	`funˇrgs
(
ls
, 
v
, 
löe
);

926 '(': 
TK_STRING
: '{': {

927 
	`luaK_exp2√xåeg
(
fs
, 
v
);

928 
	`funˇrgs
(
ls
, 
v
, 
löe
);

934 
	}
}

937 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

940 
ls
->
t
.
tokí
) {

941 
TK_NUMBER
: {

942 
	`öô_exp
(
v
, 
VKNUM
, 0);

943 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

946 
TK_STRING
: {

947 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

950 
TK_NIL
: {

951 
	`öô_exp
(
v
, 
VNIL
, 0);

954 
TK_TRUE
: {

955 
	`öô_exp
(
v
, 
VTRUE
, 0);

958 
TK_FALSE
: {

959 
	`öô_exp
(
v
, 
VFALSE
, 0);

962 
TK_DOTS
: {

963 
FuncSèã
 *
fs
 = 
ls
->fs;

964 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

965 "ˇ¬Ÿ u£ " 
	`LUA_QL
("...") " outsideá vararg function");

966 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

970 
	`c⁄°ru˘‹
(
ls
, 
v
);

973 
TK_FUNCTION
: {

974 
	`luaX_√xt
(
ls
);

975 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

979 
	`suffixedexp
(
ls
, 
v
);

983 
	`luaX_√xt
(
ls
);

984 
	}
}

987 
UnO¥
 
	$gëun›r
 (
›
) {

988 
›
) {

989 
TK_NOT
:  
OPR_NOT
;

990 '-':  
OPR_MINUS
;

991 '#':  
OPR_LEN
;

992 :  
OPR_NOUNOPR
;

994 
	}
}

997 
BöO¥
 
	$gëbö›r
 (
›
) {

998 
›
) {

999 '+':  
OPR_ADD
;

1000 '-':  
OPR_SUB
;

1001 '*':  
OPR_MUL
;

1002 '/':  
OPR_DIV
;

1003 '%':  
OPR_MOD
;

1004 '^':  
OPR_POW
;

1005 
TK_CONCAT
:  
OPR_CONCAT
;

1006 
TK_NE
:  
OPR_NE
;

1007 
TK_EQ
:  
OPR_EQ
;

1008 '<':  
OPR_LT
;

1009 
TK_LE
:  
OPR_LE
;

1010 '>':  
OPR_GT
;

1011 
TK_GE
:  
OPR_GE
;

1012 
TK_AND
:  
OPR_AND
;

1013 
TK_OR
:  
OPR_OR
;

1014 :  
OPR_NOBINOPR
;

1016 
	}
}

1020 
lu_byã
 
	mÀ·
;

1021 
lu_byã
 
	mright
;

1022 } 
	g¥i‹ôy
[] = {

1030 
	#UNARY_PRIORITY
 8

	)

1037 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1038 
BöO¥
 
›
;

1039 
UnO¥
 
u›
;

1040 
	`íãæevñ
(
ls
);

1041 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1042 i‡(
u›
 !
OPR_NOUNOPR
) {

1043 
löe
 = 
ls
->
löíumbî
;

1044 
	`luaX_√xt
(
ls
);

1045 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1046 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1048 
	`sim∂ìxp
(
ls
, 
v
);

1050 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1051 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1052 
expdesc
 
v2
;

1053 
BöO¥
 
√xt›
;

1054 
löe
 = 
ls
->
löíumbî
;

1055 
	`luaX_√xt
(
ls
);

1056 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1058 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1059 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1060 
›
 = 
√xt›
;

1062 
	`Àavñevñ
(
ls
);

1063  
›
;

1064 
	}
}

1067 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1068 
	`subex¥
(
ls
, 
v
, 0);

1069 
	}
}

1082 
	$block
 (
LexSèã
 *
ls
) {

1084 
FuncSèã
 *
fs
 = 
ls
->fs;

1085 
BlockC¡
 
bl
;

1086 
	`íãrblock
(
fs
, &
bl
, 0);

1087 
	`°©li°
(
ls
);

1088 
	`Àaveblock
(
fs
);

1089 
	}
}

1096 
	sLHS_assign
 {

1097 
LHS_assign
 *
	m¥ev
;

1098 
expdesc
 
	mv
;

1108 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1109 
FuncSèã
 *
fs
 = 
ls
->fs;

1110 
exåa
 = 
fs
->
‰ìªg
;

1111 
c⁄Êi˘
 = 0;

1112 ; 
lh
;Üh =Üh->
¥ev
) {

1113 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1115 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1116 
c⁄Êi˘
 = 1;

1117 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1118 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1121 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1122 
c⁄Êi˘
 = 1;

1123 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1127 i‡(
c⁄Êi˘
) {

1129 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1130 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1131 
	`luaK_ª£rvîegs
(
fs
, 1);

1133 
	}
}

1136 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1137 
expdesc
 
e
;

1138 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1139 i‡(
	`ã°√xt
(
ls
, ',')) {

1140 
LHS_assign
 
nv
;

1141 
nv
.
¥ev
 = 
lh
;

1142 
	`suffixedexp
(
ls
, &
nv
.
v
);

1143 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1144 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1145 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1147 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1150 
√xps
;

1151 
	`check√xt
(
ls
, '=');

1152 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1153 i‡(
√xps
 !
nv¨s
) {

1154 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1155 i‡(
√xps
 > 
nv¨s
)

1156 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

1159 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1160 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1164 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1165 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1166 
	}
}

1169 
	$c⁄d
 (
LexSèã
 *
ls
) {

1171 
expdesc
 
v
;

1172 
	`ex¥
(
ls
, &
v
);

1173 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1174 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1175  
v
.
f
;

1176 
	}
}

1179 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1180 
löe
 = 
ls
->
löíumbî
;

1181 
TSåög
 *
œbñ
;

1182 
g
;

1183 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1184 
œbñ
 = 
	`°r_check«me
(
ls
);

1186 
	`luaX_√xt
(
ls
);

1187 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1189 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1190 
	`födœbñ
(
ls
, 
g
);

1191 
	}
}

1195 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1196 
i
;

1197 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1198 i‡(
	`luaS_eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1199 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1200 "œbñ " 
LUA_QS
 "álready defined onÜine %d",

1201 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1202 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1205 
	}
}

1209 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1210 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1211 
	`°©emít
(
ls
);

1212 
	}
}

1215 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1217 
FuncSèã
 *
fs
 = 
ls
->fs;

1218 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1219 
l
;

1220 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1221 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1223 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
fs
->
pc
);

1224 
	`skùno›°©
(
ls
);

1225 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1227 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1229 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1230 
	}
}

1233 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1235 
FuncSèã
 *
fs
 = 
ls
->fs;

1236 
whûeöô
;

1237 
c⁄dexô
;

1238 
BlockC¡
 
bl
;

1239 
	`luaX_√xt
(
ls
);

1240 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1241 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1242 
	`íãrblock
(
fs
, &
bl
, 1);

1243 
	`check√xt
(
ls
, 
TK_DO
);

1244 
	`block
(
ls
);

1245 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1246 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1247 
	`Àaveblock
(
fs
);

1248 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1249 
	}
}

1252 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1254 
c⁄dexô
;

1255 
FuncSèã
 *
fs
 = 
ls
->fs;

1256 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1257 
BlockC¡
 
bl1
, 
bl2
;

1258 
	`íãrblock
(
fs
, &
bl1
, 1);

1259 
	`íãrblock
(
fs
, &
bl2
, 0);

1260 
	`luaX_√xt
(
ls
);

1261 
	`°©li°
(
ls
);

1262 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1263 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1264 i‡(
bl2
.
upvÆ
)

1265 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1266 
	`Àaveblock
(
fs
);

1267 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1268 
	`Àaveblock
(
fs
);

1269 
	}
}

1272 
	$exp1
 (
LexSèã
 *
ls
) {

1273 
expdesc
 
e
;

1274 
ªg
;

1275 
	`ex¥
(
ls
, &
e
);

1276 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1277 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1278 
ªg
 = 
e
.
u
.
öfo
;

1279  
ªg
;

1280 
	}
}

1283 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1285 
BlockC¡
 
bl
;

1286 
FuncSèã
 *
fs
 = 
ls
->fs;

1287 
¥ï
, 
ídf‹
;

1288 
	`adju°loˇlv¨s
(
ls
, 3);

1289 
	`check√xt
(
ls
, 
TK_DO
);

1290 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1291 
	`íãrblock
(
fs
, &
bl
, 0);

1292 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1293 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1294 
	`block
(
ls
);

1295 
	`Àaveblock
(
fs
);

1296 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1297 i‡(
i¢um
)

1298 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1300 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1301 
	`luaK_fixlöe
(
fs
, 
löe
);

1302 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1304 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1305 
	`luaK_fixlöe
(
fs
, 
löe
);

1306 
	}
}

1309 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1311 
FuncSèã
 *
fs
 = 
ls
->fs;

1312 
ba£
 = 
fs
->
‰ìªg
;

1313 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1314 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1315 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1316 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1317 
	`check√xt
(
ls
, '=');

1318 
	`exp1
(
ls
);

1319 
	`check√xt
(
ls
, ',');

1320 
	`exp1
(
ls
);

1321 i‡(
	`ã°√xt
(
ls
, ','))

1322 
	`exp1
(
ls
);

1324 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_numbîK
(fs, 1));

1325 
	`luaK_ª£rvîegs
(
fs
, 1);

1327 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1328 
	}
}

1331 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1333 
FuncSèã
 *
fs
 = 
ls
->fs;

1334 
expdesc
 
e
;

1335 
nv¨s
 = 4;

1336 
löe
;

1337 
ba£
 = 
fs
->
‰ìªg
;

1339 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1340 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1341 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1343 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1344 
	`ã°√xt
(
ls
, ',')) {

1345 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1346 
nv¨s
++;

1348 
	`check√xt
(
ls
, 
TK_IN
);

1349 
löe
 = 
ls
->
löíumbî
;

1350 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1351 
	`luaK_check°ack
(
fs
, 3);

1352 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1353 
	}
}

1356 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1358 
FuncSèã
 *
fs
 = 
ls
->fs;

1359 
TSåög
 *
v¨«me
;

1360 
BlockC¡
 
bl
;

1361 
	`íãrblock
(
fs
, &
bl
, 1);

1362 
	`luaX_√xt
(
ls
);

1363 
v¨«me
 = 
	`°r_check«me
(
ls
);

1364 
ls
->
t
.
tokí
) {

1365 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1366 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1367 : 
	`luaX_sy¡axîr‹
(
ls
, 
	`LUA_QL
("=") " or " LUA_QL("in") "Éxpected");

1369 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1370 
	`Àaveblock
(
fs
);

1371 
	}
}

1374 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1376 
BlockC¡
 
bl
;

1377 
FuncSèã
 *
fs
 = 
ls
->fs;

1378 
expdesc
 
v
;

1379 
jf
;

1380 
	`luaX_√xt
(
ls
);

1381 
	`ex¥
(
ls
, &
v
);

1382 
	`check√xt
(
ls
, 
TK_THEN
);

1383 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1384 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1385 
	`íãrblock
(
fs
, &
bl
, 0);

1386 
	`gŸo°©
(
ls
, 
v
.
t
);

1387 
	`skùno›°©
(
ls
);

1388 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1389 
	`Àaveblock
(
fs
);

1393 
jf
 = 
	`luaK_jump
(
fs
);

1396 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1397 
	`íãrblock
(
fs
, &
bl
, 0);

1398 
jf
 = 
v
.
f
;

1400 
	`°©li°
(
ls
);

1401 
	`Àaveblock
(
fs
);

1402 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1403 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1404 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1405 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1406 
	}
}

1409 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1411 
FuncSèã
 *
fs
 = 
ls
->fs;

1412 
esˇ≥li°
 = 
NO_JUMP
;

1413 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1414 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1415 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1416 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1417 
	`block
(
ls
);

1418 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1419 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1420 
	}
}

1423 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1424 
expdesc
 
b
;

1425 
FuncSèã
 *
fs
 = 
ls
->fs;

1426 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1427 
	`adju°loˇlv¨s
(
ls
, 1);

1428 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1430 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1431 
	}
}

1434 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1436 
nv¨s
 = 0;

1437 
√xps
;

1438 
expdesc
 
e
;

1440 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1441 
nv¨s
++;

1442 } 
	`ã°√xt
(
ls
, ','));

1443 i‡(
	`ã°√xt
(
ls
, '='))

1444 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1446 
e
.
k
 = 
VVOID
;

1447 
√xps
 = 0;

1449 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1450 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1451 
	}
}

1454 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1456 
ismëhod
 = 0;

1457 
	`sögÀv¨
(
ls
, 
v
);

1458 
ls
->
t
.
tokí
 == '.')

1459 
	`fõld£l
(
ls
, 
v
);

1460 i‡(
ls
->
t
.
tokí
 == ':') {

1461 
ismëhod
 = 1;

1462 
	`fõld£l
(
ls
, 
v
);

1464  
ismëhod
;

1465 
	}
}

1468 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1470 
ismëhod
;

1471 
expdesc
 
v
, 
b
;

1472 
	`luaX_√xt
(
ls
);

1473 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1474 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1475 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1476 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1477 
	}
}

1480 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1482 
FuncSèã
 *
fs
 = 
ls
->fs;

1483 
LHS_assign
 
v
;

1484 
	`suffixedexp
(
ls
, &
v
.v);

1485 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1486 
v
.
¥ev
 = 
NULL
;

1487 
	`assignmít
(
ls
, &
v
, 1);

1490 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1491 
	`SETARG_C
(
	`gëcode
(
fs
, &
v
.v), 1);

1493 
	}
}

1496 
	$ªt°©
 (
LexSèã
 *
ls
) {

1498 
FuncSèã
 *
fs
 = 
ls
->fs;

1499 
expdesc
 
e
;

1500 
fú°
, 
ƒë
;

1501 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1502 
fú°
 = 
ƒë
 = 0;

1504 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1505 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1506 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1507 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1508 
	`SET_OPCODE
(
	`gëcode
(
fs
,&
e
), 
OP_TAILCALL
);

1509 
	`lua_as£π
(
	`GETARG_A
(
	`gëcode
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1511 
fú°
 = 
fs
->
«˘v¨
;

1512 
ƒë
 = 
LUA_MULTRET
;

1515 i‡(
ƒë
 == 1)

1516 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1518 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1519 
fú°
 = 
fs
->
«˘v¨
;

1520 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1524 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1525 
	`ã°√xt
(
ls
, ';');

1526 
	}
}

1529 
	$°©emít
 (
LexSèã
 *
ls
) {

1530 
löe
 = 
ls
->
löíumbî
;

1531 
	`íãæevñ
(
ls
);

1532 
ls
->
t
.
tokí
) {

1534 
	`luaX_√xt
(
ls
);

1537 
TK_IF
: {

1538 
	`if°©
(
ls
, 
löe
);

1541 
TK_WHILE
: {

1542 
	`whûe°©
(
ls
, 
löe
);

1545 
TK_DO
: {

1546 
	`luaX_√xt
(
ls
);

1547 
	`block
(
ls
);

1548 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1551 
TK_FOR
: {

1552 
	`f‹°©
(
ls
, 
löe
);

1555 
TK_REPEAT
: {

1556 
	`ª≥©°©
(
ls
, 
löe
);

1559 
TK_FUNCTION
: {

1560 
	`func°©
(
ls
, 
löe
);

1563 
TK_LOCAL
: {

1564 
	`luaX_√xt
(
ls
);

1565 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1566 
	`loˇlfunc
(
ls
);

1568 
	`loˇl°©
(
ls
);

1571 
TK_DBCOLON
: {

1572 
	`luaX_√xt
(
ls
);

1573 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1576 
TK_RETURN
: {

1577 
	`luaX_√xt
(
ls
);

1578 
	`ªt°©
(
ls
);

1581 
TK_BREAK
:

1582 
TK_GOTO
: {

1583 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1587 
	`ex¥°©
(
ls
);

1591 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1592 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1593 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1594 
	`Àavñevñ
(
ls
);

1595 
	}
}

1604 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1605 
BlockC¡
 
bl
;

1606 
expdesc
 
v
;

1607 
	`›í_func
(
ls
, 
fs
, &
bl
);

1608 
fs
->
f
->
is_v¨¨g
 = 1;

1609 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1610 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1611 
	`luaX_√xt
(
ls
);

1612 
	`°©li°
(
ls
);

1613 
	`check
(
ls
, 
TK_EOS
);

1614 
	`˛o£_func
(
ls
);

1615 
	}
}

1618 
Closuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1619 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1620 
LexSèã
 
Àx°©e
;

1621 
FuncSèã
 
func°©e
;

1622 
Closuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1624 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1625 
	`ö¸_t›
(
L
);

1626 
func°©e
.
f
 = 
˛
->
l
.
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1627 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1628 
Àx°©e
.
buff
 = buff;

1629 
Àx°©e
.
dyd
 = dyd;

1630 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1631 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1632 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1633 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1635 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1636  
˛
;

1637 
	}
}

	@lstate.c

11 
	#l°©e_c


	)

12 
	#LUA_CORE


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/lua.h
"

16 
	~"lua/œpi.h
"

17 
	~"lua/ldebug.h
"

18 
	~"lua/ldo.h
"

19 
	~"lua/lfunc.h
"

20 
	~"lua/lgc.h
"

21 
	~"lua/Œex.h
"

22 
	~"lua/lmem.h
"

23 
	~"lua/l°©e.h
"

24 
	~"lua/l°rög.h
"

25 
	~"lua/…abÀ.h
"

26 
	~"lua/…m.h
"

29 #i‡!
deföed
(
LUAI_GCPAUSE
)

30 
	#LUAI_GCPAUSE
 200

	)

33 #i‡!
deföed
(
LUAI_GCMAJOR
)

34 
	#LUAI_GCMAJOR
 200

	)

37 #i‡!
deföed
(
LUAI_GCMUL
)

38 
	#LUAI_GCMUL
 200

	)

42 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

49 #i‡!
deföed
(
luai_make£ed
)

51 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

59 
	sLX
 {

60 #i‡
deföed
(
LUAI_EXTRASPACE
)

61 
	mbuff
[
LUAI_EXTRASPACE
];

63 
lua_Sèã
 
	ml
;

64 } 
	tLX
;

70 
	sLG
 {

71 
LX
 
	ml
;

72 
globÆ_Sèã
 
	mg
;

73 } 
	tLG
;

77 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

85 
	#addbuff
(
b
,
p
,
e
) \

86 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

87 
	`mem˝y
(
buff
 + 
p
, &
t
, —));Ö +—); }

	)

89 
	$make£ed
 (
lua_Sèã
 *
L
) {

90 
buff
[4 * (
size_t
)];

91 
h
 = 
	`luai_make£ed
();

92 
p
 = 0;

93 
	`addbuff
(
buff
, 
p
, 
L
);

94 
	`addbuff
(
buff
, 
p
, &
h
);

95 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

96 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

97 
	`lua_as£π
(
p
 =(
buff
));

98  
	`luaS_hash
(
buff
, 
p
, 
h
);

99 
	}
}

106 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

107 
g
->
tŸÆbyãs
 -(
debt
 - g->
GCdebt
);

108 
g
->
GCdebt
 = 
debt
;

109 
	}
}

112 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

113 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

114 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

115 
L
->
ci
->
√xt
 = ci;

116 
ci
->
¥evious
 = 
L
->ci;

117 
ci
->
√xt
 = 
NULL
;

118  
ci
;

119 
	}
}

122 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

123 
CÆlInfo
 *
ci
 = 
L
->ci;

124 
CÆlInfo
 *
√xt
 = 
ci
->next;

125 
ci
->
√xt
 = 
NULL
;

126 (
ci
 = 
√xt
Ë!
NULL
) {

127 
√xt
 = 
ci
->next;

128 
	`luaM_‰ì
(
L
, 
ci
);

130 
	}
}

133 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

134 
i
; 
CÆlInfo
 *
ci
;

136 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

137 
	`¥ötk
("\n°ack-öô | sèckÇewve˘‹ cÆÀd: = %p", 
L1
->
°ack
);

138 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

139 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

140 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

141 
L1
->
t›
 = L1->
°ack
;

142 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

144 
ci
 = &
L1
->
ba£_ci
;

145 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

146 
ci
->
ˇŒ°©us
 = 0;

147 
ci
->
func
 = 
L1
->
t›
;

148 
	`£äûvÆue
(
L1
->
t›
++);

149 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

150 
L1
->
ci
 = ci;

151 
	}
}

154 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

155 i‡(
L
->
°ack
 =
NULL
)

157 
L
->
ci
 = &L->
ba£_ci
;

158 
	`luaE_‰ìCI
(
L
);

159 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

160 
	}
}

166 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

167 
TVÆue
 
mt
;

169 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

170 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

171 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

173 
	`£âhvÆue
(
L
, &
mt
, L);

174 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
mt
);

176 
	`£thvÆue
(
L
, &
mt
, 
	`luaH_√w
(L));

177 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
mt
);

178 
	}
}

184 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

185 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

186 
	`UNUSED
(
ud
);

187 
	`°ack_öô
(
L
, L);

188 
	`öô_ªgi°ry
(
L
, 
g
);

189 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

190 
	`luaT_öô
(
L
);

191 
	`luaX_öô
(
L
);

193 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

194 
	`luaS_fix
(
g
->
memîrmsg
);

195 
g
->
g¸u¬ög
 = 1;

196 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

197 
	`luai_u£r°©e›í
(
L
);

198 
	}
}

205 
	$¥eöô_°©e
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

206 
	`G
(
L
Ë
g
;

207 
L
->
°ack
 = 
NULL
;

208 
L
->
ci
 = 
NULL
;

209 
L
->
°acksize
 = 0;

210 
L
->
îr‹Jmp
 = 
NULL
;

211 
L
->
nCˇŒs
 = 0;

212 
L
->
hook
 = 
NULL
;

213 
L
->
hookmask
 = 0;

214 
L
->
ba£hookcou¡
 = 0;

215 
L
->
Ælowhook
 = 1;

216 
	`ª£thookcou¡
(
L
);

217 
L
->
›íupvÆ
 = 
NULL
;

218 
L
->
¬y
 = 1;

219 
L
->
°©us
 = 
LUA_OK
;

220 
L
->
îrfunc
 = 0;

221 
	}
}

224 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

225 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

226 
	`luaF_˛o£
(
L
, L->
°ack
);

227 
	`luaC_‰ìÆlobje˘s
(
L
);

228 i‡(
g
->
vîsi⁄
)

229 
	`luai_u£r°©e˛o£
(
L
);

230 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

231 
	`luaZ_‰ìbuf„r
(
L
, &
g
->
buff
);

232 
	`‰ì°ack
(
L
);

233 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

234 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

235 
	}
}

238 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

239 
lua_Sèã
 *
L1
;

240 
	`lua_lock
(
L
);

241 
	`luaC_checkGC
(
L
);

242 
L1
 = &
	`luaC_√wobj
(
L
, 
LUA_TTHREAD
, (
LX
), 
NULL
, 
	`off£tof
(LX, 
l
))->
th
;

243 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

244 
	`≠i_ö¸_t›
(
L
);

245 
	`¥eöô_°©e
(
L1
, 
	`G
(
L
));

246 
L1
->
hookmask
 = 
L
->hookmask;

247 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

248 
L1
->
hook
 = 
L
->hook;

249 
	`ª£thookcou¡
(
L1
);

250 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

251 
	`°ack_öô
(
L1
, 
L
);

252 
	`lua_u∆ock
(
L
);

253  
L1
;

254 
	}
}

257 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

258 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

259 
	`luaF_˛o£
(
L1
, L1->
°ack
);

260 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

261 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

262 
	`‰ì°ack
(
L1
);

263 
	`luaM_‰ì
(
L
, 
l
);

264 
	}
}

267 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

268 
i
;

269 
lua_Sèã
 *
L
;

270 
globÆ_Sèã
 *
g
;

271 
	`¥ötk
("\nlua_newstate.... ");

272 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

273 i‡(
l
 =
NULL
)  NULL;

274 
	`¥ötk
("\nlua_newstate | LG *l casted...");

275 
L
 = &
l
->l.l;

276 
g
 = &
l
->g;

277 
L
->
√xt
 = 
NULL
;

278 
L
->
â
 = 
LUA_TTHREAD
;

279 
	`¥ötk
("\n NOW BITMASK...");

280 
g
->
cuºítwhôe
 = 
	`bô2mask
(
WHITE0BIT
, 
FIXEDBIT
);

281 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

282 
g
->
gcköd
 = 
KGC_NORMAL
;

283 
	`¥eöô_°©e
(
L
, 
g
);

284 
	`¥ötk
("\n After PRE-INIT...");

285 
g
->
‰óŒoc
 = 
f
;

286 
g
->
ud
 = ud;

287 
g
->
maöthªad
 = 
L
;

288 
g
->
£ed
 = 
	`make£ed
(
L
);

289 
g
->
uvhód
.
u
.
l
.
¥ev
 = &g->uvhead;

290 
g
->
uvhód
.
u
.
l
.
√xt
 = &g->uvhead;

291 
g
->
g¸u¬ög
 = 0;

292 
g
->
GCe°im©e
 = 0;

293 
g
->
°π
.
size
 = 0;

294 
g
->
°π
.
nu£
 = 0;

295 
g
->
°π
.
hash
 = 
NULL
;

296 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

297 
	`luaZ_öôbuf„r
(
L
, &
g
->
buff
);

298 
	`¥ötk
("\n After INIT-BUFFER...");

299 
g
->
∑nic
 = 
NULL
;

300 
g
->
vîsi⁄
 = 
NULL
;

301 
g
->
gc°©e
 = 
GCS∑u£
;

302 
g
->
Ælgc
 = 
NULL
;

303 
g
->
föobj
 = 
NULL
;

304 
g
->
tobe‚z
 = 
NULL
;

305 
g
->
swìpgc
 = g->
swìpfö
 = 
NULL
;

306 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

307 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

308 
g
->
tŸÆbyãs
 = (
LG
);

309 
g
->
GCdebt
 = 0;

310 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

311 
g
->
gcmaj‹öc
 = 
LUAI_GCMAJOR
;

312 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

313 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

314 
	`¥ötk
("\n Now LUA F-OPEN");

315 
	`f_lua›í
(
L
, 
NULL
);

322 
	`¥ötk
("\n NowÑeturning.....");

323  
L
;

324 
	}
}

327 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

328 
L
 = 
	`G
(L)->
maöthªad
;

329 
	`lua_lock
(
L
);

330 
	`˛o£_°©e
(
L
);

331 
	}
}

	@lstring.c

10 
	#l°rög_c


	)

11 
	#LUA_CORE


	)

12 
	~<«utûus/libccom∑t.h
>

13 
	~"lua/lua.h
"

15 
	~"lua/lmem.h
"

16 
	~"lua/lobje˘.h
"

17 
	~"lua/l°©e.h
"

18 
	~"lua/l°rög.h
"

25 #i‡!
deföed
(
LUAI_HASHLIMIT
)

26 
	#LUAI_HASHLIMIT
 5

	)

33 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

34 
size_t
 
Àn
 = 
a
->
tsv
.len;

35 
	`lua_as£π
(
a
->
tsv
.
â
 =
LUA_TLNGSTR
 && 
b
->tsv.tt == LUA_TLNGSTR);

36  (
a
 =
b
) ||

37 ((
Àn
 =
b
->
tsv
.len) &&

38 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

39 
	}
}

45 
	$luaS_eq°r
 (
TSåög
 *
a
, TSåög *
b
) {

46  (
a
->
tsv
.
â
 =
b
->tsv.tt) &&

47 (
a
->
tsv
.
â
 =
LUA_TSHRSTR
 ? 
	`eqshr°r
◊, 
b
Ë: 
	`luaS_eq g°r
(a, b));

48 
	}
}

51 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

52 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

53 
size_t
 
l1
;

54 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

55 
l1
 = 
l
;Ü1 >
°ï
;Ü1 -= step)

56 
h
 = h ^ ((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l1
 - 1]));

57  
h
;

58 
	}
}

64 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

65 
i
;

66 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

68 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCSswìp°rög
));

69 i‡(
√wsize
 > 
tb
->
size
) {

70 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
GCObje˘
 *);

71 
i
 = 
tb
->
size
; i < 
√wsize
; i++Ëtb->
hash
[i] = 
NULL
;

74 
i
=0; i<
tb
->
size
; i++) {

75 
GCObje˘
 *
p
 = 
tb
->
hash
[
i
];

76 
tb
->
hash
[
i
] = 
NULL
;

77 
p
) {

78 
GCObje˘
 *
√xt
 = 
	`gch
(
p
)->next;

79 
h
 = 
	`lmod
(
	`gco2ts
(
p
)->
hash
, 
√wsize
);

80 
	`gch
(
p
)->
√xt
 = 
tb
->
hash
[
h
];

81 
tb
->
hash
[
h
] = 
p
;

82 
	`ª£tﬁdbô
(
p
);

83 
p
 = 
√xt
;

86 i‡(
√wsize
 < 
tb
->
size
) {

88 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

89 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
GCObje˘
 *);

91 
tb
->
size
 = 
√wsize
;

92 
	}
}

98 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
,

99 
èg
, 
h
, 
GCObje˘
 **
li°
) {

100 
TSåög
 *
ts
;

101 
size_t
 
tŸÆsize
;

102 
tŸÆsize
 = (
TSåög
Ë+ ((
l
 + 1) * ());

103 
ts
 = &
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
, 
li°
, 0)->ts;

104 
ts
->
tsv
.
Àn
 = 
l
;

105 
ts
->
tsv
.
hash
 = 
h
;

106 
ts
->
tsv
.
exåa
 = 0;

107 
	`mem˝y
(
ts
+1, 
°r
, 
l
*());

108 ((*)(
ts
+1))[
l
] = '\0';

109  
ts
;

110 
	}
}

116 
TSåög
 *
	$√wshr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
,

117 
h
) {

118 
GCObje˘
 **
li°
;

119 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

120 
TSåög
 *
s
;

121 i‡(
tb
->
nu£
 >
	`ˇ°
(
lu_öt32
,Åb->
size
Ë&&Åb->sizê<
MAX_INT
/2)

122 
	`luaS_ªsize
(
L
, 
tb
->
size
*2);

123 
li°
 = &
tb
->
hash
[
	`lmod
(
h
,Åb->
size
)];

124 
s
 = 
	`¸óã°robj
(
L
, 
°r
, 
l
, 
LUA_TSHRSTR
, 
h
, 
li°
);

125 
tb
->
nu£
++;

126  
s
;

127 
	}
}

133 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

134 
GCObje˘
 *
o
;

135 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

136 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

137 
o
 = 
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

138 
o
 !
NULL
;

139 
o
 = 
	`gch
(o)->
√xt
) {

140 
TSåög
 *
ts
 = 
	`øwgco2ts
(
o
);

141 i‡(
h
 =
ts
->
tsv
.
hash
 &&

142 
l
 =
ts
->
tsv
.
Àn
 &&

143 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

144 i‡(
	`isdód
(
	`G
(
L
), 
o
))

145 
	`ch™gewhôe
(
o
);

146  
ts
;

149  
	`√wshr°r
(
L
, 
°r
, 
l
, 
h
);

150 
	}
}

156 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

157 i‡(
l
 <
LUAI_MAXSHORTLEN
)

158  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

160 i‡(
l
 + 1 > (
MAX_SIZET
 - (
TSåög
))/())

161 
	`luaM_toobig
(
L
);

162  
	`¸óã°robj
(
L
, 
°r
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
, 
NULL
);

164 
	}
}

170 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

171  
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

172 
	}
}

175 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
, 
TabÀ
 *
e
) {

176 
Ud©a
 *
u
;

177 i‡(
s
 > 
MAX_SIZET
 - (
Ud©a
))

178 
	`luaM_toobig
(
L
);

179 
u
 = &
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, (
Ud©a
Ë+ 
s
, 
NULL
, 0)->u;

180 
u
->
uv
.
Àn
 = 
s
;

181 
u
->
uv
.
më©abÀ
 = 
NULL
;

182 
u
->
uv
.
ív
 = 
e
;

183  
u
;

184 
	}
}

	@lstrlib.c

14 
	#l°æib_c


	)

15 
	#LUA_LIB


	)

16 
	~<«utûus/libccom∑t.h
>

17 
	~"lua/lua.h
"

19 
	~"lua/œuxlib.h
"

20 
	~"lua/luÆib.h
"

27 #i‡!
deföed
(
LUA_MAXCAPTURES
)

28 
	#LUA_MAXCAPTURES
 32

	)

33 
	#uch¨
(
c
Ë(()(c))

	)

37 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

38 
size_t
 
l
;

39 
	`luaL_checkl°rög
(
L
, 1, &
l
);

40 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

42 
	}
}

46 
size_t
 
	$po§ñ©
 (
±rdiff_t
 
pos
, 
size_t
 
Àn
) {

47 i‡(
pos
 >0Ë (
size_t
)pos;

48 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

49  
Àn
 - ((
size_t
)-
pos
) + 1;

50 
	}
}

53 
	$°r_sub
 (
lua_Sèã
 *
L
) {

54 
size_t
 
l
;

55 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

56 
size_t
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

57 
size_t
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

58 i‡(
°¨t
 < 1) start = 1;

59 i‡(
íd
 > 
l
)Énd =Ü;

60 i‡(
°¨t
 <
íd
)

61 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, 
íd
 - start + 1);

62 
	`lua_pushlôîÆ
(
L
, "");

64 
	}
}

67 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

68 
size_t
 
l
, 
i
;

69 
luaL_Buf„r
 
b
;

70 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

71 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

72 
i
 = 0; i < 
l
; i++)

73 
p
[
i
] = 
s
[
l
 - i - 1];

74 
	`luaL_pushªsu…size
(&
b
, 
l
);

76 
	}
}

79 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

80 
size_t
 
l
;

81 
size_t
 
i
;

82 
luaL_Buf„r
 
b
;

83 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

84 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

85 
i
=0; i<
l
; i++)

86 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

87 
	`luaL_pushªsu…size
(&
b
, 
l
);

89 
	}
}

92 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

93 
size_t
 
l
;

94 
size_t
 
i
;

95 
luaL_Buf„r
 
b
;

96 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

97 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

98 
i
=0; i<
l
; i++)

99 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

100 
	`luaL_pushªsu…size
(&
b
, 
l
);

102 
	}
}

106 
	#MAXSIZE
 ((~(
size_t
)0Ë>> 1)

	)

108 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

109 
size_t
 
l
, 
l£p
;

110 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

111 
n
 = 
	`luaL_checköt
(
L
, 2);

112 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

113 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

114 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞>
MAXSIZE
 / 
n
)

115  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

117 
size_t
 
tŸÆÀn
 = 
n
 * 
l
 + (¿- 1Ë* 
l£p
;

118 
luaL_Buf„r
 
b
;

119 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

120 
n
-- > 1) {

121 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

122 i‡(
l£p
 > 0) {

123 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());Ö +=Üsep;

126 
	`mem˝y
(
p
, 
s
, 
l
 * ());

127 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

130 
	}
}

133 
	$°r_byã
 (
lua_Sèã
 *
L
) {

134 
size_t
 
l
;

135 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

136 
size_t
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

137 
size_t
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

138 
n
, 
i
;

139 i‡(
posi
 < 1)Öosi = 1;

140 i‡(
po£
 > 
l
)Öose =Ü;

141 i‡(
posi
 > 
po£
)  0;

142 
n
 = ()(
po£
 - 
posi
 + 1);

143 i‡(
posi
 + 
n
 <
po£
)

144  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

145 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

146 
i
=0; i<
n
; i++)

147 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

148  
n
;

149 
	}
}

152 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

153 
n
 = 
	`lua_gët›
(
L
);

154 
i
;

155 
luaL_Buf„r
 
b
;

156 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

157 
i
=1; i<=
n
; i++) {

158 
c
 = 
	`luaL_checköt
(
L
, 
i
);

159 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

160 
p
[
i
 - 1] = 
	`uch¨
(
c
);

162 
	`luaL_pushªsu…size
(&
b
, 
n
);

164 
	}
}

167 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° * 
b
, 
size_t
 
size
, * 
B
) {

168 ()
L
;

169 
	`luaL_addl°rög
((
luaL_Buf„r
*Ë
B
, (c⁄° *)
b
, 
size
);

171 
	}
}

174 
	$°r_dump
 (
lua_Sèã
 *
L
) {

175 
luaL_Buf„r
 
b
;

176 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

177 
	`lua_£â›
(
L
, 1);

178 
	`luaL_bufföô
(
L
,&
b
);

179 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
) != 0)

180  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

181 
	`luaL_pushªsu…
(&
b
);

183 
	}
}

194 
	#CAP_UNFINISHED
 (-1)

	)

195 
	#CAP_POSITION
 (-2)

	)

198 
	sM©chSèã
 {

199 
	mm©chdïth
;

200 c⁄° *
	m§c_öô
;

201 c⁄° *
	m§c_íd
;

202 c⁄° *
	mp_íd
;

203 
lua_Sèã
 *
	mL
;

204 
	mÀvñ
;

206 c⁄° *
	möô
;

207 
±rdiff_t
 
	mÀn
;

208 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

209 } 
	tM©chSèã
;

213 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

217 #i‡!
deföed
(
MAXCCALLS
)

218 
	#MAXCCALLS
 200

	)

222 
	#L_ESC
 '%'

	)

223 
	#SPECIALS
 "^$*+?.([%-"

	)

226 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

227 
l
 -= '1';

228 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

229  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

230  
l
;

231 
	}
}

234 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

235 
Àvñ
 = 
ms
->level;

236 
Àvñ
--;Üevel>=0;Üevel--)

237 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

238  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

239 
	}
}

242 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

243 *
p
++) {

244 
L_ESC
: {

245 i‡(
p
 =
ms
->
p_íd
)

246 
	`luaL_îr‹
(
ms
->
L
, "mÆf‹medÖ©ã∫ (íd†wôh " 
	`LUA_QL
("%%") ")");

247  
p
+1;

250 i‡(*
p
 == '^')Ö++;

252 i‡(
p
 =
ms
->
p_íd
)

253 
	`luaL_îr‹
(
ms
->
L
, "mÆf‹medÖ©ã∫ (missög " 
	`LUA_QL
("]") ")");

254 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

255 
p
++;

256 } *
p
 != ']');

257  
p
+1;

260  
p
;

263 
	}
}

266 
	$m©ch_˛ass
 (
c
, 
˛
) {

267 
ªs
;

268 
	`tﬁowî
(
˛
)) {

269 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

270 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

271 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

272 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

273 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

274 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

275 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

276 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

277 'w' : 
ªs
 = 
	`iß um
(
c
); ;

278 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

279 'z' : 
ªs
 = (
c
 == 0); ;

280 :  (
˛
 =
c
);

282  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

283 
	}
}

286 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

287 
sig
 = 1;

288 i‡(*(
p
+1) == '^') {

289 
sig
 = 0;

290 
p
++;

292 ++
p
 < 
ec
) {

293 i‡(*
p
 =
L_ESC
) {

294 
p
++;

295 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

296  
sig
;

298 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

299 
p
+=2;

300 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

301  
sig
;

303 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

305  !
sig
;

306 
	}
}

309 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

310 c⁄° *
ï
) {

311 i‡(
s
 >
ms
->
§c_íd
)

314 
c
 = 
	`uch¨
(*
s
);

315 *
p
) {

317 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

318 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

319 :  (
	`uch¨
(*
p
Ë=
c
);

322 
	}
}

325 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

326 c⁄° *
p
) {

327 i‡(
p
 >
ms
->
p_íd
 - 1)

328 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern "

329 "(missögárgumít†tÿ" 
	`LUA_QL
("%%b") ")");

330 i‡(*
s
 !*
p
Ë 
NULL
;

332 
b
 = *
p
;

333 
e
 = *(
p
+1);

334 
c⁄t
 = 1;

335 ++
s
 < 
ms
->
§c_íd
) {

336 i‡(*
s
 =
e
) {

337 i‡(--
c⁄t
 =0Ë 
s
+1;

339 i‡(*
s
 =
b
Ë
c⁄t
++;

342  
NULL
;

343 
	}
}

346 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

347 c⁄° *
p
, c⁄° *
ï
) {

348 
±rdiff_t
 
i
 = 0;

349 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

350 
i
++;

352 
i
>=0) {

353 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

354 i‡(
ªs
) Ñes;

355 
i
--;

357  
NULL
;

358 
	}
}

361 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

362 c⁄° *
p
, c⁄° *
ï
) {

364 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

365 i‡(
ªs
 !
NULL
)

366  
ªs
;

367 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

368 
s
++;

369  
NULL
;

371 
	}
}

374 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

375 c⁄° *
p
, 
wh©
) {

376 c⁄° *
ªs
;

377 
Àvñ
 = 
ms
->level;

378 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

379 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

380 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

381 
ms
->
Àvñ
 =Üevel+1;

382 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

383 
ms
->
Àvñ
--;

384  
ªs
;

385 
	}
}

388 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

389 c⁄° *
p
) {

390 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

391 c⁄° *
ªs
;

392 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

393 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

394 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

395  
ªs
;

396 
	}
}

399 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

400 
size_t
 
Àn
;

401 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

402 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

403 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

404 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

405  
s
+
Àn
;

406  
NULL
;

407 
	}
}

410 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

411 i‡(
ms
->
m©chdïth
-- == 0)

412 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

413 
öô
:

414 i‡(
p
 !
ms
->
p_íd
) {

415 *
p
) {

417 i‡(*(
p
 + 1) == ')')

418 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

420 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

424 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

428 i‡((
p
 + 1Ë!
ms
->
p_íd
)

429 
dÊt
;

430 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

433 
L_ESC
: {

434 *(
p
 + 1)) {

436 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

437 i‡(
s
 !
NULL
) {

438 
p
 +4; 
öô
;

443 c⁄° *
ï
; 
¥evious
;

444 
p
 += 2;

445 i‡(*
p
 != '[')

446 
	`luaL_îr‹
(
ms
->
L
, "missög " 
	`LUA_QL
("[") "áfter "

447 
	`LUA_QL
("%%f") " inÖattern");

448 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

449 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

450 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

451 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

452 
p
 = 
ï
; 
öô
;

454 
s
 = 
NULL
;

460 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

461 i‡(
s
 !
NULL
) {

462 
p
 +2; 
öô
;

466 : 
dÊt
;

470 : 
dÊt
: {

471 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

473 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

474 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

475 
p
 = 
ï
 + 1; 
öô
;

478 
s
 = 
NULL
;

481 *
ï
) {

483 c⁄° *
ªs
;

484 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

485 
s
 = 
ªs
;

487 
p
 = 
ï
 + 1; 
öô
;

492 
s
++;

495 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

498 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

501 
s
++; 
p
 = 
ï
; 
öô
;

508 
ms
->
m©chdïth
++;

509  
s
;

510 
	}
}

514 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

515 c⁄° *
s2
, 
size_t
 
l2
) {

516 i‡(
l2
 =0Ë 
s1
;

517 i‡(
l2
 > 
l1
Ë 
NULL
;

519 c⁄° *
öô
;

520 
l2
--;

521 
l1
 =Ü1-
l2
;

522 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

523 
öô
++;

524 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

525  
öô
-1;

527 
l1
 -
öô
-
s1
;

528 
s1
 = 
öô
;

531  
NULL
;

533 
	}
}

536 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

537 c⁄° *
e
) {

538 i‡(
i
 >
ms
->
Àvñ
) {

539 i‡(
i
 == 0)

540 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

542 
	`luaL_îr‹
(
ms
->
L
, "invalid capture index");

545 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

546 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

547 i‡(
l
 =
CAP_POSITION
)

548 
	`lua_pushöãgî
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
 + 1);

550 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

552 
	}
}

555 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

556 
i
;

557 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

558 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

559 
i
 = 0; i < 
∆evñs
; i++)

560 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

561  
∆evñs
;

562 
	}
}

566 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

567 
size_t
 
u±o
 = 0;

569 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

571 
u±o
 +
	`°æí
(
p
 + upto) + 1;

572 } 
u±o
 <
l
);

574 
	}
}

577 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

578 
size_t
 
ls
, 
Õ
;

579 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

580 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

581 
size_t
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

582 i‡(
öô
 < 1) init = 1;

583 i‡(
öô
 > 
ls
 + 1) {

584 
	`lua_pushnû
(
L
);

588 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

590 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - inô + 1, 
p
, 
Õ
);

591 i‡(
s2
) {

592 
	`lua_pushöãgî
(
L
, 
s2
 - 
s
 + 1);

593 
	`lua_pushöãgî
(
L
, 
s2
 - 
s
 + 
Õ
);

598 
M©chSèã
 
ms
;

599 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

600 
™ch‹
 = (*
p
 == '^');

601 i‡(
™ch‹
) {

602 
p
++; 
Õ
--;

604 
ms
.
L
 = L;

605 
ms
.
m©chdïth
 = 
MAXCCALLS
;

606 
ms
.
§c_öô
 = 
s
;

607 
ms
.
§c_íd
 = 
s
 + 
ls
;

608 
ms
.
p_íd
 = 
p
 + 
Õ
;

610 c⁄° *
ªs
;

611 
ms
.
Àvñ
 = 0;

612 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

613 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

614 i‡(
föd
) {

615 
	`lua_pushöãgî
(
L
, 
s1
 - 
s
 + 1);

616 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

617  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

620  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

622 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

624 
	`lua_pushnû
(
L
);

626 
	}
}

629 
	$°r_föd
 (
lua_Sèã
 *
L
) {

630  
	`°r_föd_aux
(
L
, 1);

631 
	}
}

634 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

635  
	`°r_föd_aux
(
L
, 0);

636 
	}
}

639 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

640 
M©chSèã
 
ms
;

641 
size_t
 
ls
, 
Õ
;

642 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
	`lua_upvÆueödex
(1), &
ls
);

643 c⁄° *
p
 = 
	`lua_tﬁ°rög
(
L
, 
	`lua_upvÆueödex
(2), &
Õ
);

644 c⁄° *
§c
;

645 
ms
.
L
 = L;

646 
ms
.
m©chdïth
 = 
MAXCCALLS
;

647 
ms
.
§c_öô
 = 
s
;

648 
ms
.
§c_íd
 = 
s
+
ls
;

649 
ms
.
p_íd
 = 
p
 + 
Õ
;

650 
§c
 = 
s
 + (
size_t
)
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(3));

651 
§c
 <
ms
.
§c_íd
;

652 
§c
++) {

653 c⁄° *
e
;

654 
ms
.
Àvñ
 = 0;

655 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

656 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
) {

657 
lua_I¡egî
 
√w°¨t
 = 
e
-
s
;

658 i‡(
e
 =
§c
Ë
√w°¨t
++;

659 
	`lua_pushöãgî
(
L
, 
√w°¨t
);

660 
	`lua_ª∂a˚
(
L
, 
	`lua_upvÆueödex
(3));

661  
	`push_ˇ±uªs
(&
ms
, 
§c
, 
e
);

665 
	}
}

668 
	$gm©ch
 (
lua_Sèã
 *
L
) {

669 
	`luaL_check°rög
(
L
, 1);

670 
	`luaL_check°rög
(
L
, 2);

671 
	`lua_£â›
(
L
, 2);

672 
	`lua_pushöãgî
(
L
, 0);

673 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

675 
	}
}

678 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

679 c⁄° *
e
) {

680 
size_t
 
l
, 
i
;

681 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
ms
->
L
, 3, &
l
);

682 
i
 = 0; i < 
l
; i++) {

683 i‡(
√ws
[
i
] !
L_ESC
)

684 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

686 
i
++;

687 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

688 i‡(
√ws
[
i
] !
L_ESC
)

689 
	`luaL_îr‹
(
ms
->
L
, "övÆid u£ o‡" 
	`LUA_QL
("%c")

690 " i¿ª∂a˚míà°rög", 
L_ESC
);

691 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

693 i‡(
√ws
[
i
] == '0')

694 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

696 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

697 
	`luaL_addvÆue
(
b
);

701 
	}
}

704 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

705 c⁄° *
e
, 
å
) {

706 
lua_Sèã
 *
L
 = 
ms
->L;

707 
å
) {

708 
LUA_TFUNCTION
: {

709 
n
;

710 
	`lua_pushvÆue
(
L
, 3);

711 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

712 
	`lua_ˇŒ
(
L
, 
n
, 1);

715 
LUA_TTABLE
: {

716 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

717 
	`lua_gëèbÀ
(
L
, 3);

721 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

725 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

726 
	`lua_p›
(
L
, 1);

727 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

729 i‡(!
	`lua_is°rög
(
L
, -1))

730 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

731 
	`luaL_addvÆue
(
b
);

732 
	}
}

735 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

736 
size_t
 
§˛
, 
Õ
;

737 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

738 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

739 
å
 = 
	`lua_ty≥
(
L
, 3);

740 
size_t
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
+1);

741 
™ch‹
 = (*
p
 == '^');

742 
size_t
 
n
 = 0;

743 
M©chSèã
 
ms
;

744 
luaL_Buf„r
 
b
;

745 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

746 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

748 
	`luaL_bufföô
(
L
, &
b
);

749 i‡(
™ch‹
) {

750 
p
++; 
Õ
--;

752 
ms
.
L
 = L;

753 
ms
.
m©chdïth
 = 
MAXCCALLS
;

754 
ms
.
§c_öô
 = 
§c
;

755 
ms
.
§c_íd
 = 
§c
+
§˛
;

756 
ms
.
p_íd
 = 
p
 + 
Õ
;

757 
n
 < 
max_s
) {

758 c⁄° *
e
;

759 
ms
.
Àvñ
 = 0;

760 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

761 
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
);

762 i‡(
e
) {

763 
n
++;

764 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

766 i‡(
e
 &&É>
§c
)

767 
§c
 = 
e
;

768 i‡(
§c
 < 
ms
.
§c_íd
)

769 
	`luaL_addch¨
(&
b
, *
§c
++);

771 i‡(
™ch‹
) ;

773 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

774 
	`luaL_pushªsu…
(&
b
);

775 
	`lua_pushöãgî
(
L
, 
n
);

777 
	}
}

794 #i‡!
deföed
(
LUA_INTFRMLEN
)

795 #i‡
deföed
(
LUA_USE_LONGLONG
)

797 
	#LUA_INTFRMLEN
 "Œ"

	)

798 
	#LUA_INTFRM_T
 

	)

802 
	#LUA_INTFRMLEN
 "l"

	)

803 
	#LUA_INTFRM_T
 

	)

814 #i‡!
deföed
(
LUA_FLTFRMLEN
)

816 
	#LUA_FLTFRMLEN
 ""

	)

817 
	#LUA_FLTFRM_T
 

	)

823 
	#MAX_ITEM
 512

	)

825 
	#FLAGS
 "-+ #0"

	)

830 
	#MAX_FORMAT
 ((
FLAGS
Ë+ (
LUA_INTFRMLEN
Ë+ 10)

	)

833 
	$addquŸed
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

834 
size_t
 
l
;

835 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

836 
	`luaL_addch¨
(
b
, '"');

837 
l
--) {

838 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

839 
	`luaL_addch¨
(
b
, '\\');

840 
	`luaL_addch¨
(
b
, *
s
);

842 i‡(*
s
 ='\0' || 
	`is˙ål
(
	`uch¨
(*s))) {

843 
buff
[10];

844 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

845 
	`•rötf
(
buff
, "\\%d", ()
	`uch¨
(*
s
));

847 
	`•rötf
(
buff
, "\\%03d", ()
	`uch¨
(*
s
));

848 
	`luaL_add°rög
(
b
, 
buff
);

851 
	`luaL_addch¨
(
b
, *
s
);

852 
s
++;

854 
	`luaL_addch¨
(
b
, '"');

855 
	}
}

857 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

858 c⁄° *
p
 = 
°r‰mt
;

859 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

860 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

861 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

862 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

863 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

864 i‡(*
p
 == '.') {

865 
p
++;

866 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

867 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

869 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

870 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

871 *(
f‹m
++) = '%';

872 
	`mem˝y
(
f‹m
, 
°r‰mt
, (
p
 - strfrmt + 1) * ());

873 
f‹m
 +
p
 - 
°r‰mt
 + 1;

874 *
f‹m
 = '\0';

875  
p
;

876 
	}
}

882 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

883 
size_t
 
l
 = 
	`°æí
(
f‹m
);

884 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

885 
•ec
 = 
f‹m
[
l
 - 1];

886 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

887 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

888 
f‹m
[
l
 + 
lm
] = '\0';

889 
	}
}

892 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

893 
t›
 = 
	`lua_gët›
(
L
);

894 
¨g
 = 1;

895 
size_t
 
sÊ
;

896 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

897 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

898 
luaL_Buf„r
 
b
;

899 
	`luaL_bufföô
(
L
, &
b
);

900 
°r‰mt
 < 
°r‰mt_íd
) {

901 i‡(*
°r‰mt
 !
L_ESC
)

902 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

903 i‡(*++
°r‰mt
 =
L_ESC
)

904 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

906 
f‹m
[
MAX_FORMAT
];

907 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

908 
nb
 = 0;

909 i‡(++
¨g
 > 
t›
)

910 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

911 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

912 *
°r‰mt
++) {

914 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
	`luaL_checköt
(
L
, 
¨g
));

918 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

919 
LUA_INTFRM_T
 
ni
 = (LUA_INTFRM_T)
n
;

920 
lua_Numbî
 
diff
 = 
n
 - (lua_Numbî)
ni
;

921 
	`luaL_¨gcheck
(
L
, -1 < 
diff
 && dif‡< 1, 
¨g
,

923 
	`addÀnmod
(
f‹m
, 
LUA_INTFRMLEN
);

924 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
ni
);

928 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

929 
LUA_INTFRM_T
 
ni
 = (LUA_INTFRM_T)
n
;

930 
lua_Numbî
 
diff
 = 
n
 - (lua_Numbî)
ni
;

931 
	`luaL_¨gcheck
(
L
, -1 < 
diff
 && dif‡< 1, 
¨g
,

933 
	`addÀnmod
(
f‹m
, 
LUA_INTFRMLEN
);

934 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
ni
);

938 #i‡
	`deföed
(
LUA_USE_AFORMAT
)

942 
	`addÀnmod
(
f‹m
, 
LUA_FLTFRMLEN
);

943 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, (
LUA_FLTFRM_T
)
	`luaL_checknumbî
(
L
, 
¨g
));

947 
	`addquŸed
(
L
, &
b
, 
¨g
);

951 
size_t
 
l
;

952 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

953 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

956 
	`luaL_addvÆue
(&
b
);

960 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
s
);

961 
	`lua_p›
(
L
, 1);

966  
	`luaL_îr‹
(
L
, "övÆid o±i⁄ " 
	`LUA_QL
("%%%c") "Åo "

967 
	`LUA_QL
("f‹m©"), *(
°r‰mt
 - 1));

970 
	`luaL_addsize
(&
b
, 
nb
);

973 
	`luaL_pushªsu…
(&
b
);

975 
	}
}

980 c⁄° 
luaL_Reg
 
	g°æib
[] = {

981 {"byã", 
°r_byã
},

982 {"ch¨", 
°r_ch¨
},

983 {"dump", 
°r_dump
},

984 {"föd", 
°r_föd
},

985 {"f‹m©", 
°r_f‹m©
},

986 {"gm©ch", 
gm©ch
},

987 {"gsub", 
°r_gsub
},

988 {"Àn", 
°r_Àn
},

989 {"lowî", 
°r_lowî
},

990 {"m©ch", 
°r_m©ch
},

991 {"ªp", 
°r_ªp
},

992 {"ªvî£", 
°r_ªvî£
},

993 {"sub", 
°r_sub
},

994 {"uµî", 
°r_uµî
},

995 {
NULL
, NULL}

999 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1000 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1001 
	`lua_pushlôîÆ
(
L
, "");

1002 
	`lua_pushvÆue
(
L
, -2);

1003 
	`lua_£tmë©abÀ
(
L
, -2);

1004 
	`lua_p›
(
L
, 1);

1005 
	`lua_pushvÆue
(
L
, -2);

1006 
	`lua_£tfõld
(
L
, -2, "__index");

1007 
	`lua_p›
(
L
, 1);

1008 
	}
}

1014 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1015 
	`luaL_√wlib
(
L
, 
°æib
);

1016 
	`¸óãmë©abÀ
(
L
);

1018 
	}
}

	@ltable.c

23 
	#…abÀ_c


	)

24 
	#LUA_CORE


	)

26 
	~<«utûus/libccom∑t.h
>

27 
	~"lua/lua.h
"

29 
	~"lua/ldebug.h
"

30 
	~"lua/ldo.h
"

31 
	~"lua/lgc.h
"

32 
	~"lua/lmem.h
"

33 
	~"lua/lobje˘.h
"

34 
	~"lua/l°©e.h
"

35 
	~"lua/l°rög.h
"

36 
	~"lua/…abÀ.h
"

37 
	~"lua/lvm.h
"

43 #i‡
LUAI_BITSINT
 >= 32

44 
	#MAXBITS
 30

	)

46 
	#MAXBITS
 (
LUAI_BITSINT
-2)

	)

49 
	#MAXASIZE
 (1 << 
MAXBITS
)

	)

52 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

54 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
tsv
.
hash
)

	)

55 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

62 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

65 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`I¡Poöt
’))

	)

68 
	#dummynode
 (&
dummynode_
)

	)

70 
	#isdummy
(
n
Ë(“Ë=
dummynode
)

	)

72 c⁄° 
Node
 
	gdummynode_
 = {

73 {
NILCONSTANT
},

74 {{
NILCONSTANT
, 
NULL
}}

81 
Node
 *
	$hashnum
 (c⁄° 
TabÀ
 *
t
, 
lua_Numbî
 
n
) {

82 
i
;

83 
	`luai_hashnum
(
i
, 
n
);

84 i‡(
i
 < 0) {

85 i‡(
	`ˇ°
(, 
i
) == 0u - i)

86 
i
 = 0;

87 
i
 = -i;

89  
	`hashmod
(
t
, 
i
);

90 
	}
}

98 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

99 
	`ây≥
(
key
)) {

100 
LUA_TNUMBER
:

101  
	`hashnum
(
t
, 
	`nvÆue
(
key
));

102 
LUA_TLNGSTR
: {

103 
TSåög
 *
s
 = 
	`øwtsvÆue
(
key
);

104 i‡(
s
->
tsv
.
exåa
 == 0) {

105 
s
->
tsv
.
hash
 = 
	`luaS_hash
(
	`gë°r
(s), s->tsv.
Àn
, s->tsv.hash);

106 
s
->
tsv
.
exåa
 = 1;

108  
	`hash°r
(
t
, 
	`øwtsvÆue
(
key
));

110 
LUA_TSHRSTR
:

111  
	`hash°r
(
t
, 
	`øwtsvÆue
(
key
));

112 
LUA_TBOOLEAN
:

113  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

114 
LUA_TLIGHTUSERDATA
:

115  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

116 
LUA_TLCF
:

117  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

119  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

121 
	}
}

128 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

129 i‡(
	`âi¢umbî
(
key
)) {

130 
lua_Numbî
 
n
 = 
	`nvÆue
(
key
);

131 
k
;

132 
	`lua_numbî2öt
(
k
, 
n
);

133 i‡(
	`luai_numeq
(
	`ˇ°_num
(
k
), 
n
))

134  
k
;

137 
	}
}

145 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

146 
i
;

147 i‡(
	`âi¢û
(
key
))  -1;

148 
i
 = 
	`¨øyödex
(
key
);

149 i‡(0 < 
i
 && i <
t
->
sizóºay
)

150  
i
-1;

152 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

155 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

156 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

157 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

158 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

160  
i
 + 
t
->
sizóºay
;

162 
n
 = 
	`g√xt
(n);

163 i‡(
n
 =
NULL
)

164 
	`luaG_ru√º‹
(
L
, "övÆid keyÅÿ" 
	`LUA_QL
("next"));

167 
	}
}

170 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

171 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

172 
i
++; i < 
t
->
sizóºay
; i++) {

173 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

174 
	`£ävÆue
(
key
, 
	`ˇ°_num
(
i
+1));

175 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

179 
i
 -
t
->
sizóºay
; i < 
	`sizíode
(t); i++) {

180 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

181 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

182 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

187 
	}
}

197 
	$compuãsizes
 (
nums
[], *
«ºay
) {

198 
i
;

199 
twŸoi
;

200 
a
 = 0;

201 
«
 = 0;

202 
n
 = 0;

203 
i
 = 0, 
twŸoi
 = 1;ÅwŸoi/2 < *
«ºay
; i++,Åwotoi *= 2) {

204 i‡(
nums
[
i
] > 0) {

205 
a
 +
nums
[
i
];

206 i‡(
a
 > 
twŸoi
/2) {

207 
n
 = 
twŸoi
;

208 
«
 = 
a
;

211 i‡(
a
 =*
«ºay
) ;

213 *
«ºay
 = 
n
;

214 
	`lua_as£π
(*
«ºay
/2 <
«
 &&Ça <= *narray);

215  
«
;

216 
	}
}

219 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

220 
k
 = 
	`¨øyödex
(
key
);

221 i‡(0 < 
k
 && k <
MAXASIZE
) {

222 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

227 
	}
}

230 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

231 
lg
;

232 
âlg
;

233 
au£
 = 0;

234 
i
 = 1;

235 
lg
=0, 
âlg
=1;Üg<=
MAXBITS
;Üg++,Åtlg*=2) {

236 
lc
 = 0;

237 
lim
 = 
âlg
;

238 i‡(
lim
 > 
t
->
sizóºay
) {

239 
lim
 = 
t
->
sizóºay
;

240 i‡(
i
 > 
lim
)

244 ; 
i
 <
lim
; i++) {

245 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

246 
lc
++;

248 
nums
[
lg
] +
lc
;

249 
au£
 +
lc
;

251  
au£
;

252 
	}
}

255 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
, *
≤asize
) {

256 
tŸÆu£
 = 0;

257 
au£
 = 0;

258 
i
 = 
	`sizíode
(
t
);

259 
i
--) {

260 
Node
 *
n
 = &
t
->
node
[
i
];

261 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

262 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

263 
tŸÆu£
++;

266 *
≤asize
 +
au£
;

267  
tŸÆu£
;

268 
	}
}

271 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

272 
i
;

273 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

274 
i
=
t
->
sizóºay
; i<
size
; i++)

275 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

276 
t
->
sizóºay
 = 
size
;

277 
	}
}

280 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

281 
lsize
;

282 i‡(
size
 == 0) {

283 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

284 
lsize
 = 0;

287 
i
;

288 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

289 i‡(
lsize
 > 
MAXBITS
)

290 
	`luaG_ru√º‹
(
L
, "table overflow");

291 
size
 = 
	`twŸo
(
lsize
);

292 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

293 
i
=0; i<
size
; i++) {

294 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

295 
	`g√xt
(
n
Ë
NULL
;

296 
	`£äûvÆue
(
	`gkey
(
n
));

297 
	`£äûvÆue
(
	`gvÆ
(
n
));

300 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

301 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

302 
	}
}

305 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
, 
nhsize
) {

306 
i
;

307 
ﬁdasize
 = 
t
->
sizóºay
;

308 
ﬁdhsize
 = 
t
->
lsizíode
;

309 
Node
 *
nﬁd
 = 
t
->
node
;

310 i‡(
«size
 > 
ﬁdasize
)

311 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

313 
	`£äodeve˘‹
(
L
, 
t
, 
nhsize
);

314 i‡(
«size
 < 
ﬁdasize
) {

315 
t
->
sizóºay
 = 
«size
;

317 
i
=
«size
; i<
ﬁdasize
; i++) {

318 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

319 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

322 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

325 
i
 = 
	`twŸo
(
ﬁdhsize
) - 1; i >= 0; i--) {

326 
Node
 *
ﬁd
 = 
nﬁd
+
i
;

327 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

330 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

333 i‡(!
	`isdummy
(
nﬁd
))

334 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
	`twŸo
(
ﬁdhsize
)));

335 
	}
}

338 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

339 
nsize
 = 
	`isdummy
(
t
->
node
Ë? 0 : 
	`sizíode
(t);

340 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

341 
	}
}

344 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

345 
«size
, 
«
;

346 
nums
[
MAXBITS
+1];

347 
i
;

348 
tŸÆu£
;

349 
i
=0; i<=
MAXBITS
; i++Ë
nums
[i] = 0;

350 
«size
 = 
	`numu£¨øy
(
t
, 
nums
);

351 
tŸÆu£
 = 
«size
;

352 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«size
);

354 
«size
 +
	`cou¡öt
(
ek
, 
nums
);

355 
tŸÆu£
++;

357 
«
 = 
	`compuãsizes
(
nums
, &
«size
);

359 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
tŸÆu£
 - 
«
);

360 
	}
}

369 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

370 
TabÀ
 *
t
 = &
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (TabÀ), 
NULL
, 0)->
h
;

371 
t
->
më©abÀ
 = 
NULL
;

372 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

373 
t
->
¨øy
 = 
NULL
;

374 
t
->
sizóºay
 = 0;

375 
	`£äodeve˘‹
(
L
, 
t
, 0);

376  
t
;

377 
	}
}

380 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

381 i‡(!
	`isdummy
(
t
->
node
))

382 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

383 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

384 
	`luaM_‰ì
(
L
, 
t
);

385 
	}
}

388 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

389 
t
->
œ°‰ì
 >Å->
node
) {

390 
t
->
œ°‰ì
--;

391 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

392  
t
->
œ°‰ì
;

394  
NULL
;

395 
	}
}

406 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

407 
Node
 *
mp
;

408 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

409 i‡(
	`âi¢umbî
(
key
Ë&& 
	`luai_numi¢™
(
L
, 
	`nvÆue
(key)))

410 
	`luaG_ru√º‹
(
L
, "table index is NaN");

411 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

412 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(mp)) {

413 
Node
 *
Ÿhîn
;

414 
Node
 *
n
 = 
	`gë‰ìpos
(
t
);

415 i‡(
n
 =
NULL
) {

416 
	`ªhash
(
L
, 
t
, 
key
);

418  
	`luaH_£t
(
L
, 
t
, 
key
);

420 
	`lua_as£π
(!
	`isdummy
(
n
));

421 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

422 i‡(
Ÿhîn
 !
mp
) {

424 
	`g√xt
(
Ÿhîn
Ë!
mp
) othern = gnext(othern);

425 
	`g√xt
(
Ÿhîn
Ë
n
;

426 *
n
 = *
mp
;

427 
	`g√xt
(
mp
Ë
NULL
;

428 
	`£äûvÆue
(
	`gvÆ
(
mp
));

432 
	`g√xt
(
n
Ëg√xt(
mp
);

433 
	`g√xt
(
mp
Ë
n
;

434 
mp
 = 
n
;

437 
	`£tobj2t
(
L
, 
	`gkey
(
mp
), 
key
);

438 
	`luaC_b¨rõrback
(
L
, 
	`obj2gco
(
t
), 
key
);

439 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

440  
	`gvÆ
(
mp
);

441 
	}
}

447 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
key
) {

449 i‡(
	`ˇ°
(, 
key
-1Ë< ca°(, 
t
->
sizóºay
))

450  &
t
->
¨øy
[
key
-1];

452 
lua_Numbî
 
nk
 = 
	`ˇ°_num
(
key
);

453 
Node
 *
n
 = 
	`hashnum
(
t
, 
nk
);

455 i‡(
	`âi¢umbî
(
	`gkey
(
n
)Ë&& 
	`luai_numeq
(
	`nvÆue
(gkey“)), 
nk
))

456  
	`gvÆ
(
n
);

457 
n
 = 
	`g√xt
(n);

458 } 
n
);

459  
luaO_nûobje˘
;

461 
	}
}

467 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

468 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

469 
	`lua_as£π
(
key
->
tsv
.
â
 =
LUA_TSHRSTR
);

471 i‡(
	`âisshr°rög
(
	`gkey
(
n
)Ë&& 
	`eqshr°r
(
	`øwtsvÆue
(gkey“)), 
key
))

472  
	`gvÆ
(
n
);

473 
n
 = 
	`g√xt
(n);

474 } 
n
);

475  
luaO_nûobje˘
;

476 
	}
}

482 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

483 
	`ây≥
(
key
)) {

484 
LUA_TSHRSTR
:  
	`luaH_gë°r
(
t
, 
	`øwtsvÆue
(
key
));

485 
LUA_TNIL
:  
luaO_nûobje˘
;

486 
LUA_TNUMBER
: {

487 
k
;

488 
lua_Numbî
 
n
 = 
	`nvÆue
(
key
);

489 
	`lua_numbî2öt
(
k
, 
n
);

490 i‡(
	`luai_numeq
(
	`ˇ°_num
(
k
), 
n
))

491  
	`luaH_gëöt
(
t
, 
k
);

495 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

497 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

498  
	`gvÆ
(
n
);

499 
n
 = 
	`g√xt
(n);

500 } 
n
);

501  
luaO_nûobje˘
;

504 
	}
}

511 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

512 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

513 i‡(
p
 !
luaO_nûobje˘
)

514  
	`ˇ°
(
TVÆue
 *, 
p
);

515  
	`luaH_√wkey
(
L
, 
t
, 
key
);

516 
	}
}

519 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
key
, 
TVÆue
 *
vÆue
) {

520 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

521 
TVÆue
 *
˚Œ
;

522 i‡(
p
 !
luaO_nûobje˘
)

523 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

525 
TVÆue
 
k
;

526 
	`£ävÆue
(&
k
, 
	`ˇ°_num
(
key
));

527 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

529 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

530 
	}
}

533 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
j
) {

534 
i
 = 
j
;

535 
j
++;

537 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

538 
i
 = 
j
;

539 
j
 *= 2;

540 i‡(
j
 > 
	`ˇ°
(, 
MAX_INT
)) {

542 
i
 = 1;

543 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

544  
i
 - 1;

548 
j
 - 
i
 > 1) {

549 
m
 = (
i
+
j
)/2;

550 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

551 
i
 = 
m
;

553  
i
;

554 
	}
}

561 
	$luaH_gën
 (
TabÀ
 *
t
) {

562 
j
 = 
t
->
sizóºay
;

563 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

565 
i
 = 0;

566 
j
 - 
i
 > 1) {

567 
m
 = (
i
+
j
)/2;

568 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

569 
i
 = 
m
;

571  
i
;

574 i‡(
	`isdummy
(
t
->
node
))

575  
j
;

576  
	`unbound_£¨ch
(
t
, 
j
);

577 
	}
}

581 #i‡
deföed
(
LUA_DEBUG
)

583 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

584  
	`maöposôi⁄
(
t
, 
key
);

585 
	}
}

587 
	$luaH_isdummy
 (
Node
 *
n
Ë{  
	`isdummy
“); 
	}
}

	@ltablib.c

11 
	#…ablib_c


	)

12 
	#LUA_LIB


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/lua.h
"

16 
	~"lua/œuxlib.h
"

17 
	~"lua/luÆib.h
"

20 
	#aux_gën
(
L
,
n
Ë(
	`luaL_checkty≥
(L,Ç, 
LUA_TTABLE
), 
	`luaL_Àn
(L,Ç))

	)

24 #i‡
deföed
(
LUA_COMPAT_MAXN
)

25 
	$maxn
 (
lua_Sèã
 *
L
) {

26 
lua_Numbî
 
max
 = 0;

27 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

28 
	`lua_pushnû
(
L
);

29 
	`lua_√xt
(
L
, 1)) {

30 
	`lua_p›
(
L
, 1);

31 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

32 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

33 i‡(
v
 > 
max
) max = v;

36 
	`lua_pushnumbî
(
L
, 
max
);

38 
	}
}

42 
	$tö£π
 (
lua_Sèã
 *
L
) {

43 
e
 = 
	`aux_gën
(
L
, 1) + 1;

44 
pos
;

45 
	`lua_gët›
(
L
)) {

47 
pos
 = 
e
;

51 
i
;

52 
pos
 = 
	`luaL_checköt
(
L
, 2);

53 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

54 
i
 = 
e
; i > 
pos
; i--) {

55 
	`lua_øwgëi
(
L
, 1, 
i
-1);

56 
	`lua_øw£ti
(
L
, 1, 
i
);

61  
	`luaL_îr‹
(
L
, "wr⁄gÇumbî o‡¨gumít†tÿ" 
	`LUA_QL
("insert"));

64 
	`lua_øw£ti
(
L
, 1, 
pos
);

66 
	}
}

69 
	$åemove
 (
lua_Sèã
 *
L
) {

70 
size
 = 
	`aux_gën
(
L
, 1);

71 
pos
 = 
	`luaL_›töt
(
L
, 2, 
size
);

72 i‡(
pos
 !
size
)

73 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

74 
	`lua_øwgëi
(
L
, 1, 
pos
);

75  ; 
pos
 < 
size
;Öos++) {

76 
	`lua_øwgëi
(
L
, 1, 
pos
+1);

77 
	`lua_øw£ti
(
L
, 1, 
pos
);

79 
	`lua_pushnû
(
L
);

80 
	`lua_øw£ti
(
L
, 1, 
pos
);

82 
	}
}

85 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
i
) {

86 
	`lua_øwgëi
(
L
, 1, 
i
);

87 i‡(!
	`lua_is°rög
(
L
, -1))

88 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for "

89 
	`LUA_QL
("c⁄ˇt"), 
	`luaL_ty≥«me
(
L
, -1), 
i
);

90 
	`luaL_addvÆue
(
b
);

91 
	}
}

94 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

95 
luaL_Buf„r
 
b
;

96 
size_t
 
l£p
;

97 
i
, 
œ°
;

98 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

99 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

100 
i
 = 
	`luaL_›töt
(
L
, 3, 1);

101 
œ°
 = 
	`luaL_›t
(
L
, 
luaL_checköt
, 4, 
	`luaL_Àn
(L, 1));

102 
	`luaL_bufföô
(
L
, &
b
);

103 ; 
i
 < 
œ°
; i++) {

104 
	`addfõld
(
L
, &
b
, 
i
);

105 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

107 i‡(
i
 =
œ°
)

108 
	`addfõld
(
L
, &
b
, 
i
);

109 
	`luaL_pushªsu…
(&
b
);

111 
	}
}

120 
	$∑ck
 (
lua_Sèã
 *
L
) {

121 
n
 = 
	`lua_gët›
(
L
);

122 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

123 
	`lua_pushöãgî
(
L
, 
n
);

124 
	`lua_£tfõld
(
L
, -2, "n");

125 i‡(
n
 > 0) {

126 
i
;

127 
	`lua_pushvÆue
(
L
, 1);

128 
	`lua_øw£ti
(
L
, -2, 1);

129 
	`lua_ª∂a˚
(
L
, 1);

130 
i
 = 
n
; i >= 2; i--)

131 
	`lua_øw£ti
(
L
, 1, 
i
);

134 
	}
}

137 
	$u≈ack
 (
lua_Sèã
 *
L
) {

138 
i
, 
e
;

139 
n
;

140 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

141 
i
 = 
	`luaL_›töt
(
L
, 2, 1);

142 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköt
, 3, 
	`luaL_Àn
(L, 1));

143 i‡(
i
 > 
e
)  0;

144 
n
 = ()
e
 - ()
i
;

145 i‡(
n
 > (
INT_MAX
 - 10Ë|| !
	`lua_check°ack
(
L
, ++n))

146  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

147 
	`lua_øwgëi
(
L
, 1, 
i
);

148 
i
++ < 
e
)

149 
	`lua_øwgëi
(
L
, 1, 
i
);

150  
n
;

151 
	}
}

166 
	$£t2
 (
lua_Sèã
 *
L
, 
i
, 
j
) {

167 
	`lua_øw£ti
(
L
, 1, 
i
);

168 
	`lua_øw£ti
(
L
, 1, 
j
);

169 
	}
}

171 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

172 i‡(!
	`lua_i¢û
(
L
, 2)) {

173 
ªs
;

174 
	`lua_pushvÆue
(
L
, 2);

175 
	`lua_pushvÆue
(
L
, 
a
-1);

176 
	`lua_pushvÆue
(
L
, 
b
-2);

177 
	`lua_ˇŒ
(
L
, 2, 1);

178 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

179 
	`lua_p›
(
L
, 1);

180  
ªs
;

183  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

184 
	}
}

186 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
l
, 
u
) {

187 
l
 < 
u
) {

188 
i
, 
j
;

190 
	`lua_øwgëi
(
L
, 1, 
l
);

191 
	`lua_øwgëi
(
L
, 1, 
u
);

192 i‡(
	`s‹t_comp
(
L
, -1, -2))

193 
	`£t2
(
L
, 
l
, 
u
);

195 
	`lua_p›
(
L
, 2);

196 i‡(
u
-
l
 == 1) ;

197 
i
 = (
l
+
u
)/2;

198 
	`lua_øwgëi
(
L
, 1, 
i
);

199 
	`lua_øwgëi
(
L
, 1, 
l
);

200 i‡(
	`s‹t_comp
(
L
, -2, -1))

201 
	`£t2
(
L
, 
i
, 
l
);

203 
	`lua_p›
(
L
, 1);

204 
	`lua_øwgëi
(
L
, 1, 
u
);

205 i‡(
	`s‹t_comp
(
L
, -1, -2))

206 
	`£t2
(
L
, 
i
, 
u
);

208 
	`lua_p›
(
L
, 2);

210 i‡(
u
-
l
 == 2) ;

211 
	`lua_øwgëi
(
L
, 1, 
i
);

212 
	`lua_pushvÆue
(
L
, -1);

213 
	`lua_øwgëi
(
L
, 1, 
u
-1);

214 
	`£t2
(
L
, 
i
, 
u
-1);

216 
i
 = 
l
; 
j
 = 
u
-1;

219 
	`lua_øwgëi
(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

220 i‡(
i
>=
u
Ë
	`luaL_îr‹
(
L
, "invalid order function for sorting");

221 
	`lua_p›
(
L
, 1);

224 
	`lua_øwgëi
(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

225 i‡(
j
<=
l
Ë
	`luaL_îr‹
(
L
, "invalid order function for sorting");

226 
	`lua_p›
(
L
, 1);

228 i‡(
j
<
i
) {

229 
	`lua_p›
(
L
, 3);

232 
	`£t2
(
L
, 
i
, 
j
);

234 
	`lua_øwgëi
(
L
, 1, 
u
-1);

235 
	`lua_øwgëi
(
L
, 1, 
i
);

236 
	`£t2
(
L
, 
u
-1, 
i
);

239 i‡(
i
-
l
 < 
u
-i) {

240 
j
=
l
; 
i
=i-1;Ü=i+2;

243 
j
=
i
+1; i=
u
; u=j-2;

245 
	`auxs‹t
(
L
, 
j
, 
i
);

247 
	}
}

249 
	$s‹t
 (
lua_Sèã
 *
L
) {

250 
n
 = 
	`aux_gën
(
L
, 1);

251 
	`luaL_check°ack
(
L
, 40, "");

252 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

253 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

254 
	`lua_£â›
(
L
, 2);

255 
	`auxs‹t
(
L
, 1, 
n
);

257 
	}
}

262 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

263 {"c⁄ˇt", 
tc⁄ˇt
},

264 #i‡
deföed
(
LUA_COMPAT_MAXN
)

265 {"maxn", 
maxn
},

267 {"ö£π", 
tö£π
},

268 {"∑ck", 
∑ck
},

269 {"u≈ack", 
u≈ack
},

270 {"ªmove", 
åemove
},

271 {"s‹t", 
s‹t
},

272 {
NULL
, NULL}

276 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

277 
	`luaL_√wlib
(
L
, 
èb_funcs
);

278 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

280 
	`lua_gëfõld
(
L
, -1, "unpack");

281 
	`lua_£tglobÆ
(
L
, "unpack");

284 
	}
}

	@ltm.c

10 
	#…m_c


	)

11 
	#LUA_CORE


	)

12 
	~<«utûus/libccom∑t.h
>

13 
	~"lua/lua.h
"

15 
	~"lua/lobje˘.h
"

16 
	~"lua/l°©e.h
"

17 
	~"lua/l°rög.h
"

18 
	~"lua/…abÀ.h
"

19 
	~"lua/…m.h
"

22 c⁄° 
	gud©©y≥«me
[] = "userdata";

24 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

26 "nû", "boﬁón", 
ud©©y≥«me
, "number",

27 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

32 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

33 c⁄° *c⁄° 
luaT_evíäame
[] = {

40 
i
;

41 
i
=0; i<
TM_N
; i++) {

42 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

43 
	`luaS_fix
(
	`G
(
L
)->
tm«me
[
i
]);

45 
	}
}

52 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

53 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gë°r
(
evíts
, 
íame
);

54 
	`lua_as£π
(
evít
 <
TM_EQ
);

55 i‡(
	`âi¢û
(
tm
)) {

56 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

57  
NULL
;

59  
tm
;

60 
	}
}

63 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

64 
TabÀ
 *
mt
;

65 
	`ây≥nv
(
o
)) {

66 
LUA_TTABLE
:

67 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

69 
LUA_TUSERDATA
:

70 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

73 
mt
 = 
	`G
(
L
)->mt[
	`ây≥nv
(
o
)];

75  (
mt
 ? 
	`luaH_gë°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

76 
	}
}

	@lua.c

13 
	#lua_c


	)

14 
	~<«utûus/libccom∑t.h
>

15 
	~"lua/lua.h
"

17 
	~"lua/œuxlib.h
"

18 
	~"lua/luÆib.h
"

21 #i‡!
deföed
(
LUA_PROMPT
)

22 
	#LUA_PROMPT
 "> "

	)

23 
	#LUA_PROMPT2
 ">> "

	)

26 #i‡!
deföed
(
LUA_PROGNAME
)

27 
	#LUA_PROGNAME
 "lua"

	)

30 #i‡!
deföed
(
LUA_MAXINPUT
)

31 
	#LUA_MAXINPUT
 512

	)

34 #i‡!
deföed
(
LUA_INIT
)

35 
	#LUA_INIT
 "LUA_INIT"

	)

38 
	#LUA_INITVERSION
 \

39 
LUA_INIT
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

46 #i‡
deföed
(
LUA_USE_ISATTY
)

47 
	~<uni°d.h
>

48 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

49 #ñi‡
deföed
(
LUA_WIN
)

50 
	~<io.h
>

51 
	~<°dio.h
>

52 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

54 
	#lua_°dö_is_ây
(Ë1

	)

64 #i‡
deföed
(
LUA_USE_READLINE
)

66 
	~<°dio.h
>

67 
	~<ªadlöe/ªadlöe.h
>

68 
	~<ªadlöe/hi°‹y.h
>

69 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

70 
	#lua_ßvñöe
(
L
,
idx
) \

71 i‡(
	`lua_øwÀn
(
L
,
idx
) > 0) \

72 
	`add_hi°‹y
(
	`lua_to°rög
(
L
, 
idx
));

	)

73 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

75 #ñi‡!
deföed
(
lua_ªadlöe
)

77 
	#lua_ªadlöe
(
L
,
b
,
p
) \

78 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

79 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

80 
	#lua_ßvñöe
(
L
,
idx
Ë{ ()L; ()idx; }

	)

81 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

88 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

90 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

94 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

95 ()
¨
;

96 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

97 
	`luaL_îr‹
(
L
, "interrupted!");

98 
	}
}

101 
	$œ˘i⁄
 (
i
) {

102 
	`sig«l
(
i
, 
SIG_DFL
);

104 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

105 
	}
}

108 
	$¥öt_ußge
 (c⁄° *
bad›ti⁄
) {

109 
	`luai_wrôe°rögîr‹
("%s: ", 
¥og«me
);

110 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

111 
	`luai_wrôe°rögîr‹
("'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

113 
	`luai_wrôe°rögîr‹
("uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

114 
	`luai_wrôe°rögîr‹
(

117 " -ê°©Éxecuã såög " 
	`LUA_QL
("stat") "\n"

118 " -òÉ¡î i¡îa˘ivêmodêa·îÉxecutög " 
	`LUA_QL
("script") "\n"

119 " -»«mêÑequúêlibøry " 
	`LUA_QL
("name") "\n"

125 
¥og«me
);

126 
	}
}

129 
	$l_mesßge
 (c⁄° *
≤ame
, c⁄° *
msg
) {

130 i‡(
≤ame
Ë
	`luai_wrôe°rögîr‹
("%s: ",Öname);

131 
	`luai_wrôe°rögîr‹
("%s\n", 
msg
);

132 
	}
}

135 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

136 i‡(
°©us
 !
LUA_OK
 && !
	`lua_i¢û
(
L
, -1)) {

137 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

138 i‡(
msg
 =
NULL
) msg = "(error object isÇotá string)";

139 
	`l_mesßge
(
¥og«me
, 
msg
);

140 
	`lua_p›
(
L
, 1);

142 
	`lua_gc
(
L
, 
LUA_GCCOLLECT
, 0);

144  
°©us
;

145 
	}
}

149 
	$föÆªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

150 i‡(
°©us
 !
LUA_OK
) {

151 c⁄° *
msg
 = (
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
Ë? 
	`lua_to°rög
(L, -1)

152 : 
NULL
;

153 i‡(
msg
 =
NULL
) msg = "(error object isÇotá string)";

154 
	`l_mesßge
(
¥og«me
, 
msg
);

155 
	`lua_p›
(
L
, 1);

157 
	}
}

160 
	$åa˚back
 (
lua_Sèã
 *
L
) {

161 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

162 i‡(
msg
)

163 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

164 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

165 i‡(!
	`luaL_ˇŒmëa
(
L
, 1, "__tostring"))

166 
	`lua_pushlôîÆ
(
L
, "(noÉrror message)");

169 
	}
}

172 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

173 
°©us
;

174 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

175 
	`lua_pushcfun˘i⁄
(
L
, 
åa˚back
);

176 
	`lua_ö£π
(
L
, 
ba£
);

177 
globÆL
 = 
L
;

178 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

179 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

180 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

181 
	`lua_ªmove
(
L
, 
ba£
);

182  
°©us
;

183 
	}
}

186 
	$¥öt_vîsi⁄
 () {

187 
	`luai_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

188 
	`luai_wrôñöe
();

189 
	}
}

192 
	$gë¨gs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

193 
«rg
;

194 
i
;

195 
¨gc
 = 0;

196 
¨gv
[
¨gc
])árgc++;

197 
«rg
 = 
¨gc
 - (
n
 + 1);

198 
	`luaL_check°ack
(
L
, 
«rg
 + 3, "too manyárgumentsÅo script");

199 
i
=
n
+1; i < 
¨gc
; i++)

200 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

201 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
n
 + 1);

202 
i
=0; i < 
¨gc
; i++) {

203 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

204 
	`lua_øw£ti
(
L
, -2, 
i
 - 
n
);

206  
«rg
;

207 
	}
}

210 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

211 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
«me
);

212 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

213  
	`ªp‹t
(
L
, 
°©us
);

214 
	}
}

217 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

218 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), 
«me
);

219 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

220  
	`ªp‹t
(
L
, 
°©us
);

221 
	}
}

224 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

225 
°©us
;

226 
	`lua_gëglobÆ
(
L
, "require");

227 
	`lua_push°rög
(
L
, 
«me
);

228 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

229 i‡(
°©us
 =
LUA_OK
)

230 
	`lua_£tglobÆ
(
L
, 
«me
);

231  
	`ªp‹t
(
L
, 
°©us
);

232 
	}
}

235 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

236 c⁄° *
p
;

237 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

238 
p
 = 
	`lua_to°rög
(
L
, -1);

239 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

240  
p
;

241 
	}
}

244 
	#EOFMARK
 "<eof>"

	)

245 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

247 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

248 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

249 
size_t
 
lmsg
;

250 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

251 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

252 
	`lua_p›
(
L
, 1);

257 
	}
}

260 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

261 
buf„r
[
LUA_MAXINPUT
];

262 *
b
 = 
buf„r
;

263 
size_t
 
l
;

264 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

265 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

266 
	`lua_p›
(
L
, 1);

267 i‡(
ªad°©us
 == 0)

269 
l
 = 
	`°æí
(
b
);

270 i‡(
l
 > 0 && 
b
[l-1] == '\n')

271 
b
[
l
-1] = '\0';

272 i‡(
fú°löe
 && 
b
[0] == '=')

273 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
+1);

275 
	`lua_push°rög
(
L
, 
b
);

276 
	`lua_‰ìlöe
(
L
, 
b
);

278 
	}
}

281 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

282 
°©us
;

283 
	`lua_£â›
(
L
, 0);

284 i‡(!
	`pushlöe
(
L
, 1))

287 
size_t
 
l
;

288 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

289 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
l
, "=stdin");

290 i‡(!
	`öcom∂ëe
(
L
, 
°©us
)) ;

291 i‡(!
	`pushlöe
(
L
, 0))

293 
	`lua_pushlôîÆ
(
L
, "\n");

294 
	`lua_ö£π
(
L
, -2);

295 
	`lua_c⁄ˇt
(
L
, 3);

297 
	`lua_ßvñöe
(
L
, 1);

298 
	`lua_ªmove
(
L
, 1);

299  
°©us
;

300 
	}
}

303 
	$dŸty
 (
lua_Sèã
 *
L
) {

304 
°©us
;

305 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

306 
¥og«me
 = 
NULL
;

307 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

308 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

309 
	`ªp‹t
(
L
, 
°©us
);

310 i‡(
°©us
 =
LUA_OK
 && 
	`lua_gët›
(
L
) > 0) {

311 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

312 
	`lua_gëglobÆ
(
L
, "print");

313 
	`lua_ö£π
(
L
, 1);

314 i‡(
	`lua_pˇŒ
(
L
, 
	`lua_gët›
(L)-1, 0, 0Ë!
LUA_OK
)

315 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
,

316 "îr‹ cÆlög " 
	`LUA_QL
("print") " (%s)",

317 
	`lua_to°rög
(
L
, -1)));

320 
	`lua_£â›
(
L
, 0);

321 
	`luai_wrôñöe
();

322 
¥og«me
 = 
ﬁd¥og«me
;

323 
	}
}

326 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

327 
°©us
;

328 c⁄° *
‚ame
;

329 
«rg
 = 
	`gë¨gs
(
L
, 
¨gv
, 
n
);

330 
	`lua_£tglobÆ
(
L
, "arg");

331 
‚ame
 = 
¨gv
[
n
];

332 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[
n
-1], "--") != 0)

333 
‚ame
 = 
NULL
;

334 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

335 
	`lua_ö£π
(
L
, -(
«rg
+1));

336 i‡(
°©us
 =
LUA_OK
)

337 
°©us
 = 
	`doˇŒ
(
L
, 
«rg
, 
LUA_MULTRET
);

339 
	`lua_p›
(
L
, 
«rg
);

340  
	`ªp‹t
(
L
, 
°©us
);

341 
	}
}

345 
	#n€xåach¨s
(
x
Ë{i‡((x)[2] !'\0'Ë -1;}

	)

349 
	#has_i
 0

	)

350 
	#has_v
 1

	)

351 
	#has_e
 2

	)

352 
	#has_E
 3

	)

354 
	#num_has
 4

	)

357 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
¨gs
) {

358 
i
;

359 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

360 i‡(
¨gv
[
i
][0] != '-')

361  
i
;

362 
¨gv
[
i
][1]) {

364 
	`n€xåach¨s
(
¨gv
[
i
]);

365  (
¨gv
[
i
+1] !
NULL
 ? i+1 : 0);

367  
i
;

369 
¨gs
[
has_E
] = 1;

372 
	`n€xåach¨s
(
¨gv
[
i
]);

373 
¨gs
[
has_i
] = 1;

375 
	`n€xåach¨s
(
¨gv
[
i
]);

376 
¨gs
[
has_v
] = 1;

379 
¨gs
[
has_e
] = 1;

381 i‡(
¨gv
[
i
][2] == '\0') {

382 
i
++;

383 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

384  -(
i
 - 1);

388  -
i
;

392 
	}
}

395 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

396 
i
;

397 
i
 = 1; i < 
n
; i++) {

398 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

399 
¨gv
[
i
][1]) {

401 c⁄° *
chunk
 = 
¨gv
[
i
] + 2;

402 i‡(*
chunk
 ='\0'Ëchunk = 
¨gv
[++
i
];

403 
	`lua_as£π
(
chunk
 !
NULL
);

404 i‡(
	`do°rög
(
L
, 
chunk
, "=(comm™dÜöe)"Ë!
LUA_OK
)

409 c⁄° *
fûíame
 = 
¨gv
[
i
] + 2;

410 i‡(*
fûíame
 ='\0'Ëfûíamê
¨gv
[++
i
];

411 
	`lua_as£π
(
fûíame
 !
NULL
);

412 i‡(
	`dﬁibøry
(
L
, 
fûíame
Ë!
LUA_OK
)

420 
	}
}

423 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

424 c⁄° *
«me
 = "=" 
LUA_INITVERSION
;

425 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

426 i‡(
öô
 =
NULL
) {

427 
«me
 = "=" 
LUA_INIT
;

428 
öô
 = 
	`gëív
(
«me
 + 1);

430 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

431 i‡(
öô
[0] == '@')

432  
	`dofûe
(
L
, 
öô
+1);

434  
	`do°rög
(
L
, 
öô
, 
«me
);

435 
	}
}

438 
	$pmaö
 (
lua_Sèã
 *
L
) {

439 
	`¥ötk
("\nÖmain | called.");

440 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

441 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

442 
s¸ùt
;

443 
¨gs
[
num_has
];

444 
¨gs
[
has_i
] =árgs[
has_v
] =árgs[
has_e
] =árgs[
has_E
] = 0;

445 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

446 
s¸ùt
 = 
	`cﬁÀ˘¨gs
(
¨gv
, 
¨gs
);

447 i‡(
s¸ùt
 < 0) {

448 
	`¥öt_ußge
(
¨gv
[-
s¸ùt
]);

451 i‡(
¨gs
[
has_v
]Ë
	`¥öt_vîsi⁄
();

452 i‡(
¨gs
[
has_E
]) {

453 
	`lua_pushboﬁón
(
L
, 1);

454 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

457 
	`luaL_checkvîsi⁄
(
L
);

458 
	`lua_gc
(
L
, 
LUA_GCSTOP
, 0);

459 
	`luaL_›ílibs
(
L
);

460 
	`lua_gc
(
L
, 
LUA_GCRESTART
, 0);

461 i‡(!
¨gs
[
has_E
] && 
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

464 i‡(!
	`ru«rgs
(
L
, 
¨gv
, (
s¸ùt
 > 0Ë? s¸ùà: 
¨gc
))  0;

466 i‡(
s¸ùt
 && 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
, s¸ùtË!
LUA_OK
)  0;

467 i‡(
¨gs
[
has_i
])

468 
	`dŸty
(
L
);

469 i‡(
s¸ùt
 =0 && !
¨gs
[
has_e
] && !¨gs[
has_v
]) {

470 i‡(
	`lua_°dö_is_ây
()) {

471 
	`¥öt_vîsi⁄
();

472 
	`dŸty
(
L
);

474 
	`dofûe
(
L
, 
NULL
);

476 
	`lua_pushboﬁón
(
L
, 1);

478 
	}
}

481 
	$lua_maö
 (
¨gc
, **
¨gv
) {

482 
°©us
, 
ªsu…
;

483 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

484 
	`¥ötk
("\n LUA-MAIN |Çew state created. ");

485 i‡(
L
 =
NULL
) {

486 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

487  
EXIT_FAILURE
;

490 
	`¥ötk
("\n LUA-MAIN |ÉxecutingÜua_pushfunction. ");

491 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

492 
	`¥ötk
("\n LUA-MAIN |Üua_pushfunction Success. ");

493 
	`lua_pushöãgî
(
L
, 
¨gc
);

494 
	`¥ötk
("\n LUA-MAIN |Üua_pushinteger Success. ");

495 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

496 
	`¥ötk
("\n LUA-MAIN |Üua_pushlightuserdata Success .");

497 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

498 
	`¥ötk
("\n LUA-MAIN |Öcall success.");

499 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

500 
	`föÆªp‹t
(
L
, 
°©us
);

501 
	`lua_˛o£
(
L
);

502  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

503 
	}
}

	@lua_open.c

11 
	#l°©e_c


	)

12 
	#LUA_CORE


	)

13 
	~<«utûus/libccom∑t.h
>

14 
	~"lua/œpi.h
"

15 
	~"lua/ldebug.h
"

16 
	~"lua/ldo.h
"

17 
	~"lua/lfunc.h
"

18 
	~"lua/lgc.h
"

19 
	~"lua/Œex.h
"

20 
	~"lua/lmem.h
"

21 
	~"lua/l°©e.h
"

22 
	~"lua/l°rög.h
"

23 
	~"lua/…abÀ.h
"

24 
	~"lua/…m.h
"

25 
	~<lua/lua.h
>

26 
	~<lua/l°©e.h
>

27 
	~<lua/lzio.h
>

29 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

30 
i
;

31 
lua_Sèã
 *
L
;

32 
globÆ_Sèã
 *
g
;

33 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

34 i‡(
l
 =
NULL
)  NULL;

35 
L
 = &
l
->l.l;

36 
g
 = &
l
->g;

37 
L
->
√xt
 = 
NULL
;

38 
L
->
â
 = 
LUA_TTHREAD
;

39 
g
->
cuºítwhôe
 = 
	`bô2mask
(
WHITE0BIT
, 
FIXEDBIT
);

40 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

41 
g
->
gcköd
 = 
KGC_NORMAL
;

42 
	`¥eöô_°©e
(
L
, 
g
);

43 
g
->
‰óŒoc
 = 
f
;

44 
g
->
ud
 = ud;

45 
g
->
maöthªad
 = 
L
;

46 
g
->
£ed
 = 
	`make£ed
(
L
);

47 
g
->
uvhód
.
u
.
l
.
¥ev
 = &g->uvhead;

48 
g
->
uvhód
.
u
.
l
.
√xt
 = &g->uvhead;

49 
g
->
g¸u¬ög
 = 0;

50 
g
->
GCe°im©e
 = 0;

51 
g
->
°π
.
size
 = 0;

52 
g
->
°π
.
nu£
 = 0;

53 
g
->
°π
.
hash
 = 
NULL
;

54 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

55 
	`luaZ_öôbuf„r
(
L
, &
g
->
buff
);

56 
g
->
∑nic
 = 
NULL
;

57 
g
->
vîsi⁄
 = 
NULL
;

58 
g
->
gc°©e
 = 
GCS∑u£
;

59 
g
->
Ælgc
 = 
NULL
;

60 
g
->
föobj
 = 
NULL
;

61 
g
->
tobe‚z
 = 
NULL
;

62 
g
->
swìpgc
 = g->
swìpfö
 = 
NULL
;

63 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

64 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

65 
g
->
tŸÆbyãs
 = (
LG
);

66 
g
->
GCdebt
 = 0;

67 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

68 
g
->
gcmaj‹öc
 = 
LUAI_GCMAJOR
;

69 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

70 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

71 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

73 
	`˛o£_°©e
(
L
);

74 
L
 = 
NULL
;

76  
L
;

77 
	}
}

	@lundump.c

9 
	#lundump_c


	)

10 
	#LUA_CORE


	)

11 
	~<«utûus/libccom∑t.h
>

12 
	~"lua/lua.h
"

14 
	~"lua/ldebug.h
"

15 
	~"lua/ldo.h
"

16 
	~"lua/lfunc.h
"

17 
	~"lua/lmem.h
"

18 
	~"lua/lobje˘.h
"

19 
	~"lua/l°rög.h
"

20 
	~"lua/lundump.h
"

21 
	~"lua/lzio.h
"

24 
lua_Sèã
* 
	mL
;

25 
ZIO
* 
	mZ
;

26 
Mbuf„r
* 
	mb
;

27 c⁄° * 
	m«me
;

28 } 
	tLﬂdSèã
;

30 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
* 
S
, c⁄° * 
why
)

32 
	`luaO_pushf°rög
(
S
->
L
,"%s: %†¥ecompûed chunk",S->
«me
,
why
);

33 
	`luaD_throw
(
S
->
L
,
LUA_ERRSYNTAX
);

34 
	}
}

36 
	#LﬂdMem
(
S
,
b
,
n
,
size
Ë
	`LﬂdBlock
(S,b,“)*(size))

	)

37 
	#LﬂdByã
(
S
Ë(
lu_byã
)
	`LﬂdCh¨
(S)

	)

38 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdMem
(S,&x,1,(x))

	)

39 
	#LﬂdVe˘‹
(
S
,
b
,
n
,
size
Ë
	`LﬂdMem
(S,b,n,size)

	)

41 #i‡!
deföed
(
luai_vîifycode
)

42 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

45 
	$LﬂdBlock
(
LﬂdSèã
* 
S
, * 
b
, 
size_t
 
size
)

47 i‡(
	`luaZ_ªad
(
S
->
Z
,
b
,
size
)!=0Ë
	`îr‹
(S,"truncated");

48 
	}
}

50 
	$LﬂdCh¨
(
LﬂdSèã
* 
S
)

52 
x
;

53 
	`LﬂdV¨
(
S
,
x
);

54  
x
;

55 
	}
}

57 
	$LﬂdI¡
(
LﬂdSèã
* 
S
)

59 
x
;

60 
	`LﬂdV¨
(
S
,
x
);

61 i‡(
x
<0Ë
	`îr‹
(
S
,"corrupted");

62  
x
;

63 
	}
}

65 
lua_Numbî
 
	$LﬂdNumbî
(
LﬂdSèã
* 
S
)

67 
lua_Numbî
 
x
;

68 
	`LﬂdV¨
(
S
,
x
);

69  
x
;

70 
	}
}

72 
TSåög
* 
	$LﬂdSåög
(
LﬂdSèã
* 
S
)

74 
size_t
 
size
;

75 
	`LﬂdV¨
(
S
,
size
);

76 i‡(
size
==0)

77  
NULL
;

80 * 
s
=
	`luaZ_›í•a˚
(
S
->
L
,S->
b
,
size
);

81 
	`LﬂdBlock
(
S
,
s
,
size
*());

82  
	`luaS_√wl°r
(
S
->
L
,
s
,
size
-1);

84 
	}
}

86 
	$LﬂdCode
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
)

88 
n
=
	`LﬂdI¡
(
S
);

89 
f
->
code
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,
In°ru˘i⁄
);

90 
f
->
sizecode
=
n
;

91 
	`LﬂdVe˘‹
(
S
,
f
->
code
,
n
,(
In°ru˘i⁄
));

92 
	}
}

94 
LﬂdFun˘i⁄
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
);

96 
	$LﬂdC⁄°™ts
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
)

98 
i
,
n
;

99 
n
=
	`LﬂdI¡
(
S
);

100 
f
->
k
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,
TVÆue
);

101 
f
->
sizek
=
n
;

102 
i
=0; i<
n
; i++Ë
	`£äûvÆue
(&
f
->
k
[i]);

103 
i
=0; i<
n
; i++)

105 
TVÆue
* 
o
=&
f
->
k
[
i
];

106 
t
=
	`LﬂdCh¨
(
S
);

107 
t
)

109 
LUA_TNIL
:

110 
	`£äûvÆue
(
o
);

112 
LUA_TBOOLEAN
:

113 
	`£tbvÆue
(
o
,
	`LﬂdCh¨
(
S
));

115 
LUA_TNUMBER
:

116 
	`£ävÆue
(
o
,
	`LﬂdNumbî
(
S
));

118 
LUA_TSTRING
:

119 
	`£tsvÆue2n
(
S
->
L
,
o
,
	`LﬂdSåög
(S));

121 : 
	`lua_as£π
(0);

124 
n
=
	`LﬂdI¡
(
S
);

125 
f
->
p
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,
PrŸo
*);

126 
f
->
sizï
=
n
;

127 
i
=0; i<
n
; i++Ë
f
->
p
[i]=
NULL
;

128 
i
=0; i<
n
; i++)

130 
f
->
p
[
i
]=
	`luaF_√w¥Ÿo
(
S
->
L
);

131 
	`LﬂdFun˘i⁄
(
S
,
f
->
p
[
i
]);

133 
	}
}

135 
	$LﬂdUpvÆues
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
)

137 
i
,
n
;

138 
n
=
	`LﬂdI¡
(
S
);

139 
f
->
upvÆues
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,
UpvÆdesc
);

140 
f
->
sizeupvÆues
=
n
;

141 
i
=0; i<
n
; i++Ë
f
->
upvÆues
[i].
«me
=
NULL
;

142 
i
=0; i<
n
; i++)

144 
f
->
upvÆues
[
i
].
ö°ack
=
	`LﬂdByã
(
S
);

145 
f
->
upvÆues
[
i
].
idx
=
	`LﬂdByã
(
S
);

147 
	}
}

149 
	$LﬂdDebug
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
)

151 
i
,
n
;

152 
f
->
sour˚
=
	`LﬂdSåög
(
S
);

153 
n
=
	`LﬂdI¡
(
S
);

154 
f
->
löeöfo
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,);

155 
f
->
sizñöeöfo
=
n
;

156 
	`LﬂdVe˘‹
(
S
,
f
->
löeöfo
,
n
,());

157 
n
=
	`LﬂdI¡
(
S
);

158 
f
->
locv¨s
=
	`luaM_√wve˘‹
(
S
->
L
,
n
,
LocV¨
);

159 
f
->
sizñocv¨s
=
n
;

160 
i
=0; i<
n
; i++Ë
f
->
locv¨s
[i].
v¨«me
=
NULL
;

161 
i
=0; i<
n
; i++)

163 
f
->
locv¨s
[
i
].
v¨«me
=
	`LﬂdSåög
(
S
);

164 
f
->
locv¨s
[
i
].
°¨çc
=
	`LﬂdI¡
(
S
);

165 
f
->
locv¨s
[
i
].
ídpc
=
	`LﬂdI¡
(
S
);

167 
n
=
	`LﬂdI¡
(
S
);

168 
i
=0; i<
n
; i++Ë
f
->
upvÆues
[i].
«me
=
	`LﬂdSåög
(
S
);

169 
	}
}

171 
	$LﬂdFun˘i⁄
(
LﬂdSèã
* 
S
, 
PrŸo
* 
f
)

173 
f
->
löedeföed
=
	`LﬂdI¡
(
S
);

174 
f
->
œ°löedeföed
=
	`LﬂdI¡
(
S
);

175 
f
->
num∑øms
=
	`LﬂdByã
(
S
);

176 
f
->
is_v¨¨g
=
	`LﬂdByã
(
S
);

177 
f
->
max°acksize
=
	`LﬂdByã
(
S
);

178 
	`LﬂdCode
(
S
,
f
);

179 
	`LﬂdC⁄°™ts
(
S
,
f
);

180 
	`LﬂdUpvÆues
(
S
,
f
);

181 
	`LﬂdDebug
(
S
,
f
);

182 
	}
}

185 
	#N0
 
LUAC_HEADERSIZE


	)

186 
	#N1
 ((
LUA_SIGNATURE
)-())

	)

187 
	#N2
 
N1
+2

	)

188 
	#N3
 
N2
+6

	)

190 
	$LﬂdHódî
(
LﬂdSèã
* 
S
)

192 
lu_byã
 
h
[
LUAC_HEADERSIZE
];

193 
lu_byã
 
s
[
LUAC_HEADERSIZE
];

194 
	`luaU_hódî
(
h
);

195 
	`mem˝y
(
s
,
h
,());

196 
	`LﬂdBlock
(
S
,
s
+(),
LUAC_HEADERSIZE
-());

197 i‡(
	`memcmp
(
h
,
s
,
N0
)==0) ;

198 i‡(
	`memcmp
(
h
,
s
,
N1
)!=0Ë
	`îr‹
(
S
,"notá");

199 i‡(
	`memcmp
(
h
,
s
,
N2
)!=0Ë
	`îr‹
(
S
,"version mismatch in");

200 i‡(
	`memcmp
(
h
,
s
,
N3
)!=0Ë
	`îr‹
(
S
,"incompatible"); error(S,"corrupted");

201 
	}
}

206 
Closuª
* 
	$luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, 
Mbuf„r
* 
buff
, c⁄° * 
«me
)

208 
LﬂdSèã
 
S
;

209 
Closuª
* 
˛
;

210 i‡(*
«me
=='@' || *name=='=')

211 
S
.
«me
=name+1;

212 i‡(*
«me
==
LUA_SIGNATURE
[0])

213 
S
.
«me
="binary string";

215 
S
.
«me
=name;

216 
S
.
L
=L;

217 
S
.
Z
=Z;

218 
S
.
b
=
buff
;

219 
	`LﬂdHódî
(&
S
);

220 
˛
=
	`luaF_√wL˛osuª
(
L
,1);

221 
	`£t˛LvÆue
(
L
,L->
t›
,
˛
); 
	`ö¸_t›
(L);

222 
˛
->
l
.
p
=
	`luaF_√w¥Ÿo
(
L
);

223 
	`LﬂdFun˘i⁄
(&
S
,
˛
->
l
.
p
);

224 i‡(
˛
->
l
.
p
->
sizeupvÆues
 != 1)

226 
PrŸo
* 
p
=
˛
->
l
.p;

227 
˛
=
	`luaF_√wL˛osuª
(
L
,˛->
l
.
p
->
sizeupvÆues
);

228 
˛
->
l
.
p
=p;

229 
	`£t˛LvÆue
(
L
,L->
t›
-1,
˛
);

231 
	`luai_vîifycode
(
L
,
buff
,
˛
->
l
.
p
);

232  
˛
;

233 
	}
}

235 
	#MYINT
(
s
Ë(s[0]-'0')

	)

236 
	#VERSION
 
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
)

	)

237 
	#FORMAT
 0

	)

244 
	$luaU_hódî
 (
lu_byã
* 
h
)

246 
x
=1;

247 
	`mem˝y
(
h
,
LUA_SIGNATURE
,(LUA_SIGNATURE)-());

248 
h
+=(
LUA_SIGNATURE
)-();

249 *
h
++=
	`ˇ°_byã
(
VERSION
);

250 *
h
++=
	`ˇ°_byã
(
FORMAT
);

251 *
h
++=
	`ˇ°_byã
(*(*)&
x
);

252 *
h
++=
	`ˇ°_byã
(());

253 *
h
++=
	`ˇ°_byã
((
size_t
));

254 *
h
++=
	`ˇ°_byã
((
In°ru˘i⁄
));

255 *
h
++=
	`ˇ°_byã
((
lua_Numbî
));

256 *
h
++=
	`ˇ°_byã
(((
lua_Numbî
)0.5)==0);

257 
	`mem˝y
(
h
,
LUAC_TAIL
,(LUAC_TAIL)-());

258 
	}
}

	@lvm.c

12 
	#lvm_c


	)

13 
	#LUA_CORE


	)

14 
	~<«utûus/libccom∑t.h
>

15 
	~"lua/lua.h
"

17 
	~"lua/ldebug.h
"

18 
	~"lua/ldo.h
"

19 
	~"lua/lfunc.h
"

20 
	~"lua/lgc.h
"

21 
	~"lua/lobje˘.h
"

22 
	~"lua/l›codes.h
"

23 
	~"lua/l°©e.h
"

24 
	~"lua/l°rög.h
"

25 
	~"lua/…abÀ.h
"

26 
	~"lua/…m.h
"

27 
	~"lua/lvm.h
"

32 
	#MAXTAGLOOP
 100

	)

35 c⁄° 
TVÆue
 *
	$luaV_t⁄umbî
 (c⁄° 
TVÆue
 *
obj
, TVÆuê*
n
) {

36 
lua_Numbî
 
num
;

37 i‡(
	`âi¢umbî
(
obj
))  obj;

38 i‡(
	`âis°rög
(
obj
Ë&& 
	`luaO_°r2d
(
	`svÆue
(obj), 
	`tsvÆue
(obj)->
Àn
, &
num
)) {

39 
	`£ävÆue
(
n
, 
num
);

40  
n
;

43  
NULL
;

44 
	}
}

47 
	$luaV_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

48 i‡(!
	`âi¢umbî
(
obj
))

51 
s
[
LUAI_MAXNUMBER2STR
];

52 
lua_Numbî
 
n
 = 
	`nvÆue
(
obj
);

53 
l
 = 
	`lua_numbî2°r
(
s
, 
n
);

54 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
s
, 
l
));

57 
	}
}

60 
	$åa˚exec
 (
lua_Sèã
 *
L
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 
lu_byã
 
mask
 = 
L
->
hookmask
;

63 
cou¡hook
 = ((
mask
 & 
LUA_MASKCOUNT
Ë&& 
L
->
hookcou¡
 == 0);

64 i‡(
cou¡hook
)

65 
	`ª£thookcou¡
(
L
);

66 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

67 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

70 i‡(
cou¡hook
)

71 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

72 i‡(
mask
 & 
LUA_MASKLINE
) {

73 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

74 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

75 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

76 i‡(
≈c
 == 0 ||

77 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

78 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

79 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

81 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

82 i‡(
L
->
°©us
 =
LUA_YIELD
) {

83 i‡(
cou¡hook
)

84 
L
->
hookcou¡
 = 1;

85 
ci
->
u
.
l
.
ßvedpc
--;

86 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

87 
ci
->
func
 = 
L
->
t›
 - 1;

88 
	`luaD_throw
(
L
, 
LUA_YIELD
);

90 
	}
}

93 
	$ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

94 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

95 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

96 
	`£tobj2s
(
L
, L->
t›
++, 
f
);

97 
	`£tobj2s
(
L
, L->
t›
++, 
p1
);

98 
	`£tobj2s
(
L
, L->
t›
++, 
p2
);

99 i‡(!
ha§es
)

100 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

102 
	`luaD_ˇŒ
(
L
, L->
t›
 - (4 - 
ha§es
), ha§es, 
	`isLua
(L->
ci
));

103 i‡(
ha§es
) {

104 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

105 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

107 
	}
}

110 
	$luaV_gëèbÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
) {

111 
lo›
;

112 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

113 c⁄° 
TVÆue
 *
tm
;

114 i‡(
	`âi°abÀ
(
t
)) {

115 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

116 c⁄° 
TVÆue
 *
ªs
 = 
	`luaH_gë
(
h
, 
key
);

117 i‡(!
	`âi¢û
(
ªs
) ||

118 (
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_INDEX
)Ë=
NULL
) {

119 
	`£tobj2s
(
L
, 
vÆ
, 
ªs
);

124 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
)))

125 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

126 i‡(
	`âisfun˘i⁄
(
tm
)) {

127 
	`ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

130 
t
 = 
tm
;

132 
	`luaG_ru√º‹
(
L
, "loop in gettable");

133 
	}
}

136 
	$luaV_£âabÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
) {

137 
lo›
;

138 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

139 c⁄° 
TVÆue
 *
tm
;

140 i‡(
	`âi°abÀ
(
t
)) {

141 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

142 
TVÆue
 *
ﬁdvÆ
 = 
	`ˇ°
(TVÆuê*, 
	`luaH_gë
(
h
, 
key
));

145 i‡(!
	`âi¢û
(
ﬁdvÆ
) ||

147 ((
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_NEWINDEX
)Ë=
NULL
 &&

149 (
ﬁdvÆ
 !
luaO_nûobje˘
 ||

152 (
ﬁdvÆ
 = 
	`luaH_√wkey
(
L
, 
h
, 
key
), 1)))) {

154 
	`£tobj2t
(
L
, 
ﬁdvÆ
, 
vÆ
);

155 
	`övÆid©eTMˇche
(
h
);

156 
	`luaC_b¨rõrback
(
L
, 
	`obj2gco
(
h
), 
vÆ
);

162 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

163 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

165 i‡(
	`âisfun˘i⁄
(
tm
)) {

166 
	`ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

169 
t
 = 
tm
;

171 
	`luaG_ru√º‹
(
L
, "loop in settable");

172 
	}
}

175 
	$ˇŒ_böTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

176 
StkId
 
ªs
, 
TMS
 
evít
) {

177 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

178 i‡(
	`âi¢û
(
tm
))

179 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

180 i‡(
	`âi¢û
(
tm
))  0;

181 
	`ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

183 
	}
}

186 c⁄° 
TVÆue
 *
	$gë_equÆTM
 (
lua_Sèã
 *
L
, 
TabÀ
 *
mt1
, TabÀ *
mt2
,

187 
TMS
 
evít
) {

188 c⁄° 
TVÆue
 *
tm1
 = 
	`Á°tm
(
L
, 
mt1
, 
evít
);

189 c⁄° 
TVÆue
 *
tm2
;

190 i‡(
tm1
 =
NULL
)  NULL;

191 i‡(
mt1
 =
mt2
Ë 
tm1
;

192 
tm2
 = 
	`Á°tm
(
L
, 
mt2
, 
evít
);

193 i‡(
tm2
 =
NULL
)  NULL;

194 i‡(
	`luaV_øwequÆobj
(
tm1
, 
tm2
))

195  
tm1
;

196  
NULL
;

197 
	}
}

200 
	$ˇŒ_‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

201 
TMS
 
evít
) {

202 i‡(!
	`ˇŒ_böTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

205  !
	`l_isÁl£
(
L
->
t›
);

206 
	}
}

209 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

210 c⁄° *
l
 = 
	`gë°r
(
ls
);

211 
size_t
 
Œ
 = 
ls
->
tsv
.
Àn
;

212 c⁄° *
r
 = 
	`gë°r
(
rs
);

213 
size_t
 
Ã
 = 
rs
->
tsv
.
Àn
;

215 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

216 i‡(
ãmp
 != 0) Åemp;

218 
size_t
 
Àn
 = 
	`°æí
(
l
);

219 i‡(
Àn
 =
Ã
)

220  (
Àn
 =
Œ
) ? 0 : 1;

221 i‡(
Àn
 =
Œ
)

224 
Àn
++;

225 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

228 
	}
}

231 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

232 
ªs
;

233 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

234  
	`luai_num…
(
L
, 
	`nvÆue
(
l
),ÇvÆue(
r
));

235 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

236  
	`l_°rcmp
(
	`øwtsvÆue
(
l
),ÑawtsvÆue(
r
)) < 0;

237 i‡((
ªs
 = 
	`ˇŒ_‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

238 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

239  
ªs
;

240 
	}
}

243 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

244 
ªs
;

245 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

246  
	`luai_numÀ
(
L
, 
	`nvÆue
(
l
),ÇvÆue(
r
));

247 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

248  
	`l_°rcmp
(
	`øwtsvÆue
(
l
),ÑawtsvÆue(
r
)) <= 0;

249 i‡((
ªs
 = 
	`ˇŒ_‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

250  
ªs
;

251 i‡((
ªs
 = 
	`ˇŒ_‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
)) < 0)

252 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

253  !
ªs
;

254 
	}
}

260 
	$luaV_equÆobj_
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

261 c⁄° 
TVÆue
 *
tm
;

262 
	`lua_as£π
(
	`âi£quÆ
(
t1
, 
t2
));

263 
	`ây≥
(
t1
)) {

264 
LUA_TNIL
:  1;

265 
LUA_TNUMBER
:  
	`luai_numeq
(
	`nvÆue
(
t1
),ÇvÆue(
t2
));

266 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

267 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

268 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

269 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`øwtsvÆue
(
t1
),ÑawtsvÆue(
t2
));

270 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`øwtsvÆue
(
t1
),ÑawtsvÆue(
t2
));

271 
LUA_TUSERDATA
: {

272 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

273 i‡(
L
 =
NULL
)  0;

274 
tm
 = 
	`gë_equÆTM
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, uvÆue(
t2
)->më©abÀ, 
TM_EQ
);

277 
LUA_TTABLE
: {

278 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

279 i‡(
L
 =
NULL
)  0;

280 
tm
 = 
	`gë_equÆTM
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, hvÆue(
t2
)->më©abÀ, 
TM_EQ
);

284 
	`lua_as£π
(
	`iscﬁÀ˘abÀ
(
t1
));

285  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

287 i‡(
tm
 =
NULL
)  0;

288 
	`ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

289  !
	`l_isÁl£
(
L
->
t›
);

290 
	}
}

293 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

294 
	`lua_as£π
(
tŸÆ
 >= 2);

296 
StkId
 
t›
 = 
L
->top;

297 
n
 = 2;

298 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`âi¢umbî
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1)) {

299 i‡(!
	`ˇŒ_böTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
))

300 
	`luaG_c⁄ˇãº‹
(
L
, 
t›
-2,Åop-1);

302 i‡(
	`tsvÆue
(
t›
-1)->
Àn
 == 0)

303 ()
	`to°rög
(
L
, 
t›
 - 2);

304 i‡(
	`âis°rög
(
t›
-2Ë&& 
	`tsvÆue
—›-2)->
Àn
 == 0) {

305 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

309 
size_t
 
é
 = 
	`tsvÆue
(
t›
-1)->
Àn
;

310 *
buf„r
;

311 
i
;

313 
i
 = 1; i < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
-i-1); i++) {

314 
size_t
 
l
 = 
	`tsvÆue
(
t›
-
i
-1)->
Àn
;

315 i‡(
l
 >(
MAX_SIZET
/()Ë- 
é
)

316 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

317 
é
 +
l
;

319 
buf„r
 = 
	`luaZ_›í•a˚
(
L
, &
	`G
(L)->
buff
, 
é
);

320 
é
 = 0;

321 
n
 = 
i
;

323 
size_t
 
l
 = 
	`tsvÆue
(
t›
-
i
)->
Àn
;

324 
	`mem˝y
(
buf„r
+
é
, 
	`svÆue
(
t›
-
i
), 
l
 * ());

325 
é
 +
l
;

326 } --
i
 > 0);

327 
	`£tsvÆue2s
(
L
, 
t›
-
n
, 
	`luaS_√wl°r
(L, 
buf„r
, 
é
));

329 
tŸÆ
 -
n
-1;

330 
L
->
t›
 -
n
-1;

331 } 
tŸÆ
 > 1);

332 
	}
}

335 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

336 c⁄° 
TVÆue
 *
tm
;

337 
	`ây≥nv
(
rb
)) {

338 
LUA_TTABLE
: {

339 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

340 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

341 i‡(
tm
) ;

342 
	`£ävÆue
(
ø
, 
	`ˇ°_num
(
	`luaH_gën
(
h
)));

345 
LUA_TSTRING
: {

346 
	`£ävÆue
(
ø
, 
	`ˇ°_num
(
	`tsvÆue
(
rb
)->
Àn
));

350 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

351 i‡(
	`âi¢û
(
tm
))

352 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

356 
	`ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

357 
	}
}

360 
	$luaV_¨ôh
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
,

361 c⁄° 
TVÆue
 *
rc
, 
TMS
 
›
) {

362 
TVÆue
 
ãmpb
, 
ãmpc
;

363 c⁄° 
TVÆue
 *
b
, *
c
;

364 i‡((
b
 = 
	`luaV_t⁄umbî
(
rb
, &
ãmpb
)Ë!
NULL
 &&

365 (
c
 = 
	`luaV_t⁄umbî
(
rc
, &
ãmpc
)Ë!
NULL
) {

366 
lua_Numbî
 
ªs
 = 
	`luaO_¨ôh
(
›
 - 
TM_ADD
 + 
LUA_OPADD
, 
	`nvÆue
(
b
),ÇvÆue(
c
));

367 
	`£ävÆue
(
ø
, 
ªs
);

369 i‡(!
	`ˇŒ_böTM
(
L
, 
rb
, 
rc
, 
ø
, 
›
))

370 
	`luaG_¨ôhîr‹
(
L
, 
rb
, 
rc
);

371 
	}
}

379 
Closuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

380 
Closuª
 *
c
 = 
p
->
ˇche
;

381 i‡(
c
 !
NULL
) {

382 
nup
 = 
p
->
sizeupvÆues
;

383 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

384 
i
;

385 
i
 = 0; i < 
nup
; i++) {

386 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

387 i‡(
c
->
l
.
upvÆs
[
i
]->
v
 != v)

388  
NULL
;

391  
c
;

392 
	}
}

401 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

402 
StkId
 
ø
) {

403 
nup
 = 
p
->
sizeupvÆues
;

404 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

405 
i
;

406 
Closuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

407 
n˛
->
l
.
p
 =Ö;

408 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

409 
i
 = 0; i < 
nup
; i++) {

410 i‡(
uv
[
i
].
ö°ack
)

411 
n˛
->
l
.
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

413 
n˛
->
l
.
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

415 
	`luaC_b¨rõΩrŸo
(
L
, 
p
, 
n˛
);

416 
p
->
ˇche
 = 
n˛
;

417 
	}
}

423 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

424 
CÆlInfo
 *
ci
 = 
L
->ci;

425 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

426 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

427 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

428 
›
) {

429 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
:

430 
OP_MOD
: 
OP_POW
: 
OP_UNM
: 
OP_LEN
:

431 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

432 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

435 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

436 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

437 
L
->
t›
--;

439 
	`lua_as£π
(!
	`ISK
(
	`GETARG_B
(
ö°
)));

440 i‡(
›
 =
OP_LE
 &&

441 
	`âi¢û
(
	`luaT_gëtmbyobj
(
L
, 
ba£
 + 
	`GETARG_B
(
ö°
), 
TM_LE
)))

442 
ªs
 = !res;

443 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

444 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

445 
ci
->
u
.
l
.
ßvedpc
++;

448 
OP_CONCAT
: {

449 
StkId
 
t›
 = 
L
->top - 1;

450 
b
 = 
	`GETARG_B
(
ö°
);

451 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

452 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

453 i‡(
tŸÆ
 > 1) {

454 
L
->
t›
 =Åop - 1;

455 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

458 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

459 
L
->
t›
 = 
ci
->top;

462 
OP_TFORCALL
: {

463 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

464 
L
->
t›
 = 
ci
->top;

467 
OP_CALL
: {

468 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

469 
L
->
t›
 = 
ci
->top;

472 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

474 : 
	`lua_as£π
(0);

476 
	}
}

484 #i‡!
deföed
 
luai_ru¡imecheck


485 
	#luai_ru¡imecheck
(
L
, 
c
Ë

	)

489 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

491 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

492 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

493 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

494 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

495 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

496 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

497 
	#KBx
(
i
) \

498 (
k
 + (
	`GETARG_Bx
(
i
Ë!0 ? GETARG_Bx(iË- 1 : 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++)))

	)

502 
	#dojump
(
ci
,
i
,
e
) \

503 { 
a
 = 
	`GETARG_A
(
i
); \

504 i‡(
a
 > 0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

505 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

508 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

511 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

513 
	#checkGC
(
L
,
c
) \

514 
	`PrŸe˘
–
	`luaC_c⁄dGC
(
L
,{L->
t›
 = (
c
); \

515 
	`luaC_°ï
(
L
); \

516 
L
->
t›
 = 
ci
->top;}) \

517 
	`luai_thªadyõld
(
L
); )

	)

520 
	#¨ôh_›
(
›
,
tm
) { \

521 
TVÆue
 *
rb
 = 
	`RKB
(
i
); \

522 
TVÆue
 *
rc
 = 
	`RKC
(
i
); \

523 i‡(
	`âi¢umbî
(
rb
Ë&&Åti¢umbî(
rc
)) { \

524 
lua_Numbî
 
nb
 = 
	`nvÆue
(
rb
), 
nc
 =ÇvÆue(
rc
); \

525 
	`£ävÆue
(
ø
, 
	`›
(
L
, 
nb
, 
nc
)); \

527 { 
	`PrŸe˘
(
	`luaV_¨ôh
(
L
, 
ø
, 
rb
, 
rc
, 
tm
)); } }

	)

530 
	#vmdi•©ch
(
o
Ëo)

	)

531 
	#vmˇ£
(
l
,
b
Ël: {b} ;

	)

532 
	#vmˇ£nb
(
l
,
b
Ël: {b}

	)

534 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

535 
CÆlInfo
 *
ci
 = 
L
->ci;

536 
LClosuª
 *
˛
;

537 
TVÆue
 *
k
;

538 
StkId
 
ba£
;

539 
√w‰ame
:

540 
	`lua_as£π
(
ci
 =
L
->ci);

541 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

542 
k
 = 
˛
->
p
->k;

543 
ba£
 = 
ci
->
u
.
l
.base;

546 
In°ru˘i⁄
 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

547 
StkId
 
ø
;

548 i‡((
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
)) &&

549 (--
L
->
hookcou¡
 =0 || L->
hookmask
 & 
LUA_MASKLINE
)) {

550 
	`PrŸe˘
(
	`åa˚exec
(
L
));

553 
ø
 = 
	`RA
(
i
);

554 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base);

555 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
);

556 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

557 
	`vmˇ£
(
OP_MOVE
,

558 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

560 
	`vmˇ£
(
OP_LOADK
,

561 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

562 
	`£tobj2s
(
L
, 
ø
, 
rb
);

564 
	`vmˇ£
(
OP_LOADKX
,

565 
TVÆue
 *
rb
;

566 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

567 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

568 
	`£tobj2s
(
L
, 
ø
, 
rb
);

570 
	`vmˇ£
(
OP_LOADBOOL
,

571 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

572 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

574 
	`vmˇ£
(
OP_LOADNIL
,

575 
b
 = 
	`GETARG_B
(
i
);

577 
	`£äûvÆue
(
ø
++);

578 } 
b
--);

580 
	`vmˇ£
(
OP_GETUPVAL
,

581 
b
 = 
	`GETARG_B
(
i
);

582 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

584 
	`vmˇ£
(
OP_GETTABUP
,

585 
b
 = 
	`GETARG_B
(
i
);

586 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
˛
->
upvÆs
[
b
]->
v
, 
	`RKC
(
i
), 
ø
));

588 
	`vmˇ£
(
OP_GETTABLE
,

589 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
	`RB
(
i
), 
	`RKC
(i), 
ø
));

591 
	`vmˇ£
(
OP_SETTABUP
,

592 
a
 = 
	`GETARG_A
(
i
);

593 
	`PrŸe˘
(
	`luaV_£âabÀ
(
L
, 
˛
->
upvÆs
[
a
]->
v
, 
	`RKB
(
i
), 
	`RKC
(i)));

595 
	`vmˇ£
(
OP_SETUPVAL
,

596 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

597 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

598 
	`luaC_b¨rõr
(
L
, 
uv
, 
ø
);

600 
	`vmˇ£
(
OP_SETTABLE
,

601 
	`PrŸe˘
(
	`luaV_£âabÀ
(
L
, 
ø
, 
	`RKB
(
i
), 
	`RKC
(i)));

603 
	`vmˇ£
(
OP_NEWTABLE
,

604 
b
 = 
	`GETARG_B
(
i
);

605 
c
 = 
	`GETARG_C
(
i
);

606 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

607 
	`£thvÆue
(
L
, 
ø
, 
t
);

608 i‡(
b
 !0 || 
c
 != 0)

609 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

610 
	`checkGC
(
L
, 
ø
 + 1);

612 
	`vmˇ£
(
OP_SELF
,

613 
StkId
 
rb
 = 
	`RB
(
i
);

614 
	`£tobjs2s
(
L
, 
ø
+1, 
rb
);

615 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
rb
, 
	`RKC
(
i
), 
ø
));

617 
	`vmˇ£
(
OP_ADD
,

618 
	`¨ôh_›
(
luai_numadd
, 
TM_ADD
);

620 
	`vmˇ£
(
OP_SUB
,

621 
	`¨ôh_›
(
luai_numsub
, 
TM_SUB
);

623 
	`vmˇ£
(
OP_MUL
,

624 
	`¨ôh_›
(
luai_nummul
, 
TM_MUL
);

626 
	`vmˇ£
(
OP_DIV
,

627 
	`¨ôh_›
(
luai_numdiv
, 
TM_DIV
);

629 
	`vmˇ£
(
OP_MOD
,

630 
	`¨ôh_›
(
luai_nummod
, 
TM_MOD
);

632 
	`vmˇ£
(
OP_POW
,

633 
	`¨ôh_›
(
luai_numpow
, 
TM_POW
);

635 
	`vmˇ£
(
OP_UNM
,

636 
TVÆue
 *
rb
 = 
	`RB
(
i
);

637 i‡(
	`âi¢umbî
(
rb
)) {

638 
lua_Numbî
 
nb
 = 
	`nvÆue
(
rb
);

639 
	`£ävÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

642 
	`PrŸe˘
(
	`luaV_¨ôh
(
L
, 
ø
, 
rb
,Ñb, 
TM_UNM
));

645 
	`vmˇ£
(
OP_NOT
,

646 
TVÆue
 *
rb
 = 
	`RB
(
i
);

647 
ªs
 = 
	`l_isÁl£
(
rb
);

648 
	`£tbvÆue
(
ø
, 
ªs
);

650 
	`vmˇ£
(
OP_LEN
,

651 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

653 
	`vmˇ£
(
OP_CONCAT
,

654 
b
 = 
	`GETARG_B
(
i
);

655 
c
 = 
	`GETARG_C
(
i
);

656 
StkId
 
rb
;

657 
L
->
t›
 = 
ba£
 + 
c
 + 1;

658 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

659 
ø
 = 
	`RA
(
i
);

660 
rb
 = 
b
 + 
ba£
;

661 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

662 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

663 
L
->
t›
 = 
ci
->top;

665 
	`vmˇ£
(
OP_JMP
,

666 
	`dojump
(
ci
, 
i
, 0);

668 
	`vmˇ£
(
OP_EQ
,

669 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

670 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

671 
	`PrŸe˘
(

672 i‡(
	`ˇ°_öt
(
	`equÆobj
(
L
, 
rb
, 
rc
)Ë!
	`GETARG_A
(
i
))

673 
ci
->
u
.
l
.
ßvedpc
++;

675 
	`d⁄extjump
(
ci
);

678 
	`vmˇ£
(
OP_LT
,

679 
	`PrŸe˘
(

680 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

681 
ci
->
u
.
l
.
ßvedpc
++;

683 
	`d⁄extjump
(
ci
);

686 
	`vmˇ£
(
OP_LE
,

687 
	`PrŸe˘
(

688 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

689 
ci
->
u
.
l
.
ßvedpc
++;

691 
	`d⁄extjump
(
ci
);

694 
	`vmˇ£
(
OP_TEST
,

695 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

696 
ci
->
u
.
l
.
ßvedpc
++;

698 
	`d⁄extjump
(
ci
);

700 
	`vmˇ£
(
OP_TESTSET
,

701 
TVÆue
 *
rb
 = 
	`RB
(
i
);

702 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

703 
ci
->
u
.
l
.
ßvedpc
++;

705 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

706 
	`d⁄extjump
(
ci
);

709 
	`vmˇ£
(
OP_CALL
,

710 
b
 = 
	`GETARG_B
(
i
);

711 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

712 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

713 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

714 i‡(
ƒesu…s
 >0Ë
L
->
t›
 = 
ci
->top;

715 
ba£
 = 
ci
->
u
.
l
.base;

718 
ci
 = 
L
->ci;

719 
ci
->
ˇŒ°©us
 |
CIST_REENTRY
;

720 
√w‰ame
;

723 
	`vmˇ£
(
OP_TAILCALL
,

724 
b
 = 
	`GETARG_B
(
i
);

725 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

726 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

727 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
))

728 
ba£
 = 
ci
->
u
.
l
.base;

731 
CÆlInfo
 *
nci
 = 
L
->
ci
;

732 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

733 
StkId
 
nfunc
 = 
nci
->
func
;

734 
StkId
 
ofunc
 = 
oci
->
func
;

736 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

737 
aux
;

739 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

741 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

742 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

743 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

744 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

745 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

746 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

747 
ci
 = 
L
->cò
oci
;

748 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

749 
√w‰ame
;

752 
	`vmˇ£nb
(
OP_RETURN
,

753 
b
 = 
	`GETARG_B
(
i
);

754 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b-1;

755 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

756 
b
 = 
	`luaD_posˇŒ
(
L
, 
ø
);

757 i‡(!(
ci
->
ˇŒ°©us
 & 
CIST_REENTRY
))

760 
ci
 = 
L
->ci;

761 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

762 
	`lua_as£π
(
	`isLua
(
ci
));

763 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

764 
√w‰ame
;

767 
	`vmˇ£
(
OP_FORLOOP
,

768 
lua_Numbî
 
°ï
 = 
	`nvÆue
(
ø
+2);

769 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`nvÆue
(
ø
), 
°ï
);

770 
lua_Numbî
 
limô
 = 
	`nvÆue
(
ø
+1);

771 i‡(
	`luai_num…
(
L
, 0, 
°ï
Ë? 
	`luai_numÀ
(L, 
idx
, 
limô
)

772 : 
	`luai_numÀ
(
L
, 
limô
, 
idx
)) {

773 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

774 
	`£ävÆue
(
ø
, 
idx
);

775 
	`£ävÆue
(
ø
+3, 
idx
);

778 
	`vmˇ£
(
OP_FORPREP
,

779 c⁄° 
TVÆue
 *
öô
 = 
ø
;

780 c⁄° 
TVÆue
 *
∂imô
 = 
ø
+1;

781 c⁄° 
TVÆue
 *
p°ï
 = 
ø
+2;

782 i‡(!
	`t⁄umbî
(
öô
, 
ø
))

783 
	`luaG_ru√º‹
(
L
, 
	`LUA_QL
("for") " initial value must beáÇumber");

784 i‡(!
	`t⁄umbî
(
∂imô
, 
ø
+1))

785 
	`luaG_ru√º‹
(
L
, 
	`LUA_QL
("for") "Üimit must beáÇumber");

786 i‡(!
	`t⁄umbî
(
p°ï
, 
ø
+2))

787 
	`luaG_ru√º‹
(
L
, 
	`LUA_QL
("for") " step must beáÇumber");

788 
	`£ävÆue
(
ø
, 
	`luai_numsub
(
L
, 
	`nvÆue
‘a),ÇvÆue(
p°ï
)));

789 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

791 
	`vmˇ£nb
(
OP_TFORCALL
,

792 
StkId
 
cb
 = 
ø
 + 3;

793 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

794 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

795 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

796 
L
->
t›
 = 
cb
 + 3;

797 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
), 1));

798 
L
->
t›
 = 
ci
->top;

799 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

800 
ø
 = 
	`RA
(
i
);

801 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

802 
l_tf‹lo›
;

804 
	`vmˇ£
(
OP_TFORLOOP
,

805 
l_tf‹lo›
:

806 i‡(!
	`âi¢û
(
ø
 + 1)) {

807 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

808 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

811 
	`vmˇ£
(
OP_SETLIST
,

812 
n
 = 
	`GETARG_B
(
i
);

813 
c
 = 
	`GETARG_C
(
i
);

814 
œ°
;

815 
TabÀ
 *
h
;

816 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

817 i‡(
c
 == 0) {

818 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

819 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

821 
	`luai_ru¡imecheck
(
L
, 
	`âi°abÀ
(
ø
));

822 
h
 = 
	`hvÆue
(
ø
);

823 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

824 i‡(
œ°
 > 
h
->
sizóºay
)

825 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

826 ; 
n
 > 0;Ç--) {

827 
TVÆue
 *
vÆ
 = 
ø
+
n
;

828 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

829 
	`luaC_b¨rõrback
(
L
, 
	`obj2gco
(
h
), 
vÆ
);

831 
L
->
t›
 = 
ci
->top;

833 
	`vmˇ£
(
OP_CLOSURE
,

834 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

835 
Closuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

836 i‡(
n˛
 =
NULL
)

837 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

839 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

840 
	`checkGC
(
L
, 
ø
 + 1);

842 
	`vmˇ£
(
OP_VARARG
,

843 
b
 = 
	`GETARG_B
(
i
) - 1;

844 
j
;

845 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

846 i‡(
b
 < 0) {

847 
b
 = 
n
;

848 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

849 
ø
 = 
	`RA
(
i
);

850 
L
->
t›
 = 
ø
 + 
n
;

852 
j
 = 0; j < 
b
; j++) {

853 i‡(
j
 < 
n
) {

854 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

857 
	`£äûvÆue
(
ø
 + 
j
);

861 
	`vmˇ£
(
OP_EXTRAARG
,

862 
	`lua_as£π
(0);

866 
	}
}

	@lzio.c

10 
	#lzio_c


	)

11 
	#LUA_CORE


	)

12 
	~<«utûus/libccom∑t.h
>

13 
	~"lua/lua.h
"

15 
	~"lua/Œimôs.h
"

16 
	~"lua/lmem.h
"

17 
	~"lua/l°©e.h
"

18 
	~"lua/lzio.h
"

21 
	$luaZ_fûl
 (
ZIO
 *
z
) {

22 
size_t
 
size
;

23 
lua_Sèã
 *
L
 = 
z
->L;

24 c⁄° *
buff
;

25 
	`lua_u∆ock
(
L
);

26 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

27 
	`lua_lock
(
L
);

28 i‡(
buff
 =
NULL
 || 
size
 == 0)

29  
EOZ
;

30 
z
->
n
 = 
size
 - 1;

31 
z
->
p
 = 
buff
;

32  
	`ˇ°_uch¨
(*(
z
->
p
++));

33 
	}
}

36 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

37 
z
->
L
 = L;

38 
z
->
ªadî
 =Ñeader;

39 
z
->
d©a
 = data;

40 
z
->
n
 = 0;

41 
z
->
p
 = 
NULL
;

42 
	}
}

46 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

47 
n
) {

48 
size_t
 
m
;

49 i‡(
z
->
n
 == 0) {

50 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

51  
n
;

53 
z
->
n
++;

54 
z
->
p
--;

57 
m
 = (
n
 <
z
->n) ?Ç : z->n;

58 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

59 
z
->
n
 -
m
;

60 
z
->
p
 +
m
;

61 
b
 = (*)b + 
m
;

62 
n
 -
m
;

65 
	}
}

68 *
	$luaZ_›í•a˚
 (
lua_Sèã
 *
L
, 
Mbuf„r
 *
buff
, 
size_t
 
n
) {

69 i‡(
n
 > 
buff
->
buffsize
) {

70 i‡(
n
 < 
LUA_MINBUFFER
)Ç = LUA_MINBUFFER;

71 
	`luaZ_ªsizebuf„r
(
L
, 
buff
, 
n
);

73  
buff
->
buf„r
;

74 
	}
}

	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/readline/history.h

22 #i‚de‡
_HISTORY_H_


23 
	#_HISTORY_H_


	)

25 #ifde‡
__˝lu•lus


29 
	~<time.h
>

31 #i‡
deföed
 
READLINE_LIBRARY


32 
	~"æ°dc.h
"

33 
	~"æty≥defs.h
"

35 
	~<°dio.h
>

36 
	~<ªadlöe/æ°dc.h
>

37 
	~<ªadlöe/æty≥defs.h
>

40 #ifde‡
__STDC__


41 *
	thi°d©a_t
;

43 *
	thi°d©a_t
;

47 
	s_hi°_íåy
 {

48 *
löe
;

49 *
time°amp
;

50 
hi°d©a_t
 
d©a
;

51 } 
	tHIST_ENTRY
;

54 
	#HISTENT_BYTES
(
hs
Ë(
	`°æí
 ((hs)->
löe
Ë+ såÀ¿((hs)->
time°amp
))

	)

57 
	s_hi°_°©e
 {

58 
HIST_ENTRY
 **
íåõs
;

59 
off£t
;

60 
Àngth
;

61 
size
;

62 
Êags
;

63 } 
	tHISTORY_STATE
;

66 
	#HS_STIFLED
 0x01

	)

72 
usög_hi°‹y
 
PARAMS
(());

75 
HISTORY_STATE
 *
hi°‹y_gë_hi°‹y_°©e
 
PARAMS
(());

78 
hi°‹y_£t_hi°‹y_°©e
 
PARAMS
((
HISTORY_STATE
 *));

84 
add_hi°‹y
 
PARAMS
((const *));

88 
add_hi°‹y_time
 
PARAMS
((const *));

93 
HIST_ENTRY
 *
ªmove_hi°‹y
 
PARAMS
(());

97 
hi°d©a_t
 
‰ì_hi°‹y_íåy
 
PARAMS
((
HIST_ENTRY
 *));

102 
HIST_ENTRY
 *
ª∂a˚_hi°‹y_íåy
 
PARAMS
((, c⁄° *, 
hi°d©a_t
));

105 
˛ór_hi°‹y
 
PARAMS
(());

108 
°iÊe_hi°‹y
 
PARAMS
(());

113 
un°iÊe_hi°‹y
 
PARAMS
(());

116 
hi°‹y_is_°iÊed
 
PARAMS
(());

123 
HIST_ENTRY
 **
hi°‹y_li°
 
PARAMS
(());

127 
whîe_hi°‹y
 
PARAMS
(());

131 
HIST_ENTRY
 *
cuºít_hi°‹y
 
PARAMS
(());

135 
HIST_ENTRY
 *
hi°‹y_gë
 
PARAMS
(());

139 
time_t
 
hi°‹y_gë_time
 
PARAMS
((
HIST_ENTRY
 *));

143 
hi°‹y_tŸÆ_byãs
 
PARAMS
(());

148 
hi°‹y_£t_pos
 
PARAMS
(());

153 
HIST_ENTRY
 *
¥evious_hi°‹y
 
PARAMS
(());

158 
HIST_ENTRY
 *
√xt_hi°‹y
 
PARAMS
(());

168 
hi°‹y_£¨ch
 
PARAMS
((const *, ));

173 
hi°‹y_£¨ch_¥efix
 
PARAMS
((const *, ));

180 
hi°‹y_£¨ch_pos
 
PARAMS
((const *, , ));

187 
ªad_hi°‹y
 
PARAMS
((const *));

194 
ªad_hi°‹y_ønge
 
PARAMS
((const *, , ));

199 
wrôe_hi°‹y
 
PARAMS
((const *));

203 
≠≥nd_hi°‹y
 
PARAMS
((, const *));

206 
hi°‹y_åunˇã_fûe
 
PARAMS
((const *, ));

222 
hi°‹y_ex∑nd
 
PARAMS
((*, **));

227 *
hi°‹y_¨g_exåa˘
 
PARAMS
((, , const *));

235 *
gë_hi°‹y_evít
 
PARAMS
((const *, *, ));

239 **
hi°‹y_tokíize
 
PARAMS
((const *));

242 
hi°‹y_ba£
;

243 
hi°‹y_Àngth
;

244 
hi°‹y_max_íåõs
;

245 
hi°‹y_ex∑nsi⁄_ch¨
;

246 
hi°‹y_sub°_ch¨
;

247 *
hi°‹y_w‹d_dñimôîs
;

248 
hi°‹y_commít_ch¨
;

249 *
hi°‹y_no_ex∑nd_ch¨s
;

250 *
hi°‹y_£¨ch_dñimôî_ch¨s
;

251 
hi°‹y_quŸes_öhibô_ex∑nsi⁄
;

253 
hi°‹y_wrôe_time°amps
;

256 
max_öput_hi°‹y
;

261 
æ_löebuf_func_t
 *
hi°‹y_öhibô_ex∑nsi⁄_fun˘i⁄
;

263 #ifde‡
__˝lu•lus


	@/usr/include/readline/readline.h

22 #i‡!
deföed
 (
_READLINE_H_
)

23 
	#_READLINE_H_


	)

25 #ifde‡
__˝lu•lus


29 #i‡
deföed
 (
READLINE_LIBRARY
)

30 
	~"æ°dc.h
"

31 
	~"æty≥defs.h
"

32 
	~"keym≠s.h
"

33 
	~"tûde.h
"

35 
	~<°dio.h
>

36 
	~<ªadlöe/æ°dc.h
>

37 
	~<ªadlöe/æty≥defs.h
>

38 
	~<ªadlöe/keym≠s.h
>

39 
	~<ªadlöe/tûde.h
>

43 
	#RL_READLINE_VERSION
 0x0603

	)

44 
	#RL_VERSION_MAJOR
 6

	)

45 
	#RL_VERSION_MINOR
 3

	)

55 
	eundo_code
 { 
UNDO_DELETE
, 
UNDO_INSERT
, 
UNDO_BEGIN
, 
UNDO_END
 };

58 
	sundo_li°
 {

59 
undo_li°
 *
√xt
;

60 
°¨t
, 
íd
;

61 *
ãxt
;

62 
undo_code
 
wh©
;

63 } 
	tUNDO_LIST
;

66 
UNDO_LIST
 *
æ_undo_li°
;

69 
	s_funm≠
 {

70 c⁄° *
	g«me
;

71 
æ_comm™d_func_t
 *
	gfun˘i⁄
;

72 } 
	tFUNMAP
;

74 
FUNMAP
 **
funm≠
;

83 
æ_digô_¨gumít
 
PARAMS
((, ));

84 
æ_univîßl_¨gumít
 
PARAMS
((, ));

87 
æ_f‹w¨d_byã
 
PARAMS
((, ));

88 
æ_f‹w¨d_ch¨
 
PARAMS
((, ));

89 
æ_f‹w¨d
 
PARAMS
((, ));

90 
æ_backw¨d_byã
 
PARAMS
((, ));

91 
æ_backw¨d_ch¨
 
PARAMS
((, ));

92 
æ_backw¨d
 
PARAMS
((, ));

93 
æ_beg_of_löe
 
PARAMS
((, ));

94 
æ_íd_of_löe
 
PARAMS
((, ));

95 
æ_f‹w¨d_w‹d
 
PARAMS
((, ));

96 
æ_backw¨d_w‹d
 
PARAMS
((, ));

97 
æ_ª‰esh_löe
 
PARAMS
((, ));

98 
æ_˛ór_s¸ìn
 
PARAMS
((, ));

99 
æ_skù_csi_£quí˚
 
PARAMS
((, ));

100 
æ_¨row_keys
 
PARAMS
((, ));

103 
æ_ö£π
 
PARAMS
((, ));

104 
æ_quŸed_ö£π
 
PARAMS
((, ));

105 
æ_èb_ö£π
 
PARAMS
((, ));

106 
æ_√wlöe
 
PARAMS
((, ));

107 
æ_do_lowîˇ£_vîsi⁄
 
PARAMS
((, ));

108 
æ_rubout
 
PARAMS
((, ));

109 
æ_dñëe
 
PARAMS
((, ));

110 
æ_rubout_‹_dñëe
 
PARAMS
((, ));

111 
æ_dñëe_h‹iz⁄èl_•a˚
 
PARAMS
((, ));

112 
æ_dñëe_‹_show_com∂ëi⁄s
 
PARAMS
((, ));

113 
æ_ö£π_commít
 
PARAMS
((, ));

116 
æ_upˇ£_w‹d
 
PARAMS
((, ));

117 
æ_downˇ£_w‹d
 
PARAMS
((, ));

118 
æ_ˇpôÆize_w‹d
 
PARAMS
((, ));

121 
æ_å™•o£_w‹ds
 
PARAMS
((, ));

122 
æ_å™•o£_ch¨s
 
PARAMS
((, ));

125 
æ_ch¨_£¨ch
 
PARAMS
((, ));

126 
æ_backw¨d_ch¨_£¨ch
 
PARAMS
((, ));

129 
æ_begönög_of_hi°‹y
 
PARAMS
((, ));

130 
æ_íd_of_hi°‹y
 
PARAMS
((, ));

131 
æ_gë_√xt_hi°‹y
 
PARAMS
((, ));

132 
æ_gë_¥evious_hi°‹y
 
PARAMS
((, ));

135 
æ_£t_m¨k
 
PARAMS
((, ));

136 
æ_exch™ge_poöt_™d_m¨k
 
PARAMS
((, ));

139 
æ_vi_edôög_mode
 
PARAMS
((, ));

140 
æ_emacs_edôög_mode
 
PARAMS
((, ));

143 
æ_ovîwrôe_mode
 
PARAMS
((, ));

146 
æ_ª_ªad_öô_fûe
 
PARAMS
((, ));

147 
æ_dump_fun˘i⁄s
 
PARAMS
((, ));

148 
æ_dump_ma¸os
 
PARAMS
((, ));

149 
æ_dump_v¨übÀs
 
PARAMS
((, ));

152 
æ_com∂ëe
 
PARAMS
((, ));

153 
æ_possibÀ_com∂ëi⁄s
 
PARAMS
((, ));

154 
æ_ö£π_com∂ëi⁄s
 
PARAMS
((, ));

155 
æ_ﬁd_míu_com∂ëe
 
PARAMS
((, ));

156 
æ_míu_com∂ëe
 
PARAMS
((, ));

157 
æ_backw¨d_míu_com∂ëe
 
PARAMS
((, ));

160 
æ_kûl_w‹d
 
PARAMS
((, ));

161 
æ_backw¨d_kûl_w‹d
 
PARAMS
((, ));

162 
æ_kûl_löe
 
PARAMS
((, ));

163 
æ_backw¨d_kûl_löe
 
PARAMS
((, ));

164 
æ_kûl_fuŒ_löe
 
PARAMS
((, ));

165 
æ_unix_w‹d_rubout
 
PARAMS
((, ));

166 
æ_unix_fûíame_rubout
 
PARAMS
((, ));

167 
æ_unix_löe_disˇrd
 
PARAMS
((, ));

168 
æ_c›y_ªgi⁄_to_kûl
 
PARAMS
((, ));

169 
æ_kûl_ªgi⁄
 
PARAMS
((, ));

170 
æ_c›y_f‹w¨d_w‹d
 
PARAMS
((, ));

171 
æ_c›y_backw¨d_w‹d
 
PARAMS
((, ));

172 
æ_y™k
 
PARAMS
((, ));

173 
æ_y™k_p›
 
PARAMS
((, ));

174 
æ_y™k_¡h_¨g
 
PARAMS
((, ));

175 
æ_y™k_œ°_¨g
 
PARAMS
((, ));

177 #ifde‡
__CYGWIN__


178 
æ_∑°e_‰om_˛ùbﬂrd
 
PARAMS
((, ));

182 
æ_ªvî£_£¨ch_hi°‹y
 
PARAMS
((, ));

183 
æ_f‹w¨d_£¨ch_hi°‹y
 
PARAMS
((, ));

186 
æ_°¨t_kbd_ma¸o
 
PARAMS
((, ));

187 
æ_íd_kbd_ma¸o
 
PARAMS
((, ));

188 
æ_ˇŒ_œ°_kbd_ma¸o
 
PARAMS
((, ));

189 
æ_¥öt_œ°_kbd_ma¸o
 
PARAMS
((, ));

192 
æ_ªvît_löe
 
PARAMS
((, ));

193 
æ_undo_comm™d
 
PARAMS
((, ));

196 
æ_tûde_ex∑nd
 
PARAMS
((, ));

199 
æ_ª°¨t_ouçut
 
PARAMS
((, ));

200 
æ_°›_ouçut
 
PARAMS
((, ));

203 
æ_ab‹t
 
PARAMS
((, ));

204 
æ_ây_°©us
 
PARAMS
((, ));

207 
æ_hi°‹y_£¨ch_f‹w¨d
 
PARAMS
((, ));

208 
æ_hi°‹y_£¨ch_backw¨d
 
PARAMS
((, ));

209 
æ_hi°‹y_sub°r_£¨ch_f‹w¨d
 
PARAMS
((, ));

210 
æ_hi°‹y_sub°r_£¨ch_backw¨d
 
PARAMS
((, ));

211 
æ_n⁄öc_f‹w¨d_£¨ch
 
PARAMS
((, ));

212 
æ_n⁄öc_ªvî£_£¨ch
 
PARAMS
((, ));

213 
æ_n⁄öc_f‹w¨d_£¨ch_agaö
 
PARAMS
((, ));

214 
æ_n⁄öc_ªvî£_£¨ch_agaö
 
PARAMS
((, ));

217 
æ_ö£π_˛o£
 
PARAMS
((, ));

220 
æ_ˇŒback_h™dÀr_ö°Æl
 
PARAMS
((c⁄° *, 
æ_v˝func_t
 *));

221 
æ_ˇŒback_ªad_ch¨
 
PARAMS
(());

222 
æ_ˇŒback_h™dÀr_ªmove
 
PARAMS
(());

226 
æ_vi_ªdo
 
PARAMS
((, ));

227 
æ_vi_undo
 
PARAMS
((, ));

228 
æ_vi_y™k_¨g
 
PARAMS
((, ));

229 
æ_vi_„tch_hi°‹y
 
PARAMS
((, ));

230 
æ_vi_£¨ch_agaö
 
PARAMS
((, ));

231 
æ_vi_£¨ch
 
PARAMS
((, ));

232 
æ_vi_com∂ëe
 
PARAMS
((, ));

233 
æ_vi_tûde_ex∑nd
 
PARAMS
((, ));

234 
æ_vi_¥ev_w‹d
 
PARAMS
((, ));

235 
æ_vi_√xt_w‹d
 
PARAMS
((, ));

236 
æ_vi_íd_w‹d
 
PARAMS
((, ));

237 
æ_vi_ö£π_beg
 
PARAMS
((, ));

238 
æ_vi_≠≥nd_mode
 
PARAMS
((, ));

239 
æ_vi_≠≥nd_eﬁ
 
PARAMS
((, ));

240 
æ_vi_eof_maybe
 
PARAMS
((, ));

241 
æ_vi_ö£πi⁄_mode
 
PARAMS
((, ));

242 
æ_vi_ö£π_mode
 
PARAMS
((, ));

243 
æ_vi_movemít_mode
 
PARAMS
((, ));

244 
æ_vi_¨g_digô
 
PARAMS
((, ));

245 
æ_vi_ch™ge_ˇ£
 
PARAMS
((, ));

246 
æ_vi_put
 
PARAMS
((, ));

247 
æ_vi_cﬁumn
 
PARAMS
((, ));

248 
æ_vi_dñëe_to
 
PARAMS
((, ));

249 
æ_vi_ch™ge_to
 
PARAMS
((, ));

250 
æ_vi_y™k_to
 
PARAMS
((, ));

251 
æ_vi_rubout
 
PARAMS
((, ));

252 
æ_vi_dñëe
 
PARAMS
((, ));

253 
æ_vi_back_to_ödít
 
PARAMS
((, ));

254 
æ_vi_fú°_¥öt
 
PARAMS
((, ));

255 
æ_vi_ch¨_£¨ch
 
PARAMS
((, ));

256 
æ_vi_m©ch
 
PARAMS
((, ));

257 
æ_vi_ch™ge_ch¨
 
PARAMS
((, ));

258 
æ_vi_sub°
 
PARAMS
((, ));

259 
æ_vi_ovî°rike
 
PARAMS
((, ));

260 
æ_vi_ovî°rike_dñëe
 
PARAMS
((, ));

261 
æ_vi_ª∂a˚
 
PARAMS
((, ));

262 
æ_vi_£t_m¨k
 
PARAMS
((, ));

263 
æ_vi_gŸo_m¨k
 
PARAMS
((, ));

266 
æ_vi_check
 
PARAMS
(());

267 
æ_vi_domove
 
PARAMS
((, *));

268 
æ_vi_bøckty≥
 
PARAMS
(());

270 
æ_vi_°¨t_ö£πög
 
PARAMS
((, , ));

273 
æ_vi_fW‹d
 
PARAMS
((, ));

274 
æ_vi_bW‹d
 
PARAMS
((, ));

275 
æ_vi_eW‹d
 
PARAMS
((, ));

276 
æ_vi_fw‹d
 
PARAMS
((, ));

277 
æ_vi_bw‹d
 
PARAMS
((, ));

278 
æ_vi_ew‹d
 
PARAMS
((, ));

288 *
ªadlöe
 
PARAMS
((const *));

290 
æ_£t_¥om±
 
PARAMS
((const *));

291 
æ_ex∑nd_¥om±
 
PARAMS
((*));

293 
æ_öôülize
 
PARAMS
(());

296 
æ_disˇrd_¨gumít
 
PARAMS
(());

299 
æ_add_defun
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, ));

300 
æ_böd_key
 
PARAMS
((, 
æ_comm™d_func_t
 *));

301 
æ_böd_key_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

302 
æ_unböd_key
 
PARAMS
(());

303 
æ_unböd_key_ö_m≠
 
PARAMS
((, 
Keym≠
));

304 
æ_böd_key_if_unbound
 
PARAMS
((, 
æ_comm™d_func_t
 *));

305 
æ_böd_key_if_unbound_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

306 
æ_unböd_fun˘i⁄_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

307 
æ_unböd_comm™d_ö_m≠
 
PARAMS
((c⁄° *, 
Keym≠
));

308 
æ_böd_key£q
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

309 
æ_böd_key£q_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

310 
æ_böd_key£q_if_unbound
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

311 
æ_böd_key£q_if_unbound_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

312 
æ_gíîic_böd
 
PARAMS
((, c⁄° *, *, 
Keym≠
));

314 *
æ_v¨übÀ_vÆue
 
PARAMS
((const *));

315 
æ_v¨übÀ_böd
 
PARAMS
((const *, const *));

318 
æ_£t_key
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

321 
æ_ma¸o_böd
 
PARAMS
((c⁄° *, c⁄° *, 
Keym≠
));

324 
æ_å™¶©e_key£q
 
PARAMS
((const *, *, *));

325 *
æ_u¡øn¶©e_key£q
 
PARAMS
(());

327 
æ_comm™d_func_t
 *
æ_«med_fun˘i⁄
 
PARAMS
((const *));

328 
æ_comm™d_func_t
 *
æ_fun˘i⁄_of_key£q
 
PARAMS
((c⁄° *, 
Keym≠
, *));

330 
æ_li°_funm≠_«mes
 
PARAMS
(());

331 **
æ_övokög_key£qs_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

332 **
æ_övokög_key£qs
 
PARAMS
((
æ_comm™d_func_t
 *));

334 
æ_fun˘i⁄_dum≥r
 
PARAMS
(());

335 
æ_ma¸o_dum≥r
 
PARAMS
(());

336 
æ_v¨übÀ_dum≥r
 
PARAMS
(());

338 
æ_ªad_öô_fûe
 
PARAMS
((const *));

339 
æ_∑r£_™d_böd
 
PARAMS
((*));

342 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

343 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

344 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

345 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

346 
æ_‰ì_keym≠
 
PARAMS
((
Keym≠
));

348 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

349 *
æ_gë_keym≠_«me
 
PARAMS
((
Keym≠
));

350 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

351 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

353 
æ_£t_keym≠_‰om_edô_mode
 
PARAMS
(());

354 *
æ_gë_keym≠_«me_‰om_edô_mode
 
PARAMS
(());

357 
æ_add_funm≠_íåy
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

358 c⁄° **
æ_funm≠_«mes
 
PARAMS
(());

361 
æ_öôülize_funm≠
 
PARAMS
(());

364 
æ_push_ma¸o_öput
 
PARAMS
((*));

367 
æ_add_undo
 
PARAMS
((
undo_code
, , , *));

368 
æ_‰ì_undo_li°
 
PARAMS
(());

369 
æ_do_undo
 
PARAMS
(());

370 
æ_begö_undo_group
 
PARAMS
(());

371 
æ_íd_undo_group
 
PARAMS
(());

372 
æ_modifyög
 
PARAMS
((, ));

375 
æ_ªdi•œy
 
PARAMS
(());

376 
æ_⁄_√w_löe
 
PARAMS
(());

377 
æ_⁄_√w_löe_wôh_¥om±
 
PARAMS
(());

378 
æ_f‹˚d_upd©e_di•œy
 
PARAMS
(());

379 
æ_˛ór_mesßge
 
PARAMS
(());

380 
æ_ª£t_löe_°©e
 
PARAMS
(());

381 
æ_¸lf
 
PARAMS
(());

383 #i‡
deföed
 (
USE_VARARGS
Ë&& deföed (
PREFER_STDARG
)

384 
æ_mesßge
 (c⁄° *, ...Ë
__æ_©åibuã__
((
__f‹m©__
 (
¥ötf
, 1, 2)));

386 
æ_mesßge
 ();

389 
æ_show_ch¨
 
PARAMS
(());

392 
æ_ch¨a˘î_Àn
 
PARAMS
((, ));

395 
æ_ßve_¥om±
 
PARAMS
(());

396 
æ_ª°‹e_¥om±
 
PARAMS
(());

399 
æ_ª∂a˚_löe
 
PARAMS
((const *, ));

400 
æ_ö£π_ãxt
 
PARAMS
((const *));

401 
æ_dñëe_ãxt
 
PARAMS
((, ));

402 
æ_kûl_ãxt
 
PARAMS
((, ));

403 *
æ_c›y_ãxt
 
PARAMS
((, ));

406 
æ_¥ï_ãrmöÆ
 
PARAMS
(());

407 
æ_dïªp_ãrmöÆ
 
PARAMS
(());

408 
æ_ây_£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

409 
æ_ây_un£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

411 
æ_ª£t_ãrmöÆ
 
PARAMS
((const *));

412 
æ_ªsize_ãrmöÆ
 
PARAMS
(());

413 
æ_£t_s¸ìn_size
 
PARAMS
((, ));

414 
æ_gë_s¸ìn_size
 
PARAMS
((*, *));

415 
æ_ª£t_s¸ìn_size
 
PARAMS
(());

417 *
æ_gë_ãrmˇp
 
PARAMS
((const *));

420 
æ_°uff_ch¨
 
PARAMS
(());

421 
æ_execuã_√xt
 
PARAMS
(());

422 
æ_˛ór_≥ndög_öput
 
PARAMS
(());

423 
æ_ªad_key
 
PARAMS
(());

424 
æ_gëc
 
PARAMS
((
FILE
 *));

425 
æ_£t_keybﬂrd_öput_timeout
 
PARAMS
(());

428 
æ_exãnd_löe_buf„r
 
PARAMS
(());

429 
æ_dög
 
PARAMS
(());

430 
æ_Æphabëic
 
PARAMS
(());

431 
æ_‰ì
 
PARAMS
((*));

434 
æ_£t_sig«ls
 
PARAMS
(());

435 
æ_˛ór_sig«ls
 
PARAMS
(());

436 
æ_˛ónup_a·î_sig«l
 
PARAMS
(());

437 
æ_ª£t_a·î_sig«l
 
PARAMS
(());

438 
æ_‰ì_löe_°©e
 
PARAMS
(());

440 
æ_echo_sig«l_ch¨
 
PARAMS
(());

442 
æ_£t_∑ªn_blök_timeout
 
PARAMS
(());

446 
æ_˛ór_hi°‹y
 
PARAMS
(());

449 
æ_maybe_ßve_löe
 
PARAMS
(());

450 
æ_maybe_unßve_löe
 
PARAMS
(());

451 
æ_maybe_ª∂a˚_löe
 
PARAMS
(());

454 
æ_com∂ëe_öã∫Æ
 
PARAMS
(());

455 
æ_di•œy_m©ch_li°
 
PARAMS
((**, , ));

457 **
æ_com∂ëi⁄_m©ches
 
PARAMS
((c⁄° *, 
æ_com≥¡ry_func_t
 *));

458 *
æ_u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

459 *
æ_fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

461 
æ_com∂ëi⁄_mode
 
PARAMS
((
æ_comm™d_func_t
 *));

465 
‰ì_undo_li°
 
PARAMS
(());

466 
maybe_ßve_löe
 
PARAMS
(());

467 
maybe_unßve_löe
 
PARAMS
(());

468 
maybe_ª∂a˚_löe
 
PARAMS
(());

470 
dög
 
PARAMS
(());

471 
Æphabëic
 
PARAMS
(());

472 
¸lf
 
PARAMS
(());

474 **
com∂ëi⁄_m©ches
 
PARAMS
((*, 
æ_com≥¡ry_func_t
 *));

475 *
u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

476 *
fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

486 c⁄° *
æ_libøry_vîsi⁄
;

487 
æ_ªadlöe_vîsi⁄
;

490 
æ_gnu_ªadlöe_p
;

493 
æ_ªadlöe_°©e
;

497 
æ_edôög_mode
;

501 
æ_ö£π_mode
;

505 c⁄° *
æ_ªadlöe_«me
;

509 *
æ_¥om±
;

513 *
æ_di•œy_¥om±
;

516 *
æ_löe_buf„r
;

519 
æ_poöt
;

520 
æ_íd
;

523 
æ_m¨k
;

527 
æ_d⁄e
;

530 
æ_≥ndög_öput
;

535 
æ_di•©chög
;

539 
æ_ex∂icô_¨g
;

542 
æ_numîic_¨g
;

545 
æ_comm™d_func_t
 *
æ_œ°_func
;

548 c⁄° *
æ_ãrmöÆ_«me
;

551 
FILE
 *
æ_ö°ªam
;

552 
FILE
 *
æ_out°ªam
;

557 
æ_¥e„r_ív_wösize
;

561 
æ_hook_func_t
 *
æ_°¨tup_hook
;

566 
æ_hook_func_t
 *
æ_¥e_öput_hook
;

570 
æ_hook_func_t
 *
æ_evít_hook
;

573 
æ_hook_func_t
 *
æ_sig«l_evít_hook
;

577 
æ_hook_func_t
 *
æ_öput_avaûabÀ_hook
;

581 
æ_gëc_func_t
 *
æ_gëc_fun˘i⁄
;

583 
æ_voidfunc_t
 *
æ_ªdi•œy_fun˘i⁄
;

585 
æ_vötfunc_t
 *
æ_¥ï_ãrm_fun˘i⁄
;

586 
æ_voidfunc_t
 *
æ_dïªp_ãrm_fun˘i⁄
;

589 
Keym≠
 
æ_executög_keym≠
;

590 
Keym≠
 
æ_bödög_keym≠
;

592 
æ_executög_key
;

593 *
æ_executög_key£q
;

594 
æ_key_£quí˚_Àngth
;

600 
æ_îa£_em±y_löe
;

605 
æ_Æªady_¥om±ed
;

609 
æ_num_ch¨s_to_ªad
;

612 *
æ_executög_ma¸o
;

617 
æ_ˇtch_sig«ls
;

624 
æ_ˇtch_sigwöch
;

628 
æ_ch™ge_ívú⁄mít
;

634 
æ_com≥¡ry_func_t
 *
æ_com∂ëi⁄_íåy_fun˘i⁄
;

638 
æ_com≥¡ry_func_t
 *
æ_míu_com∂ëi⁄_íåy_fun˘i⁄
;

646 
æ_compign‹e_func_t
 *
æ_ign‹e_some_com∂ëi⁄s_fun˘i⁄
;

655 
æ_com∂ëi⁄_func_t
 *
æ_©ãm±ed_com∂ëi⁄_fun˘i⁄
;

660 c⁄° *
æ_basic_w‹d_bªak_ch¨a˘îs
;

665 *
æ_com∂ëî_w‹d_bªak_ch¨a˘îs
;

670 
æ_˝vfunc_t
 *
æ_com∂ëi⁄_w‹d_bªak_hook
;

676 c⁄° *
æ_com∂ëî_quŸe_ch¨a˘îs
;

679 c⁄° *
æ_basic_quŸe_ch¨a˘îs
;

682 c⁄° *
æ_fûíame_quŸe_ch¨a˘îs
;

687 c⁄° *
æ_•ecül_¥efixes
;

698 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_com∂ëi⁄_hook
;

711 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_ªwrôe_hook
;

718 
æ_i˝pfunc_t
 *
æ_fûíame_°©_hook
;

729 
æ_dequŸe_func_t
 *
æ_fûíame_ªwrôe_hook
;

732 
	#æ_symbﬁic_lök_hook
 
æ_dúe˘‹y_com∂ëi⁄_hook


	)

741 
æ_compdi•_func_t
 *
æ_com∂ëi⁄_di•œy_m©ches_hook
;

746 
æ_fûíame_com∂ëi⁄_desúed
;

753 
æ_fûíame_quŸög_desúed
;

759 
æ_quŸe_func_t
 *
æ_fûíame_quŸög_fun˘i⁄
;

764 
æ_dequŸe_func_t
 *
æ_fûíame_dequŸög_fun˘i⁄
;

769 
æ_löebuf_func_t
 *
æ_ch¨_is_quŸed_p
;

773 
æ_©ãm±ed_com∂ëi⁄_ovî
;

778 
æ_com∂ëi⁄_ty≥
;

781 
æ_com∂ëi⁄_övokög_key
;

786 
æ_com∂ëi⁄_quîy_ôems
;

790 
æ_com∂ëi⁄_≠≥nd_ch¨a˘î
;

794 
æ_com∂ëi⁄_suµªss_≠≥nd
;

798 
æ_com∂ëi⁄_quŸe_ch¨a˘î
;

802 
æ_com∂ëi⁄_found_quŸe
;

807 
æ_com∂ëi⁄_suµªss_quŸe
;

810 
æ_s‹t_com∂ëi⁄_m©ches
;

821 
æ_com∂ëi⁄_m¨k_symlök_dús
;

824 
æ_ign‹e_com∂ëi⁄_du∂iˇãs
;

828 
æ_öhibô_com∂ëi⁄
;

832 
	#READERR
 (-2)

	)

835 
	#RL_PROMPT_START_IGNORE
 '\001'

	)

836 
	#RL_PROMPT_END_IGNORE
 '\002'

	)

840 
	#NO_MATCH
 0

	)

841 
	#SINGLE_MATCH
 1

	)

842 
	#MULT_MATCH
 2

	)

845 
	#RL_STATE_NONE
 0x000000

	)

847 
	#RL_STATE_INITIALIZING
 0x0000001

	)

848 
	#RL_STATE_INITIALIZED
 0x0000002

	)

849 
	#RL_STATE_TERMPREPPED
 0x0000004

	)

850 
	#RL_STATE_READCMD
 0x0000008

	)

851 
	#RL_STATE_METANEXT
 0x0000010

	)

852 
	#RL_STATE_DISPATCHING
 0x0000020

	)

853 
	#RL_STATE_MOREINPUT
 0x0000040

	)

854 
	#RL_STATE_ISEARCH
 0x0000080

	)

855 
	#RL_STATE_NSEARCH
 0x0000100

	)

856 
	#RL_STATE_SEARCH
 0x0000200

	)

857 
	#RL_STATE_NUMERICARG
 0x0000400

	)

858 
	#RL_STATE_MACROINPUT
 0x0000800

	)

859 
	#RL_STATE_MACRODEF
 0x0001000

	)

860 
	#RL_STATE_OVERWRITE
 0x0002000

	)

861 
	#RL_STATE_COMPLETING
 0x0004000

	)

862 
	#RL_STATE_SIGHANDLER
 0x0008000

	)

863 
	#RL_STATE_UNDOING
 0x0010000

	)

864 
	#RL_STATE_INPUTPENDING
 0x0020000

	)

865 
	#RL_STATE_TTYCSAVED
 0x0040000

	)

866 
	#RL_STATE_CALLBACK
 0x0080000

	)

867 
	#RL_STATE_VIMOTION
 0x0100000

	)

868 
	#RL_STATE_MULTIKEY
 0x0200000

	)

869 
	#RL_STATE_VICMDONCE
 0x0400000

	)

870 
	#RL_STATE_REDISPLAYING
 0x0800000

	)

872 
	#RL_STATE_DONE
 0x1000000

	)

874 
	#RL_SETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 |(x))

	)

875 
	#RL_UNSETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 &~(x))

	)

876 
	#RL_ISSTATE
(
x
Ë(
æ_ªadlöe_°©e
 & (x))

	)

878 
	sªadlöe_°©e
 {

880 
	gpoöt
;

881 
	gíd
;

882 
	gm¨k
;

883 *
	gbuf„r
;

884 
	gbuÊí
;

885 
UNDO_LIST
 *
	gul
;

886 *
	g¥om±
;

889 
	gæ°©e
;

890 
	gd⁄e
;

891 
Keym≠
 
	gkm≠
;

894 
æ_comm™d_func_t
 *
	gœ°func
;

895 
	gösmode
;

896 
	gedmode
;

897 
	gk£qÀn
;

898 
FILE
 *
	göf
;

899 
FILE
 *
	goutf
;

900 
	g≥ndögö
;

901 *
	gma¸o
;

904 
	gˇtchsigs
;

905 
	gˇtchsigwöch
;

914 
	gª£rved
[64];

917 
æ_ßve_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

918 
æ_ª°‹e_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

920 #ifde‡
__˝lu•lus


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/readline/keymaps.h

22 #i‚de‡
_KEYMAPS_H_


23 
	#_KEYMAPS_H_


	)

25 #ifde‡
__˝lu•lus


29 #i‡
deföed
 (
READLINE_LIBRARY
)

30 
	~"æ°dc.h
"

31 
	~"ch¨defs.h
"

32 
	~"æty≥defs.h
"

34 
	~<ªadlöe/æ°dc.h
>

35 
	~<ªadlöe/ch¨defs.h
>

36 
	~<ªadlöe/æty≥defs.h
>

44 
	s_keym≠_íåy
 {

45 
ty≥
;

46 
æ_comm™d_func_t
 *
fun˘i⁄
;

47 } 
	tKEYMAP_ENTRY
;

52 
	#KEYMAP_SIZE
 257

	)

53 
	#ANYOTHERKEY
 
KEYMAP_SIZE
-1

	)

55 
KEYMAP_ENTRY
 
	tKEYMAP_ENTRY_ARRAY
[
KEYMAP_SIZE
];

56 
KEYMAP_ENTRY
 *
	tKeym≠
;

59 
	#ISFUNC
 0

	)

60 
	#ISKMAP
 1

	)

61 
	#ISMACR
 2

	)

63 
KEYMAP_ENTRY_ARRAY
 
emacs_°™d¨d_keym≠
, 
emacs_mëa_keym≠
, 
emacs_˘lx_keym≠
;

64 
KEYMAP_ENTRY_ARRAY
 
vi_ö£πi⁄_keym≠
, 
vi_movemít_keym≠
;

68 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

71 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

76 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

79 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

85 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

88 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

91 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

93 #ifde‡
__˝lu•lus


	@/usr/include/readline/rlstdc.h

22 #i‡!
deföed
 (
_RL_STDC_H_
)

23 
	#_RL_STDC_H_


	)

31 #i‡!
deföed
 (
PARAMS
)

32 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

33 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

35 
	#PARAMS
(
¥Ÿos
Ë()

	)

39 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 2

40 
	#__æ_©åibuã__
(
x
Ë
	`__©åibuã__
(x)

	)

42 
	#__æ_©åibuã__
(
x
)

	)

47 #i‡
deföed
 (
__STDC__
Ë&& deföed (
HAVE_STDARG_H
)

48 
	#PREFER_STDARG


	)

49 
	#USE_VARARGS


	)

51 #i‡
deföed
 (
HAVE_VARARGS_H
)

52 
	#PREFER_VARARGS


	)

53 
	#USE_VARARGS


	)

	@/usr/include/readline/rltypedefs.h

22 #i‚de‡
_RL_TYPEDEFS_H_


23 
	#_RL_TYPEDEFS_H_


	)

25 #ifde‡
__˝lu•lus


31 #i‡!
deföed
 (
_RL_FUNCTION_TYPEDEF
)

32 
	#_RL_FUNCTION_TYPEDEF


	)

35 
	tæ_comm™d_func_t
 
	tPARAMS
((, ));

38 *
	tæ_com≥¡ry_func_t
 
	tPARAMS
((const *, ));

39 **
	tæ_com∂ëi⁄_func_t
 
	tPARAMS
((const *, , ));

41 *
	tæ_quŸe_func_t
 
	tPARAMS
((*, , *));

42 *
	tæ_dequŸe_func_t
 
	tPARAMS
((*, ));

44 
	tæ_compign‹e_func_t
 
	tPARAMS
((**));

46 
	tæ_compdi•_func_t
 
	tPARAMS
((**, , ));

49 
	tæ_hook_func_t
 
	tPARAMS
(());

52 
	tæ_gëc_func_t
 
	tPARAMS
((
	tFILE
 *));

57 
	tæ_löebuf_func_t
 
	tPARAMS
((*, ));

60 
	tæ_ötfunc_t
 
	tPARAMS
(());

61 
	#æ_ivoidfunc_t
 
æ_hook_func_t


	)

62 
	tæ_i˝func_t
 
	tPARAMS
((*));

63 
	tæ_i˝pfunc_t
 
	tPARAMS
((**));

65 
	tæ_voidfunc_t
 
	tPARAMS
(());

66 
	tæ_vötfunc_t
 
	tPARAMS
(());

67 
	tæ_v˝func_t
 
	tPARAMS
((*));

68 
	tæ_v˝pfunc_t
 
	tPARAMS
((**));

70 *
	tæ_˝vfunc_t
 
	tPARAMS
(());

71 *
	tæ_˝ifunc_t
 
	tPARAMS
(());

72 *
	tæ_˝˝func_t
 
	tPARAMS
((*));

73 *
	tæ_˝˝pfunc_t
 
	tPARAMS
((**));

77 #ifde‡
__˝lu•lus


	@/usr/include/readline/tilde.h

23 #i‡!
deföed
 (
_TILDE_H_
)

24 
	#_TILDE_H_


	)

26 #ifde‡
__˝lu•lus


34 #i‡!
deföed
 (
PARAMS
)

35 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

36 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

38 
	#PARAMS
(
¥Ÿos
Ë()

	)

42 *
	ttûde_hook_func_t
 
	tPARAMS
((*));

48 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_¥ìx∑nsi⁄_hook
;

54 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_Áûuª_hook
;

59 **
tûde_addôi⁄Æ_¥efixes
;

64 **
tûde_addôi⁄Æ_suffixes
;

67 *
tûde_ex∑nd
 
PARAMS
((const *));

71 *
tûde_ex∑nd_w‹d
 
PARAMS
((const *));

74 *
tûde_föd_w‹d
 
PARAMS
((const *, , *));

76 #ifde‡
__˝lu•lus


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/readline/chardefs.h

22 #i‚de‡
_CHARDEFS_H_


23 
	#_CHARDEFS_H_


	)

25 
	~<˘y≥.h
>

27 
	~<°rög.h
>

29 #i‚de‡
whôe•a˚


30 
	#whôe•a˚
(
c
Ë(((cË=' 'Ë|| ((cË='\t'))

	)

33 #ifde‡
CTRL


34 #unde‡
CTRL


36 #ifde‡
UNCTRL


37 #unde‡
UNCTRL


41 
	#c⁄åﬁ_ch¨a˘î_thªshﬁd
 0x020

	)

42 
	#c⁄åﬁ_ch¨a˘î_mask
 0x1‡

	)

43 
	#mëa_ch¨a˘î_thªshﬁd
 0x07‡

	)

44 
	#c⁄åﬁ_ch¨a˘î_bô
 0x40

	)

45 
	#mëa_ch¨a˘î_bô
 0x080

	)

46 
	#œrge°_ch¨
 255

	)

48 
	#CTRL_CHAR
(
c
Ë((cË< 
c⁄åﬁ_ch¨a˘î_thªshﬁd
 && (((cË& 0x80Ë=0))

	)

49 
	#META_CHAR
(
c
Ë((cË> 
mëa_ch¨a˘î_thªshﬁd
 && (cË<
œrge°_ch¨
)

	)

51 
	#CTRL
(
c
Ë((cË& 
c⁄åﬁ_ch¨a˘î_mask
)

	)

52 
	#META
(
c
Ë((cË| 
mëa_ch¨a˘î_bô
)

	)

54 
	#UNMETA
(
c
Ë((cË& (~
mëa_ch¨a˘î_bô
))

	)

55 
	#UNCTRL
(
c
Ë
	`_æ_to_uµî
(((c)|
c⁄åﬁ_ch¨a˘î_bô
))

	)

57 #i‡
deföed
 
STDC_HEADERS
 || (!deföed (
ißscii
Ë&& !deföed (
HAVE_ISASCII
))

58 
	#IN_CTYPE_DOMAIN
(
c
Ë1

	)

60 
	#IN_CTYPE_DOMAIN
(
c
Ë
	`ißscii
(c)

	)

63 #i‡!
deföed
 (
isxdigô
Ë&& !deföed (
HAVE_ISXDIGIT
Ë&& !deföed (
__˝lu•lus
)

64 
	#isxdigô
(
c
Ë(
	`isdigô
((c)Ë|| ((cË>'a' && (cË<'f'Ë|| ((cË>'A' && (cË<'F'))

	)

67 #i‡
deföed
 (
CTYPE_NON_ASCII
)

68 
	#NON_NEGATIVE
(
c
Ë1

	)

70 
	#NON_NEGATIVE
(
c
Ë(()(cË=(c))

	)

74 #unde‡
ISPRINT


78 
	#ISALNUM
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`iß um
 (c))

	)

79 
	#ISALPHA
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`ißÕha
 (c))

	)

80 
	#ISDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isdigô
 (c))

	)

81 
	#ISLOWER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i¶owî
 (c))

	)

82 
	#ISPRINT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•röt
 (c))

	)

83 
	#ISUPPER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isuµî
 (c))

	)

84 
	#ISXDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isxdigô
 (c))

	)

86 
	#_æ_lowîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISLOWER
(c))

	)

87 
	#_æ_uµîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISUPPER
(c))

	)

88 
	#_æ_digô_p
(
c
Ë((cË>'0' && (cË<'9')

	)

90 
	#_æ_puª_Æphabëic
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALPHA
(c))

	)

91 
	#ALPHABETIC
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALNUM
(c))

	)

93 #i‚de‡
_æ_to_uµî


94 
	#_æ_to_uµî
(
c
Ë(
	`_æ_lowîˇ£_p
(cË? 
	`touµî
(()cË: (c))

	)

95 
	#_æ_to_lowî
(
c
Ë(
	`_æ_uµîˇ£_p
(cË? 
	`tﬁowî
(()cË: (c))

	)

98 #i‚de‡
_æ_digô_vÆue


99 
	#_æ_digô_vÆue
(
x
Ë((xË- '0')

	)

102 #i‚de‡
_æ_isidít


103 
	#_æ_isidít
(
c
Ë(
	`ISALNUM
(cË|| (cË='_')

	)

106 #i‚de‡
ISOCTAL


107 
	#ISOCTAL
(
c
Ë((cË>'0' && (cË<'7')

	)

109 
	#OCTVALUE
(
c
Ë((cË- '0')

	)

111 
	#HEXVALUE
(
c
) \

112 (((
c
) >= 'a' && (c) <= 'f') \

113 ? (
c
)-'a'+10 \

114 : (
c
Ë>'A' && (cË<'F' ? (c)-'A'+10 : (c)-'0')

	)

116 #i‚de‡
NEWLINE


117 
	#NEWLINE
 '\n'

	)

120 #i‚de‡
RETURN


121 
	#RETURN
 
	`CTRL
('M')

	)

124 #i‚de‡
RUBOUT


125 
	#RUBOUT
 0x7f

	)

128 #i‚de‡
TAB


129 
	#TAB
 '\t'

	)

132 #ifde‡
ABORT_CHAR


133 #unde‡
ABORT_CHAR


135 
	#ABORT_CHAR
 
	`CTRL
('G')

	)

137 #ifde‡
PAGE


138 #unde‡
PAGE


140 
	#PAGE
 
	`CTRL
('L')

	)

142 #ifde‡
SPACE


143 #unde‡
SPACE


145 
	#SPACE
 ' '

	)

147 #ifde‡
ESC


148 #unde‡
ESC


150 
	#ESC
 
	`CTRL
('[')

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
58
899
lapi.c
lauxlib.c
lbaselib.c
lbitlib.c
lcode.c
lcorolib.c
lctype.c
ldblib.c
ldebug.c
ldo.c
ldump.c
lfunc.c
lgc.c
linit.c
liolib.c
llex.c
lmathlib.c
lmem.c
loadlib.c
lobject.c
lopcodes.c
loslib.c
lparser.c
lstate.c
lstring.c
lstrlib.c
ltable.c
ltablib.c
ltm.c
lua.c
lua_open.c
lundump.c
lvm.c
lzio.c
/usr/include/dlfcn.h
/usr/include/math.h
/usr/include/readline/history.h
/usr/include/readline/readline.h
/usr/include/stdio.h
/usr/include/unistd.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/readline/keymaps.h
/usr/include/readline/rlstdc.h
/usr/include/readline/rltypedefs.h
/usr/include/readline/tilde.h
/usr/include/time.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/readline/chardefs.h
/usr/include/stdc-predef.h
/usr/include/xlocale.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/string.h
/usr/include/wchar.h
/usr/include/wctype.h
